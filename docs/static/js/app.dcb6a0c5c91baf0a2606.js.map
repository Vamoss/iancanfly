{"version":3,"sources":["webpack:///./static/js/Math.js","webpack:///./src/js/resources/Resource.js","webpack:///./src/js/ships/Ship.js","webpack:///./src/js/ships/Parachute.js","webpack:///./src/js/ships/Balloon.js","webpack:///./src/js/ships/Plane.js","webpack:///./src/js/ships/Spaceship.js","webpack:///./src/js/ships/Ovni.js","webpack:///./src/js/ships/Spaceship2.js","webpack:///./src/js/resources/Coin.js","webpack:///./src/js/particles/ParticleManager.js","webpack:///./src/app.js","webpack:///./src/js/main.js","webpack:///./static/js/GLTFLoader.js"],"names":["Math","clamp","value","min","max","map","x","a1","a2","b1","b2","Resource","modelUrl","scale","rotation","audioUrl","audioListener","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default","this","_this","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default","__proto__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default","call","model","sound","loadModel","loadAudio","t","GLTFLoader","load","gltf","scene","children","clone","set","lookAt","xhr","error","console","THREE","Audio","AudioLoader","buffer","setBuffer","setLoop","setVolume","require","Ship","velocity","audioPlay","classCallCheck_default","possibleConstructorReturn_default","get_prototype_of_default","center","setFromObject","getCenter","emit","play","Parachute","Balloon","PI","Ovni","Parachute2","Coin","ParticleManager","camera","_scene","_camera","prevCamX","position","prevCamY","y","prevCamZ","z","maxParticles","spread","particles","p","particle","random","vertices","push","pMaterial","color","size","loadTexture","blending","transparent","particleSystem","sortParticles","add","name","xDiff","yDiff","zDiff","i","geometry","length","verticesNeedUpdate","Main","currentLevel","mouseX","mouseY","prevMouseX","prevMouseY","diffX","diffY","audioList","url","maxX","maxY","velX","minAltitude","altitude","curAltitude","destPos","raycaster","far","direction","normalize","coins","coin","paused","levels","ship","skyColor","decay","Plane","Spaceship","window","innerWidth","innerHeight","_renderer","setPixelRatio","devicePixelRatio","setSize","document","body","appendChild","domElement","light","dirLight","material","emissive","ground","on","addEventListener","onMouseMove","bind","onMouseDown","onMouseUp","onKeyDown","onKeyUp","onWindowResize","initAccelerometer","animate","event","pageX","pageY","e","keyCode","aspect","updateProjectionMatrix","nextLevel","progress","c","removeCoin","oldModelPos","dir","subVectors","distanceToSquared","onResourceCollide","update","lerp","background","fog","prevLevel","render","requestAnimationFrame","startLevel","level","log","copy","isPlaying","stop","resource","increase","index","indexOf","splice","remove","a","sort","b","currentAudio","counter","source","onended","args","frequency","gravityNormalized","orientationBase","GyroNorm","GAME","decimalCount","logger","screenAdjusted","gn","init","then","start","data","dm","gx","gz","catch","alert","manager","undefined","DefaultLoadingManager","prototype","constructor","crossOrigin","onLoad","onProgress","onError","scope","path","LoaderUtils","extractUrlBase","loader","FileLoader","setResponseType","parse","setCrossOrigin","setPath","content","extensions","decodeText","Uint8Array","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","headerView","DataView","BINARY_EXTENSION_HEADER_LENGTH","header","magic","slice","version","getUint32","Error","chunkView","chunkIndex","byteLength","chunkLength","chunkType","BINARY_EXTENSION_CHUNK_TYPES","JSON","contentArray","BIN","byteOffset","json","asset","extensionsUsed","KHR_LIGHTS","lights","lightId","lightNode","Color","fromArray","type","DirectionalLight","PointLight","SpotLight","AmbientLight","constantAttenuation","intensity","linearAttenuation","distance","quadraticAttenuation","fallOffAngle","angle","fallOffExponent","warn","KHR_MATERIALS_COMMON","GLTFMaterialsCommonExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","specularGlossinessParams","getMaterialType","ShaderMaterial","extendParams","params","parser","pbrSpecularGlossiness","shader","ShaderLib","uniforms","UniformsUtils","specularMapParsFragmentChunk","join","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","fragmentShader","replace","roughness","metalness","roughnessMap","metalnessMap","specular","setHex","glossiness","specularMap","glossinessMap","vertexShader","defines","STANDARD","opacity","pending","Array","isArray","diffuseFactor","array","diffuseTexture","assignTexture","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossIndex","Promise","all","createMaterial","isGLTFSpecularGlossinessMaterial","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","envMap","envMapIntensity","refractionRatio","derivatives","cloneMaterial","target","il","refreshUniforms","renderer","group","uvScaleMap","offset","repeat","diffuse","multiplyScalar","isWebGLRenderTarget","texture","matrix","matrixAutoUpdate","setUvTransform","uvTransform","offsetRepeat","flipEnvMap","isCubeTexture","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","GLTFParser","scenes","cameras","animations","MeshPhongMaterial","MeshLambertMaterial","MeshBasicMaterial","materialParams","khrMaterial","keys","materialValues","forEach","v","specularTexture","shininessFactor","shininess","WEBGL_CONSTANTS","WEBGL_COMPONENT_TYPES","Number","Matrix3","Matrix4","Vector2","Vector3","Vector4","Texture","5120","Int8Array","5121","5122","Int16Array","5123","Uint16Array","5125","Uint32Array","5126","Float32Array","WEBGL_FILTERS","9728","NearestFilter","9729","LinearFilter","9984","NearestMipMapNearestFilter","9985","LinearMipMapNearestFilter","9986","NearestMipMapLinearFilter","9987","LinearMipMapLinearFilter","WEBGL_WRAPPINGS","33071","ClampToEdgeWrapping","33648","MirroredRepeatWrapping","10497","RepeatWrapping","WEBGL_TEXTURE_FORMATS","6406","AlphaFormat","6407","RGBFormat","6408","RGBAFormat","6409","LuminanceFormat","6410","LuminanceAlphaFormat","WEBGL_TEXTURE_DATATYPES","UnsignedByteType","32819","UnsignedShort4444Type","32820","UnsignedShort5551Type","33635","UnsignedShort565Type","WEBGL_TYPE_SIZES","BackSide","FrontSide","NeverDepth","LessDepth","EqualDepth","LessEqualDepth","GreaterEqualDepth","NotEqualDepth","AlwaysDepth","AddEquation","SubtractEquation","ReverseSubtractEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","InterpolateSmooth","LINEAR","InterpolateLinear","STEP","InterpolateDiscrete","ALPHA_MODES","resolveURL","test","addMorphTargets","mesh","meshDef","primitiveDef","accessors","targets","morphAttributes","normal","morphTargets","positionAttribute","normalAttribute","attributeName","POSITION","attributes","j","jl","count","setXYZ","getX","getY","getZ","NORMAL","morphNormals","updateMorphTargets","morphTargetInfluences","isPrimitiveEqual","indices","attribA","attribB","keysA","Object","keysB","key","getCachedGeometry","cache","newPrimitive","cached","primitive","options","objects","get","object","removeAll","primitiveCache","textureLoader","TextureLoader","fileLoader","markDefs","getMultiDependencies","dependencies","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinIndex","skinLength","joints","isBone","nodeIndex","nodeLength","nodeDef","skin","isSkinnedMesh","getDependency","cacheKey","dependency","charAt","toUpperCase","getDependencies","defs","def","types","results","pendings","loadBuffer","bufferIndex","bufferDef","buffers","uri","resolve","reject","loadBufferView","bufferViewIndex","bufferViewDef","bufferViews","loadAccessor","accessorIndex","accessorDef","pendingBufferViews","bufferView","sparse","values","bufferAttribute","itemSize","TypedArray","componentType","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","normalized","ib","InterleavedBuffer","InterleavedBufferAttribute","BufferAttribute","itemSizeIndices","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setArray","setX","setY","setZ","setW","textureIndex","URL","webkitURL","textureDef","textures","images","sourceURI","isObjectURL","blob","Blob","mimeType","createObjectURL","Loader","Handlers","revokeObjectURL","flipY","format","internalFormat","sampler","samplers","magFilter","minFilter","wrapS","wrapT","textureName","loadMaterial","materialIndex","materialType","materialDef","materials","materialExtensions","khcExtension","sgExtension","pbrMetallicRoughness","MeshStandardMaterial","metallicRoughness","baseColorFactor","baseColorTexture","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","side","DoubleSide","alphaMode","alphaTest","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","encoding","sRGBEncoding","extras","userData","loadGeometries","primitives","geometries","BufferGeometry","attributeId","addAttribute","setIndex","loadMesh","meshIndex","Group","depthTest","uv2","uv","useVertexColors","useFlatShading","useSkinning","useMorphTargets","vertexColors","VertexColors","needsUpdate","flatShading","mode","SkinnedMesh","skinning","Mesh","drawMode","TriangleStripDrawMode","TriangleFanDrawMode","LineSegments","Line","LineLoop","Points","onBeforeRender","loadCamera","cameraIndex","cameraDef","aspectRatio","xfov","yfov","PerspectiveCamera","radToDeg","znear","zfar","OrthographicCamera","xmag","ymag","loadSkin","skinDef","skinEntry","inverseBindMatrices","accessor","loadAnimation","animationIndex","animationDef","tracks","channels","channel","node","id","input","parameters","output","inputAccessor","outputAccessor","TypedKeyframeTrack","updateMatrix","NumberKeyframeTrack","QuaternionKeyframeTrack","VectorKeyframeTrack","targetName","uuid","interpolation","outputAccessorValues","getW","targetNames","traverse","isMesh","AnimationUtils","arraySlice","AnimationClip","loadNode","Bone","isGroup","child","Object3D","PropertyBinding","sanitizeNodeName","applyMatrix","quaternion","loadScene","buildNodeHierachy","nodeId","parentObject","allNodes","bones","boneInverses","jointId","jointNode","mat","Skeleton","matrixWorld","sceneIndex","sceneDef","Scene","nodeIds","__webpack_exports__"],"mappings":"uCAAAA,KAAAC,MAAA,SAAAC,EAAAC,EAAAC,GACA,OAAAJ,KAAAI,IAAAD,EAAAH,KAAAG,IAAAC,EAAAF,KAGAF,KAAAK,IAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,OAAAD,GAAAH,EAAAC,IAAAG,EAAAD,IAAAD,EAAAD,6KCFMI,cACJ,SAAAA,EAAaC,EAAUC,EAAOC,EAAUC,EAAUC,GAAeC,IAAAC,KAAAP,GAAA,IAAAQ,EAAAC,IAAAF,MAAAP,EAAAU,WAAAC,IAAAX,IAAAY,KAAAL,OAAA,OAG/DC,EAAKP,SAAWA,EAChBO,EAAKN,MAAQA,EACbM,EAAKL,SAAWA,EAChBK,EAAKJ,SAAWA,EAChBI,EAAKH,cAAgBA,EACrBG,EAAKK,MAAQ,KACbL,EAAKM,MAAQ,KAEbN,EAAKO,YACLP,EAAKQ,YAZ0DR,2DAgB/D,IAAIS,EAAIV,MACK,IAAIW,KACVC,KAAK,iBAAmBF,EAAEhB,SAAU,SAAUmB,GACnDH,EAAEJ,MAAQO,EAAKC,MAAMC,SAAS,GAAGC,QACjCN,EAAEJ,MAAMX,MAAMsB,IAAIP,EAAEf,MAAOe,EAAEf,MAAOe,EAAEf,OACtCe,EAAEJ,MAAMY,OAAO,EAAGR,EAAEd,SAAU,IAEhC,SAAUuB,KAGV,SAAUC,GACRC,QAAQD,MAAM,eAAgBA,yCAKhC,IAAIV,EAAIV,KAERA,KAAKO,MAAQ,IAAIe,EAAMC,MAAMvB,KAAKF,gBAEhB,IAAIwB,EAAME,aAChBZ,KAAKZ,KAAKH,SAAU,SAAU4B,GACxCf,EAAEH,MAAMmB,UAAUD,GAClBf,EAAEH,MAAMoB,SAAQ,GAChBjB,EAAEH,MAAMqB,UAAU,aA3CHC,EAAQ,SAgDdpC,yQCQAqC,cApDb,SAAAA,EAAapC,EAAUC,EAAOC,EAAUmC,EAAUlC,EAAUC,EAAekC,GAAWC,IAAAjC,KAAA8B,GAAA,IAAA7B,EAAAiC,IAAAlC,MAAA8B,EAAA3B,WAAAgC,IAAAL,IAAAzB,KAAAL,OAAA,OAGpFC,EAAKP,SAAWA,EAChBO,EAAKN,MAAQA,EACbM,EAAKL,SAAWA,EAChBK,EAAK8B,SAAWA,EAChB9B,EAAKJ,SAAWA,EAChBI,EAAKH,cAAgBA,EACrBG,EAAK+B,UAAYA,EACjB/B,EAAKK,MAAQ,KACbL,EAAKM,MAAQ,KACbN,EAAKmC,OAAS,IAAId,UAAc,EAAG,EAAG,GAEtCrB,EAAKO,YACLP,EAAKQ,YAf+ER,2DAmBpF,IAAIS,EAAIV,MAEK,IAAIW,KACVC,KAAK,iBAAmBZ,KAAKN,SAAU,SAAUmB,GACtDH,EAAEJ,MAAQO,EAAKC,MAAMC,SAAS,GAC9BL,EAAEJ,MAAMX,MAAMsB,IAAIP,EAAEf,MAAOe,EAAEf,MAAOe,EAAEf,OACtCe,EAAE0B,QAAS,IAAId,QAAae,cAAc3B,EAAEJ,OAAOgC,YACnD5B,EAAE6B,KAAK,gBAAiB7B,EAAEJ,QAE5B,SAAUa,KAGV,SAAUC,GACRC,QAAQD,MAAM,eAAgBA,yCAKhC,IAAIV,EAAIV,KAERA,KAAKO,MAAQ,IAAIe,QAAYtB,KAAKF,gBAChB,IAAIwB,eACVV,KAAKZ,KAAKH,SAAU,SAAU4B,GACxCf,EAAEH,MAAMmB,UAAUD,GAClBf,EAAEH,MAAMoB,SAAQ,GAChBjB,EAAEH,MAAMqB,UAAU,IACdlB,EAAEsB,WACJtB,EAAEH,MAAMiC,gBAjDKX,EAAQ,SCMdY,cALb,SAAAA,EAAa3C,GAAe,OAAAmC,IAAAjC,KAAAyC,GAAAP,IAAAlC,MAAAyC,EAAAtC,WAAAgC,IAAAM,IAAApC,KAAAL,KACpB,iBAAkB,IAAK,EAAG,EAAG,0DAA2DF,GAAe,uBAFzFgC,GCMTY,cALb,SAAAA,EAAa5C,GAAe,OAAAmC,IAAAjC,KAAA0C,GAAAR,IAAAlC,MAAA0C,EAAAvC,WAAAgC,IAAAO,IAAArC,KAAAL,KACpB,eAAgB,IAAK,EAAG,EAAG,0DAA2DF,GAAe,uBAFzFgC,GCMPW,cALb,SAAAA,EAAa3C,GAAe,OAAAmC,IAAAjC,KAAAyC,GAAAP,IAAAlC,MAAAyC,EAAAtC,WAAAgC,IAAAM,IAAApC,KAAAL,KACpB,aAAc,EAAGlB,KAAK6D,GAAe,GAAV7D,KAAK6D,GAAU,EAAG,wEAAyE7C,GAAe,uBAFvHgC,GCMTW,cALb,SAAAA,EAAa3C,GAAe,OAAAmC,IAAAjC,KAAAyC,GAAAP,IAAAlC,MAAAyC,EAAAtC,WAAAgC,IAAAM,IAAApC,KAAAL,KACpB,iBAAkB,GAAIlB,KAAK6D,GAAI,EAAG,sDAAuD7C,GAAe,uBAF1FgC,GCMTc,eCLb,SAAAC,EAAa/C,GAAe,OAAAmC,IAAAjC,KAAA6C,GAAAX,IAAAlC,MAAA6C,EAAA1C,WAAAgC,IAAAU,IAAAxC,KAAAL,KACpB,kBAAmB,GAAIlB,KAAK6D,GAAI,EAAG,sDAAuD7C,GAAe,cAF1FgC,eDCvB,SAAAc,EAAa9C,GAAe,OAAAmC,IAAAjC,KAAA4C,GAAAV,IAAAlC,MAAA4C,EAAAzC,WAAAgC,IAAAS,IAAAvC,KAAAL,KACpB,YAAa,GAAIlB,KAAK6D,GAAI,EAAG,sDAAuD7C,GAAe,uBAF1FgC,IEMJgB,cALb,SAAAA,EAAahD,GAAe,OAAAmC,IAAAjC,KAAA8C,GAAAZ,IAAAlC,MAAA8C,EAAA3C,WAAAgC,IAAAW,IAAAzC,KAAAL,KACpB,YAAa,GAAI,EAAG,oDAAqDF,iCAFhEL,GC4EJsD,yBA1Eb,SAAAA,EAAajC,EAAOkC,GAAQf,IAAAjC,KAAA+C,GAAA,IAAA9C,EAAAiC,IAAAlC,MAAA+C,EAAA5C,WAAAgC,IAAAY,IAAA1C,KAAAL,OAG1BC,EAAKgD,OAASnC,EACdb,EAAKiD,QAAUF,EACf/C,EAAKkD,SAAWlD,EAAKiD,QAAQE,SAAShE,EACtCa,EAAKoD,SAAWpD,EAAKiD,QAAQE,SAASE,EACtCrD,EAAKsD,SAAWtD,EAAKiD,QAAQE,SAASI,EAEtCvD,EAAKwD,aAAe,IAEpBxD,EAAKyD,OAAS,IAEdzD,EAAK0D,UAAY,IAAIrC,WAErB,IAAK,IAAIsC,EAAI,EAAGA,EAAI3D,EAAKwD,aAAcG,IAAK,CAC1C,IAAIC,EAAW,IAAIvC,UACjBxC,KAAKgF,SAAW7D,EAAKyD,OAAuB,GAAdzD,EAAKyD,OACnC5E,KAAKgF,SAAW7D,EAAKyD,OAAuB,GAAdzD,EAAKyD,OACnB,IAAhB5E,KAAKgF,UAGP7D,EAAK0D,UAAUI,SAASC,KAAKH,GAG/B,IAAII,EAAY,IAAI3C,kBAClB4C,MAAO,SACPC,KAAM,EACNhF,IAAKmC,aAAiB8C,YACpB,gCAEFC,SAAU/C,mBACVgD,aAAa,IAhCW,OAkC1BrE,EAAKsE,eAAiB,IAAIjD,SAAarB,EAAK0D,UAAWM,GACvDhE,EAAKsE,eAAeC,eAAgB,EAEpCvE,EAAKgD,OAAOwB,IAAIxE,EAAKsE,gBArCKtE,mDAwCvByE,qCAOH,IAAIC,EAAQ3E,KAAKkD,QAAQE,SAAShE,EAAIY,KAAKmD,SACvCyB,EAAQ5E,KAAKkD,QAAQE,SAASE,EAAItD,KAAKqD,SACvCwB,EAAQ7E,KAAKkD,QAAQE,SAASI,EAAIxD,KAAKuD,SAE3CvD,KAAKmD,SAAWnD,KAAKkD,QAAQE,SAAShE,EACtCY,KAAKqD,SAAWrD,KAAKkD,QAAQE,SAASE,EACtCtD,KAAKuD,SAAWvD,KAAKkD,QAAQE,SAASI,EAEtCxD,KAAKuE,eAAenB,SAASnC,IAAIjB,KAAKkD,QAAQE,SAAShE,EAAGY,KAAKkD,QAAQE,SAASE,EAAGtD,KAAKkD,QAAQE,SAASI,GAEzG,IAAK,IAAIsB,EAAI,EAAGA,EAAI9E,KAAKuE,eAAeQ,SAAShB,SAASiB,OAAQF,IAAK,CACrE,IAAIjB,EAAW7D,KAAKuE,eAAeQ,SAAShB,SAASe,GACrDjB,EAASzE,GAAKuF,EACdd,EAASP,GAAKsB,EACdf,EAASL,GAAKqB,EAEVhB,EAASL,GAAK,KAChBK,EAASzE,EAAIN,KAAKgF,SAAW9D,KAAK0D,OAAuB,GAAd1D,KAAK0D,OAChDG,EAASP,EAAIxE,KAAKgF,SAAW9D,KAAK0D,OAAuB,GAAd1D,KAAK0D,OAChDG,EAASL,EAAI,IAAsB,IAAhB1E,KAAKgF,UAI5B9D,KAAKuE,eAAeQ,SAASE,oBAAqB,SAzEjCpD,EAAQ,+BCK7B,eCWE,SAAAqD,IAAejD,IAAAjC,KAAAkF,GACb,IAAIxE,EAAIV,KAERA,KAAKmF,aAAe,EAEpBnF,KAAKoF,OAAS,EACdpF,KAAKqF,OAAS,EACdrF,KAAKsF,WAAatF,KAAKoF,OACvBpF,KAAKuF,WAAavF,KAAKqF,OACvBrF,KAAKwF,MAAQ,EACbxF,KAAKyF,MAAQ,EAEbzF,KAAK0F,YAEDC,IAAK,oDACLpF,MAAO,OAGPoF,IAAK,kCACLpF,MAAO,OAGPoF,IAAK,wCACLpF,MAAO,OAGPoF,IAAK,2DACLpF,MAAO,OAGXP,KAAKF,cAAgB,IAAIwB,gBAEzBtB,KAAK4F,KAAO,GACZ5F,KAAK6F,KAAO,GACZ7F,KAAK8F,KAAO,IACZ9F,KAAK+F,YAAc,IACnB/F,KAAKgG,SAAWhG,KAAK+F,YACrB/F,KAAKiG,YAAcjG,KAAKgG,SACxBhG,KAAKkG,QAAU,IAAI5E,UACnBtB,KAAKmG,UAAY,IAAI7E,YACrBtB,KAAKmG,UAAUC,IAAM,EACrBpG,KAAKqG,UAAY,IAAI/E,UAAc,EAAG,EAAG,IACzCtB,KAAKqG,UAAUC,YACftG,KAAKuG,SACLvG,KAAKwG,KAAO,IAAI1D,EAAK9C,KAAKF,eAC1BE,KAAKyG,QAAS,EAEdzG,KAAK0G,SAEDC,KAAM,IAAIlE,EAAUzC,KAAKF,eACzBkG,SAAUhG,KAAK+F,YACfa,SAAU,IAAItF,QAAY,UAC1BuF,MAAO,IACPN,MAAO,KAGPI,KAAM,IAAIjE,EAAQ1C,KAAKF,eACvBkG,SAAU,IACVY,SAAU,IAAItF,QAAY,UAC1BuF,MAAO,IACPN,MAAO,KAGPI,KAAM,IAAIG,EAAM9G,KAAKF,eACrBkG,SAAU,IACVY,SAAU,IAAItF,QAAY,UAC1BuF,MAAO,IACPN,MAAO,KAGPI,KAAM,IAAII,EAAU/G,KAAKF,eACzBkG,SAAU,IACVY,SAAU,IAAItF,QAAY,UAC1BuF,MAAO,IACPN,MAAO,KAUPI,KAAM,IAAI/D,EAAK5C,KAAKF,eACpBkG,SAAU,IACVY,SAAU,IAAItF,QAAY,GAC1BuF,MAAO,IACPN,MAAO,IAIXvG,KAAKkD,QAAU,IAAI5B,oBAAwB,GAAI0F,OAAOC,WAAaD,OAAOE,YAAa,EAAG,KAC1FlH,KAAKkD,QAAQE,SAASnC,KAAK,IAAKjB,KAAKgG,SAAW,GAAI,GACpDhG,KAAKkD,QAAQhC,OAAO,EAAGlB,KAAKgG,SAAU,KACtChG,KAAKkD,QAAQuB,IAAIzE,KAAKF,eAEtBE,KAAKiD,OAAS,IAAI3B,QAElBtB,KAAKmH,UAAY,IAAI7F,gBACrBtB,KAAKmH,UAAUC,cAAcJ,OAAOK,kBACpCrH,KAAKmH,UAAUG,QAAQN,OAAOC,WAAYD,OAAOE,aACjDK,SAASC,KAAKC,YAAYzH,KAAKmH,UAAUO,YAiBzC,IAAIC,EAAQ,IAAIrG,kBAAsB,SAAU,SAChDqG,EAAMjD,KAAO,mBACbiD,EAAMvE,SAASnC,IAAI,EAAG,EAAG,GACzBP,EAAEuC,OAAOwB,IAAIkD,GAEb,IAAIC,EAAW,IAAItG,mBAAuB,UAC1CsG,EAASlD,KAAO,cAChBkD,EAASxE,SAASnC,KAAK,GAAI,GAAI,IAC/BP,EAAEuC,OAAOwB,IAAImD,GAEb5H,KAAK2D,UAAY,IAAIZ,EAAgB/C,KAAKiD,OAAQjD,KAAKkD,SAEvD,IAAM6B,EAAW,IAAIzD,iBAAqB,EAAG,IAAK,KAC5CuG,EAAW,IAAIvG,qBAAyB4C,MAAO,MAAU4D,SAAU,QAOzE9H,KAAK+H,OAAS,IAAIzG,OAAWyD,EAAU8C,GACvC7H,KAAK+H,OAAOrD,KAAO,SACnB1E,KAAKiD,OAAOwB,IAAIzE,KAAK+H,QAGrB/H,KAAK+H,OAAOpI,MAAMsB,IADE,aAEpBjB,KAAK+H,OAAO3E,SAASE,GAFD,IAGpBtD,KAAK+H,OAAOnI,SAAS4D,EAAc,GAAV1E,KAAK6D,GAG9B,IAAK,IAAImC,EAAI,EAAGA,EAAI9E,KAAK0G,OAAO1B,OAAQF,IACtC9E,KAAK0G,OAAO5B,GAAG6B,KAAKqB,GAAG,gBAAiB,SAAU1H,GAChDI,EAAEuC,OAAOwB,IAAInE,GACbA,EAAM8C,SAASE,EAAI5C,EAAEsF,WAIzBhG,KAAKmH,UAAUO,WAAWO,iBAAiB,YAAajI,KAAKkI,YAAYC,KAAKnI,OAAO,GACrFA,KAAKmH,UAAUO,WAAWO,iBAAiB,YAAajI,KAAKoI,YAAYD,KAAKnI,OAAO,GACrFA,KAAKmH,UAAUO,WAAWO,iBAAiB,UAAWjI,KAAKqI,UAAUF,KAAKnI,OAAO,GACjFA,KAAKmH,UAAUO,WAAWO,iBAAiB,aAAcjI,KAAKoI,YAAYD,KAAKnI,OAAO,GACtFA,KAAKmH,UAAUO,WAAWO,iBAAiB,WAAYjI,KAAKqI,UAAUF,KAAKnI,OAAO,GAElFuH,SAASU,iBAAiB,UAAWjI,KAAKsI,UAAUH,KAAKnI,OAAO,GAChEuH,SAASU,iBAAiB,QAASjI,KAAKuI,QAAQJ,KAAKnI,OAAO,GAE5DgH,OAAOiB,iBAAiB,SAAUjI,KAAKwI,eAAeL,KAAKnI,OAAO,GAElEA,KAAKS,YACLT,KAAKyI,oBACLzI,KAAK0I,0DAGMC,GACX3I,KAAKoF,OAASuD,EAAMC,MACpB5I,KAAKqF,OAASsD,EAAME,oHAWXC,GACS,KAAdA,EAAEC,UAAgB/I,KAAKyG,QAAUzG,KAAKyG,wCAGnCqC,6CAIP9I,KAAKkD,QAAQ8F,OAAShC,OAAOC,WAAaD,OAAOE,YACjDlH,KAAKkD,QAAQ+F,yBAEbjJ,KAAKmH,UAAUG,QAAQN,OAAOC,WAAYD,OAAOE,+CAMjD,IAAKlH,KAAKyG,OAAQ,CAEhBzG,KAAKwF,QAAUxF,KAAKoF,OAASpF,KAAKsF,YAAc,IAChDtF,KAAKyF,QAAUzF,KAAKqF,OAASrF,KAAKuF,YAAc,IAChDvF,KAAKwF,MAAQ1G,KAAKC,MAAMiB,KAAKwF,OAAQ,EAAG,GACxCxF,KAAKyF,MAAQ3G,KAAKC,MAAMiB,KAAKyF,OAAQ,EAAG,GACxCzF,KAAKsF,WAAatF,KAAKoF,OACvBpF,KAAKuF,WAAavF,KAAKqF,OAGvBrF,KAAKgG,UAAYhG,KAAK0G,OAAO1G,KAAKmF,cAAc0B,MAC5C7G,KAAKgG,SAAWhG,KAAK+F,cAAa/F,KAAKgG,SAAWhG,KAAK+F,aAC3D/F,KAAKiG,aAAoD,KAApCjG,KAAKgG,SAAWhG,KAAKiG,aAE1C,IAAIiD,EAAYlJ,KAAKmF,aAAe,EAChC+D,GAAalJ,KAAK0G,OAAO1B,SAC3BkE,EAAYlJ,KAAKmF,cAEnB,IAAIgE,GAAYnJ,KAAKiG,YAAcjG,KAAK0G,OAAO1G,KAAKmF,cAAca,WAAahG,KAAK0G,OAAOwC,GAAWlD,SAAWhG,KAAK0G,OAAO1G,KAAKmF,cAAca,UAIhJ,GAHAmD,EAAW7H,OAAWvC,MAAMoK,EAAU,EAAG,GAGrCnJ,KAAKwG,KAAKlG,OACRN,KAAKuG,MAAMvB,OAAShF,KAAK0G,OAAO1G,KAAKmF,cAAcoB,OAASzH,KAAKgF,SAAW,IAAM,CACpF,IAAI0C,EAAOxG,KAAKwG,KAAKlG,MAAMU,QAC3BwF,EAAK5G,SAAS4D,EAAI1E,KAAKgF,SAAWhF,KAAK6D,GACvC6D,EAAKpD,SAASnC,IACY,GAAvBnC,KAAKgF,SAAW,IAAW9D,KAAK4F,KACjC9G,KAAKgF,UAAY9D,KAAK6F,KAAO,IAAM,GAAK7F,KAAKiG,YAC7CjG,KAAKkD,QAAQE,SAASI,EAAI,IAAsB,IAAhB1E,KAAKgF,UACvC9D,KAAKiD,OAAOwB,IAAI+B,GAChBxG,KAAKuG,MAAMvC,KAAKwC,GAKpB,IAAK,IAAI4C,EAAIpJ,KAAKuG,MAAMvB,OAAS,EAAGoE,GAAK,EAAGA,IACtCpJ,KAAKuG,MAAM6C,GAAGhG,SAASI,EAAIxD,KAAKkD,QAAQE,SAASI,EACnDxD,KAAKqJ,WAAWrJ,KAAKuG,MAAM6C,IAE3BpJ,KAAKuG,MAAM6C,GAAGxJ,SAAS4D,GAAK,IAIhC,IAAIlD,EAAQN,KAAK0G,OAAO1G,KAAKmF,cAAcwB,KAAKrG,MAChD,GAAIA,EAAO,CACT,IAAIgJ,EAAchJ,EAAM8C,SAASpC,QAGjChB,KAAKkG,QAAQ9G,EAAIN,KAAKK,KAAKa,KAAKwF,OAAQ,EAAG,GAAIxF,KAAK4F,KAAM5F,KAAK4F,MAC/D5F,KAAKkG,QAAQ5C,EAAIxE,KAAKK,KAAKa,KAAKyF,OAAQ,EAAG,EAAG,EAAGzF,KAAK6F,MAAQ7F,KAAKiG,YACnE3F,EAAM8C,SAAShE,GAA2C,KAArCY,KAAKkG,QAAQ9G,EAAIkB,EAAM8C,SAAShE,GACrDkB,EAAM8C,SAASE,GAA2C,KAArCtD,KAAKkG,QAAQ5C,EAAIhD,EAAM8C,SAASE,GACrDhD,EAAM8C,SAASI,GAAKxD,KAAK0G,OAAO1G,KAAKmF,cAAcwB,KAAK5E,SAAW/B,KAAK8F,KAGxE9F,KAAKkD,QAAQE,SAASI,EAAIlD,EAAM8C,SAASI,EAAI,GAC7CxD,KAAKkD,QAAQE,SAASE,EAAItD,KAAKiG,YAAc,GAG7CjG,KAAK+H,OAAO3E,SAASI,EAAIlD,EAAM8C,SAASI,EAIxC,IAAI+F,EAAM,IAAIjI,UACdiI,EAAIC,WAAWlJ,EAAM8C,SAAUkG,GAC/BC,EAAI9E,IAAInE,EAAM8C,UACd9C,EAAMY,OAAOqI,GACbjJ,EAAMV,SAAS0D,GAAKtD,KAAK0G,OAAO1G,KAAKmF,cAAcwB,KAAK/G,SAIxD,IADA,IAAIwD,EAAW9C,EAAM8C,SAASpC,QAAQyD,IAAIzE,KAAK0G,OAAO1G,KAAKmF,cAAcwB,KAAKvE,QACrE0C,EAAI9E,KAAKuG,MAAMvB,OAAS,EAAGF,GAAK,EAAGA,IACtC1B,EAASqG,kBAAkBzJ,KAAKuG,MAAMzB,GAAG1B,UAAY,KACvDpD,KAAK0J,kBAAkB1J,KAAKuG,MAAMzB,IAMxC9E,KAAK2D,UAAUgG,SAGf,IAAI/C,EAAW5G,KAAK0G,OAAO1G,KAAKmF,cAAcyB,SAAS5F,QACvD4F,EAASgD,KAAK5J,KAAK0G,OAAOwC,GAAWtC,SAAUuC,GAC/CnJ,KAAKiD,OAAO4G,WAAajD,EACzB5G,KAAKiD,OAAO6G,IAAM,IAAIxI,UAAcsF,EAAU,MAG1CuC,GAAY,EACdnJ,KAAK+J,YACIZ,GAAY,GACrBnJ,KAAKkJ,YAMTlJ,KAAKmH,UAAU6C,OAAOhK,KAAKiD,OAAQjD,KAAKkD,SAIxC+G,sBAAsBjK,KAAK0I,QAAQP,KAAKnI,2CAIxC,IAAIkJ,EAAYlJ,KAAKmF,aAAe,EAChC+D,GAAalJ,KAAK0G,OAAO1B,SAAQkE,EAAYlJ,KAAKmF,cAElD+D,IAAclJ,KAAKmF,cAEvBnF,KAAKkK,WAAWhB,uCAIhB,IAAIa,EAAY/J,KAAKmF,aAAe,EAChC4E,GAAa,IAAGA,EAAY,GAE5BA,IAAc/J,KAAKmF,cAEvBnF,KAAKkK,WAAWH,sCAGNI,GACV9I,QAAQ+I,IAAI,aAAcD,GAC1BnK,KAAK0G,OAAOyD,GAAOxD,KAAKrG,MAAM8C,SAASiH,KAAKrK,KAAK0G,OAAO1G,KAAKmF,cAAcwB,KAAKrG,MAAM8C,UAClFpD,KAAK0G,OAAO1G,KAAKmF,cAAcwB,KAAKpG,MAAM+J,WAC5CtK,KAAK0G,OAAO1G,KAAKmF,cAAcwB,KAAKpG,MAAMgK,OAE5CvK,KAAKmF,aAAegF,EACpBnK,KAAK0G,OAAO1G,KAAKmF,cAAcwB,KAAKpG,MAAMiC,iDAGzBgI,GACjB,IAAIC,EAAW,GAGXzK,KAAKiG,YAAcjG,KAAKgG,WAAUyE,GAAY,GAElDzK,KAAKgG,UAAYyE,GAAYzK,KAAKmF,aAAe,GAEjDnF,KAAKwG,KAAKjG,MAAMiC,OAEhBxC,KAAKqJ,WAAWmB,sCAGNhE,GACV,IAAIkE,EAAQ1K,KAAKuG,MAAMoE,QAAQnE,GAC3BkE,GAAS,GACX1K,KAAKuG,MAAMqE,OAAOF,EAAO,GAG3B1K,KAAKiD,OAAO4H,OAAOrE,uCAGR,IAAAvG,EAAAD,KACXA,KAAK0F,UAAY1F,KAAK0F,UACnBvG,IAAI,SAAC2L,GAAD,OAASC,KAAMjM,KAAKgF,SAAU9E,MAAO8L,KACzCC,KAAK,SAACD,EAAGE,GAAJ,OAAUF,EAAEC,KAAOC,EAAED,OAC1B5L,IAAI,SAAC2L,GAAD,OAAOA,EAAE9L,QAEhBgB,KAAKiL,aAAe,EACpB,IAAIC,GAAW,EACXxK,EAAIV,KAERA,KAAK0F,UAAUvG,IAAI,SAAC2L,GAClBA,EAAEJ,QAAUQ,EACZJ,EAAEvK,MAAQ,IAAIe,QAAYrB,EAAKH,gBACb,IAAIwB,eACVV,KAAKkK,EAAEnF,IAAK,SAAUlE,GAChCqJ,EAAEvK,MAAMmB,UAAUD,GAClBqJ,EAAEvK,MAAMoB,SAAQ,GAChBmJ,EAAEvK,MAAMqB,UAAU,IACF,IAAZkJ,EAAEJ,QACJI,EAAEvK,MAAMiC,OACRsI,EAAEvK,MAAM4K,OAAOC,QAAU,WACvB/J,QAAQ+I,IAAI,cAAe1J,EAAEuK,aAAcvK,EAAEgF,UAAUV,OAAQ8F,EAAEJ,OACjEhK,EAAEuK,eACEvK,EAAEuK,cAAgBvK,EAAEgF,UAAUV,SAAQtE,EAAEuK,aAAe,GAC3D5J,QAAQ+I,IAAI,cAAe1J,EAAEuK,aAAcvK,EAAEgF,UAAUV,OAAQ8F,EAAEJ,OAEjEhK,EAAEgF,UAAUhF,EAAEuK,cAAc1K,MAAMiC,yDAQ1C,IAAI6I,GACFC,UAAW,GACXC,mBAAmB,EACnBC,gBAAiBC,IAASC,KAC1BC,aAAc,EACdC,OAAQ,KACRC,gBAAgB,GAGdC,EAAK,IAAIL,IAET/K,EAAIV,KACR8L,EAAGC,KAAKV,GAAMW,KAAK,WACjBF,EAAGG,MAAM,SAAUC,GACD,GAAZA,EAAKC,GAAGC,IAAqB,GAAZF,EAAKC,GAAGE,KAC3B3L,EAAE0E,OAAuB,IAAb8G,EAAKC,GAAGC,GACpB1L,EAAE2E,OAAuB,IAAb6G,EAAKC,GAAGE,QAGvBC,MAAM,SAAUxD,GACjByD,MAAM,iKC5aZ,SAAAjL,GAQA,MAAAX,EAAA,WAEA,SAAAA,EAAA6L,GAEAxM,KAAAwM,aAAAC,IAAAD,IAAAlL,EAAAoL,sBAIA/L,EAAAgM,WAEAC,YAAAjM,EAEAkM,YAAA,YAEAjM,KAAA,SAAA+E,EAAAmH,EAAAC,EAAAC,GAEA,IAAAC,EAAAjN,KAEAkN,OAAAT,IAAAzM,KAAAkN,KAAAlN,KAAAkN,KAAA5L,EAAA6L,YAAAC,eAAAzH,GAEA0H,EAAA,IAAA/L,EAAAgM,WAAAL,EAAAT,SAEAa,EAAAE,gBAAA,eAEAF,EAAAzM,KAAA+E,EAAA,SAAAuG,GAEA,IAEAe,EAAAO,MAAAtB,EAAAgB,EAAAJ,EAAAE,GAEK,MAAAlE,GAEL,QAAA2D,IAAAO,EAMA,MAAAlE,EAJAkE,EAAAlE,KAUIiE,EAAAC,IAIJS,eAAA,SAAAzO,GAGA,OADAgB,KAAA6M,YAAA7N,EACAgB,MAIA0N,QAAA,SAAA1O,GAGA,OADAgB,KAAAkN,KAAAlO,EACAgB,MAIAwN,MAAA,SAAAtB,EAAAgB,EAAAJ,EAAAE,GAEA,IAAAW,EACAC,KAEA,oBAAA1B,EAEAyB,EAAAzB,OAMA,GAFA5K,EAAA6L,YAAAU,WAAA,IAAAC,WAAA5B,EAAA,QAEA6B,EAAA,CAEA,IAEAH,EAAAI,EAAAC,iBAAA,IA+TA,SAAA/B,GAEAlM,KAAA0E,KAAAsJ,EAAAC,gBACAjO,KAAA2N,QAAA,KACA3N,KAAAwH,KAAA,KAEA,IAAA0G,EAAA,IAAAC,SAAAjC,EAAA,EAAAkC,GAQA,GANApO,KAAAqO,QACAC,MAAAhN,EAAA6L,YAAAU,WAAA,IAAAC,WAAA5B,EAAAqC,MAAA,OACAC,QAAAN,EAAAO,UAAA,MACAzJ,OAAAkJ,EAAAO,UAAA,OAGAzO,KAAAqO,OAAAC,QAAAP,EAEA,UAAAW,MAAA,qDAEG,GAAA1O,KAAAqO,OAAAG,QAAA,EAEH,UAAAE,MAAA,gFAIA,IAAAC,EAAA,IAAAR,SAAAjC,EAAAkC,GACAQ,EAAA,EAEA,KAAAA,EAAAD,EAAAE,YAAA,CAEA,IAAAC,EAAAH,EAAAF,UAAAG,GAAA,GACAA,GAAA,EAEA,IAAAG,EAAAJ,EAAAF,UAAAG,GAAA,GAGA,GAFAA,GAAA,EAEAG,IAAAC,EAAAC,KAAA,CAEA,IAAAC,EAAA,IAAApB,WAAA5B,EAAAkC,EAAAQ,EAAAE,GACA9O,KAAA2N,QAAArM,EAAA6L,YAAAU,WAAAqB,QAEI,GAAAH,IAAAC,EAAAG,IAAA,CAEJ,IAAAC,EAAAhB,EAAAQ,EACA5O,KAAAwH,KAAA0E,EAAAqC,MAAAa,IAAAN,GAMAF,GAAAE,EAIA,UAAA9O,KAAA2N,QAEA,UAAAe,MAAA,6CAtXA,CAAAxC,GAEM,MAAA9K,GAGN,YADA4L,KAAA5L,IAKAuM,EAAAC,EAAAI,EAAAC,iBAAAN,aAIAA,EAAArM,EAAA6L,YAAAU,WAAA,IAAAC,WAAA5B,IAMA,IAAAmD,EAAAJ,KAAAzB,MAAAG,QAEAlB,IAAA4C,EAAAC,OAAAD,EAAAC,MAAAd,QAAA,KAEAxB,KAAA,IAAA0B,MAAA,2GAKAW,EAAAE,iBAEAF,EAAAE,eAAA5E,QAAAqD,EAAAwB,aAAA,IAEA5B,EAAAI,EAAAwB,YAAA,IAoGA,SAAAH,GAEArP,KAAA0E,KAAAsJ,EAAAwB,WAEAxP,KAAAyP,UAEA,IACAA,GADAJ,EAAAzB,YAAAyB,EAAAzB,WAAAI,EAAAwB,iBACAC,WAEA,QAAAC,KAAAD,EAAA,CAEA,IACAE,EADAhI,EAAA8H,EAAAC,GAGAxL,GAAA,IAAA5C,EAAAsO,OAAAC,UAAAlI,EAAAzD,OAEA,OAAAyD,EAAAmI,MAEA,mBACAH,EAAA,IAAArO,EAAAyO,iBAAA7L,IACAd,SAAAnC,IAAA,OACA,MAEA,YACA0O,EAAA,IAAArO,EAAA0O,WAAA9L,GACA,MAEA,YACAyL,EAAA,IAAArO,EAAA2O,UAAA/L,IACAd,SAAAnC,IAAA,OACA,MAEA,cACA0O,EAAA,IAAArO,EAAA4O,aAAAhM,GAKAyL,SAEAlD,IAAA9E,EAAAwI,sBAEAR,EAAAS,UAAAzI,EAAAwI,0BAIA1D,IAAA9E,EAAA0I,oBAEAV,EAAAW,SAAA,EAAA3I,EAAA0I,wBAIA5D,IAAA9E,EAAA4I,uBAEAZ,EAAA9I,MAAAc,EAAA4I,2BAIA9D,IAAA9E,EAAA6I,eAEAb,EAAAc,MAAA9I,EAAA6I,mBAIA/D,IAAA9E,EAAA+I,iBAEArP,QAAAsP,KAAA,qEAIAhB,EAAAjL,KAAAiD,EAAAjD,MAAA,SAAAgL,EACA1P,KAAAyP,OAAAC,GAAAC,IA3KA,CAAAN,IAIAA,EAAAE,eAAA5E,QAAAqD,EAAA4C,uBAAA,IAEAhD,EAAAI,EAAA4C,sBAAA,IAAAC,EAAAxB,IAIAA,EAAAE,eAAA5E,QAAAqD,EAAA8C,wCAAA,IAEAlD,EAAAI,EAAA8C,uCAAA,IAqVA,WAEA,OAEApM,KAAAsJ,EAAA8C,sCAEAC,0BACA,QACA,MACA,WACA,oBACA,QACA,iBACA,WACA,oBACA,cACA,UACA,YACA,YACA,kBACA,oBACA,mBACA,cACA,WACA,gBACA,aACA,WACA,SACA,kBACA,mBAGAC,gBAAA,WAEA,OAAA1P,EAAA2P,gBAIAC,aAAA,SAAAC,EAAAtJ,EAAAuJ,GAEA,IAAAC,EAAAxJ,EAAA+F,WAAA5N,KAAA0E,MAEA4M,EAAAhQ,EAAAiQ,UAAA,SAEAC,EAAAlQ,EAAAmQ,cAAAzQ,MAAAsQ,EAAAE,UAEAE,GACA,yBACA,mCACA,UACAC,KAAA,MAEAC,GACA,2BACA,qCACA,UACAD,KAAA,MAEAE,GACA,kCACA,yBACA,wDACA,mDACA,oFACA,yCACA,UACAF,KAAA,MAEAG,GACA,uCACA,2BACA,4DACA,kFACA,2CACA,UACAH,KAAA,MAEAI,GACA,6BACA,4CACA,2EACA,gDACAJ,KAAA,MAEAK,EAAAV,EAAAU,eACAC,QAAA,sCACAA,QAAA,2BAAwC,0BACxCA,QAAA,2BAAwC,6BACxCA,QAAA,wCAAAP,GACAO,QAAA,wCAAAL,GACAK,QAAA,mCAAAJ,GACAI,QAAA,mCAAAH,GACAG,QAAA,sCAAAF,UAEAP,EAAAU,iBACAV,EAAAW,iBACAX,EAAAY,oBACAZ,EAAAa,aAEAb,EAAAc,UAAyBtT,OAAA,IAAAsC,EAAAsO,OAAA2C,OAAA,UACzBf,EAAAgB,YAA2BxT,MAAA,IAC3BwS,EAAAiB,aAA4BzT,MAAA,MAC5BwS,EAAAkB,eAA8B1T,MAAA,MAE9BmS,EAAAwB,aAAArB,EAAAqB,aACAxB,EAAAa,iBACAb,EAAAK,WACAL,EAAAyB,SAAsBC,SAAA,IAEtB1B,EAAAjN,MAAA,IAAA5C,EAAAsO,MAAA,OACAuB,EAAA2B,QAAA,EAEA,IAAAC,KAEA,GAAAC,MAAAC,QAAA5B,EAAA6B,eAAA,CAEA,IAAAC,EAAA9B,EAAA6B,cAEA/B,EAAAjN,MAAA2L,UAAAsD,GACAhC,EAAA2B,QAAAK,EAAA,GAoBA,QAhBA1G,IAAA4E,EAAA+B,gBAEAL,EAAA/O,KAAAoN,EAAAiC,cAAAlC,EAAA,MAAAE,EAAA+B,eAAA1I,QAIAyG,EAAArJ,SAAA,IAAAxG,EAAAsO,MAAA,OACAuB,EAAAqB,gBAAA/F,IAAA4E,EAAAiC,iBAAAjC,EAAAiC,iBAAA,EACAnC,EAAAmB,SAAA,IAAAhR,EAAAsO,MAAA,OAEAoD,MAAAC,QAAA5B,EAAAkC,iBAEApC,EAAAmB,SAAAzC,UAAAwB,EAAAkC,qBAIA9G,IAAA4E,EAAAmC,0BAAA,CAEA,IAAAC,EAAApC,EAAAmC,0BAAA9I,MACAqI,EAAA/O,KAAAoN,EAAAiC,cAAAlC,EAAA,gBAAAsC,IACAV,EAAA/O,KAAAoN,EAAAiC,cAAAlC,EAAA,cAAAsC,IAIA,OAAAC,QAAAC,IAAAZ,IAIAa,eAAA,SAAAzC,GAIA,IAAAtJ,EAAA,IAAAvG,EAAA2P,gBACA2B,QAAAzB,EAAAyB,QACAD,aAAAxB,EAAAwB,aACAX,eAAAb,EAAAa,eACAR,SAAAL,EAAAK,SACA1H,KAAA,EACA2F,QAAA,EACAqD,QAAA3B,EAAA2B,QACAxO,YAAA6M,EAAA7M,cA4CA,OAzCAuD,EAAAgM,kCAAA,EAEAhM,EAAA3D,MAAAiN,EAAAjN,MAEA2D,EAAA1I,SAAAsN,IAAA0E,EAAAhS,IAAA,KAAAgS,EAAAhS,IAEA0I,EAAAiM,SAAA,KACAjM,EAAAkM,kBAAA,EAEAlM,EAAAmM,WAAAvH,IAAA0E,EAAA6C,MAAA,KAAA7C,EAAA6C,MACAnM,EAAAoM,eAAA,EAEApM,EAAAC,SAAAqJ,EAAArJ,SACAD,EAAAqM,kBAAA,EACArM,EAAAsM,iBAAA1H,IAAA0E,EAAAgD,YAAA,KAAAhD,EAAAgD,YAEAtM,EAAAuM,aAAA3H,IAAA0E,EAAAiD,QAAA,KAAAjD,EAAAiD,QACAvM,EAAAwM,UAAA,EAEAxM,EAAAyM,eAAA7H,IAAA0E,EAAAmD,UAAA,KAAAnD,EAAAmD,UACAnD,EAAAoD,cAAA1M,EAAA0M,YAAApD,EAAAoD,aAEA1M,EAAA2M,gBAAA,KACA3M,EAAA4M,kBAAA,EACA5M,EAAA6M,iBAAA,EAEA7M,EAAA4K,iBAAAhG,IAAA0E,EAAAsB,YAAA,KAAAtB,EAAAsB,YACA5K,EAAAyK,SAAAnB,EAAAmB,SAEAzK,EAAA6K,mBAAAjG,IAAA0E,EAAAuB,cAAA,KAAAvB,EAAAuB,cACA7K,EAAA2K,WAAArB,EAAAqB,WAEA3K,EAAA8M,SAAA,KAEA9M,EAAA+M,YAAAnI,IAAA0E,EAAAyD,OAAA,KAAAzD,EAAAyD,OACA/M,EAAAgN,gBAAA,EAEAhN,EAAAiN,gBAAA,IAEAjN,EAAA+F,WAAAmH,aAAA,EAEAlN,GAgBAmN,cAAA,SAAA7J,GAEA,IAAA8J,EAAA9J,EAAAnK,QAEAiU,EAAApB,kCAAA,EAIA,IAFA,IAAA1C,EAAAnR,KAAA+Q,yBAEAjM,EAAA,EAAAoQ,EAAA/D,EAAAnM,OAAwCF,EAAAoQ,EAAQpQ,IAEhDmQ,EAAA9D,EAAArM,IAAAqG,EAAAgG,EAAArM,IAIA,OAAAmQ,GAKAE,gBAAA,SAAAC,EAAAtU,EAAAkC,EAAA+B,EAAA8C,EAAAwN,GAEA,IA0BAC,EA6CAC,EACAC,EAxEAhE,EAAA3J,EAAA2J,SACAoB,EAAA/K,EAAA+K,QA6DA,GA3DApB,EAAAsB,QAAA9T,MAAA6I,EAAAiL,QAEAtB,EAAAiE,QAAAzW,MAAAqL,KAAAxC,EAAA3D,OACAsN,EAAA1J,SAAA9I,MAAAqL,KAAAxC,EAAAC,UAAA4N,eAAA7N,EAAAqM,mBAEA1C,EAAArS,IAAAH,MAAA6I,EAAA1I,IACAqS,EAAAiB,YAAAzT,MAAA6I,EAAA4K,YACAjB,EAAAmD,SAAA3V,MAAA6I,EAAA8M,SAEAnD,EAAAsC,SAAA9U,MAAA6I,EAAAiM,SACAtC,EAAAuC,kBAAA/U,MAAA6I,EAAAkM,kBAEAvC,EAAAwC,MAAAhV,MAAA6I,EAAAmM,MACAxC,EAAAyC,eAAAjV,MAAA6I,EAAAoM,eAYApM,EAAA1I,IAEAmW,EAAAzN,EAAA1I,IAEK0I,EAAA4K,YAEL6C,EAAAzN,EAAA4K,YAEK5K,EAAA2M,gBAELc,EAAAzN,EAAA2M,gBAEK3M,EAAAyM,UAELgB,EAAAzN,EAAAyM,UAEKzM,EAAAuM,QAELkB,EAAAzN,EAAAuM,QAEKvM,EAAA6K,cAEL4C,EAAAzN,EAAA6K,cAEK7K,EAAA8M,SAELW,EAAAzN,EAAA8M,SAEK9M,EAAAsM,cAELmB,EAAAzN,EAAAsM,kBAIA1H,IAAA6I,EAYA,GATAA,EAAAK,sBAEAL,IAAAM,cAOAnJ,IAAA6I,EAAAO,OAAA,CAIA,QAAAP,EAAAQ,iBAAA,CAEAP,EAAAD,EAAAC,OACAC,EAAAF,EAAAE,OACA,IAAA5V,EAAA0V,EAAA1V,SACAwC,EAAAkT,EAAAlT,OAEAkT,EAAAO,OAAAE,eAAAR,EAAAnW,EAAAmW,EAAAjS,EAAAkS,EAAApW,EAAAoW,EAAAlS,EAAA1D,EAAAwC,EAAAhD,EAAAgD,EAAAkB,GAIAkO,EAAAwE,YAAAhX,MAAAqL,KAAAiL,EAAAO,aAMAN,EAAAD,EAAAC,OACAC,EAAAF,EAAAE,OAEAhE,EAAAyE,aAAAjX,MAAAiC,IAAAsU,EAAAnW,EAAAmW,EAAAjS,EAAAkS,EAAApW,EAAAoW,EAAAlS,GAMAkO,EAAAoD,OAAA5V,MAAA6I,EAAA+M,OACApD,EAAAqD,gBAAA7V,MAAA6I,EAAAgN,gBACArD,EAAA0E,WAAAlX,MAAA6I,EAAA+M,QAAA/M,EAAA+M,OAAAuB,eAAA,IAEA3E,EAAAsD,gBAAA9V,MAAA6I,EAAAiN,gBAEAtD,EAAAc,SAAAtT,MAAAqL,KAAAxC,EAAAyK,UACAd,EAAAgB,WAAAxT,MAAA6I,EAAA2K,WAEAhB,EAAAkB,cAAA1T,MAAA6I,EAAA6K,cAEAlB,EAAA2C,YAAAnV,MAAA6I,EAAAsM,YACA3C,EAAA4C,QAAApV,MAAA6I,EAAAuM,QACA5C,EAAA8C,UAAAtV,MAAA6I,EAAAyM,UAEA9C,EAAAgD,gBAAAxV,MAAA6I,EAAA2M,gBACAhD,EAAAiD,kBAAAzV,MAAA6I,EAAA4M,kBACAjD,EAAAkD,iBAAA1V,MAAA6I,EAAA6M,iBAEA,OAAAlD,EAAAkB,cAAA1T,YAAAyN,IAAAmG,EAAAwD,oBAEAxD,EAAAwD,kBAAA,GAEAxD,EAAAyD,iBAAA,IAIA,OAAA7E,EAAAkB,cAAA1T,YAAAyN,IAAAmG,EAAAwD,2BAEAxD,EAAAwD,yBACAxD,EAAAyD,uBAvsBA,IAAAC,EAAAjH,EAAAzB,GAEAV,QAAAlN,KAAAkN,MAAA,GACAL,YAAA7M,KAAA6M,YACAL,QAAAxM,KAAAwM,UAIAgB,MAAA,SAAA1M,EAAAyV,EAAAC,EAAAC,EAAAnH,GAYAxC,GAPAhM,QACAyV,SACAC,UACAC,aACAnH,WAKItC,MA8CJ,IAAAgB,GACAC,gBAAA,kBACAuB,WAAA,aACAoB,qBAAA,uBACAE,sCAAA,uCA4FA,SAAAD,EAAAxB,GAEArP,KAAA0E,KAAAsJ,EAAA4C,qBAIAC,EAAAlE,UAAAqE,gBAAA,SAAAnJ,GAIA,OAFAA,EAAA+F,WAAA5N,KAAA0E,MAEAoL,MAEA,kBACA,kBACA,OAAAxO,EAAAoV,kBAEA,oBACA,OAAApV,EAAAqV,oBAEA,qBACA,QACA,OAAArV,EAAAsV,oBAMA/F,EAAAlE,UAAAuE,aAAA,SAAA2F,EAAAhP,EAAAuJ,GAEA,IAAA0F,EAAAjP,EAAA+F,WAAA5N,KAAA0E,MAEAqO,KAEAgE,KAGA,OAAAD,EAAAhH,MAEA,kBACA,kBACAiH,EAAA/S,KAAA,uFACA,MAEA,oBACA+S,EAAA/S,KAAA,kCASA,IAAAgT,KAuCA,OArCAD,EAAAE,QAAA,SAAAC,QAEAzK,IAAAqK,EAAAI,KAAAF,EAAAE,GAAAJ,EAAAI,WAIAzK,IAAAuK,EAAA9D,gBAEA2D,EAAA3S,OAAA,IAAA5C,EAAAsO,OAAAC,UAAAmH,EAAA9D,eACA2D,EAAA/D,QAAAkE,EAAA9D,cAAA,SAIAzG,IAAAuK,EAAA5D,gBAEAL,EAAA/O,KAAAoN,EAAAiC,cAAAwD,EAAA,MAAAG,EAAA5D,eAAA1I,aAIA+B,IAAAuK,EAAAzD,iBAEAsD,EAAAvE,UAAA,IAAAhR,EAAAsO,OAAAC,UAAAmH,EAAAzD,sBAIA9G,IAAAuK,EAAAG,iBAEApE,EAAA/O,KAAAoN,EAAAiC,cAAAwD,EAAA,cAAAG,EAAAG,gBAAAzM,aAIA+B,IAAAuK,EAAAI,kBAEAP,EAAAQ,UAAAL,EAAAI,iBAIA1D,QAAAC,IAAAZ,IAMA,IACAhF,EAAA,OACAK,EAAA,GACAY,GAAqCC,KAAA,WAAAE,IAAA,SA8crC,IAAAmI,EAWA,EAXAA,EAYA,EAZAA,EAaA,EAbAA,EAcA,EAdAA,EAeA,EAfAA,EAgBA,EAhBAA,EAiBA,EAgBAC,GAVAC,OAEAlW,EAAAmW,QACAnW,EAAAoW,QACApW,EAAAqW,QACArW,EAAAsW,QACAtW,EAAAuW,QACAvW,EAAAwW,SAIAC,KAAAC,UACAC,KAAAnK,WACAoK,KAAAC,WACAC,KAAAC,YACAC,KAAAC,YACAC,KAAAC,eAGAC,GACAC,KAAArX,EAAAsX,cACAC,KAAAvX,EAAAwX,aACAC,KAAAzX,EAAA0X,2BACAC,KAAA3X,EAAA4X,0BACAC,KAAA7X,EAAA8X,0BACAC,KAAA/X,EAAAgY,0BAGAC,GACAC,MAAAlY,EAAAmY,oBACAC,MAAApY,EAAAqY,uBACAC,MAAAtY,EAAAuY,gBAGAC,GACAC,KAAAzY,EAAA0Y,YACAC,KAAA3Y,EAAA4Y,UACAC,KAAA7Y,EAAA8Y,WACAC,KAAA/Y,EAAAgZ,gBACAC,KAAAjZ,EAAAkZ,sBAGAC,GACAxC,KAAA3W,EAAAoZ,iBACAC,MAAArZ,EAAAsZ,sBACAC,MAAAvZ,EAAAwZ,sBACAC,MAAAzZ,EAAA0Z,sBA6CAC,GAzCA3Z,EAAA4Z,SACA5Z,EAAA6Z,UAKA7Z,EAAA8Z,WACA9Z,EAAA+Z,UACA/Z,EAAAga,WACAha,EAAAia,eACAja,EAAAka,kBACAla,EAAAma,cACAna,EAAAka,kBACAla,EAAAoa,YAIApa,EAAAqa,YACAra,EAAAsa,iBACAta,EAAAua,wBAIAva,EAAAwa,WACAxa,EAAAya,UACAza,EAAA0a,eACA1a,EAAA2a,uBACA3a,EAAA4a,eACA5a,EAAA6a,uBACA7a,EAAA8a,eACA9a,EAAA+a,uBACA/a,EAAAgb,eACAhb,EAAAib,uBACAjb,EAAAkb,wBASAC,OAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,KAGAC,GACArd,MAAA,QACAsd,YAAA,WACArd,SAAA,aACAsd,QAAA,yBAGAC,GACAC,YAAA9b,EAAA+b,kBACAC,OAAAhc,EAAAic,kBACAC,KAAAlc,EAAAmc,qBAYAC,EACA,SADAA,EAEA,OAFAA,EAGA,QAKA,SAAAC,EAAAhY,EAAAuH,GAGA,uBAAAvH,GAAA,KAAAA,EAAA,GAGA,mBAAAiY,KAAAjY,KAGA,gBAAAiY,KAAAjY,KAGA,aAAAiY,KAAAjY,KAGAuH,EAAAvH,EA+BA,SAAAkY,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,IAAAlZ,EAAA+Y,EAAA/Y,SACA8C,EAAAiW,EAAAjW,SAEAqW,EAAAF,EAAAE,QACAC,EAAApZ,EAAAoZ,gBAEAA,EAAA/a,YACA+a,EAAAC,UAEAvW,EAAAwW,cAAA,EAEA,QAAAvZ,EAAA,EAAAoQ,EAAAgJ,EAAAlZ,OAAuCF,EAAAoQ,EAAQpQ,IAAA,CAE/C,IAGAwZ,EAAAC,EAHAtJ,EAAAiJ,EAAApZ,GACA0Z,EAAA,cAAA1Z,EAIA,QAAA2H,IAAAwI,EAAAwJ,SAAA,CAgBAH,EAAAL,EAAAhJ,EAAAwJ,UAAAzd,QAGA,IAFA,IAAAoC,EAAA2B,EAAA2Z,WAAAtb,SAEAub,EAAA,EAAAC,EAAAN,EAAAO,MAAkDF,EAAAC,EAAQD,IAE1DL,EAAAQ,OACAH,EACAL,EAAAS,KAAAJ,GAAAvb,EAAA2b,KAAAJ,GACAL,EAAAU,KAAAL,GAAAvb,EAAA4b,KAAAL,GACAL,EAAAW,KAAAN,GAAAvb,EAAA6b,KAAAN,SAKI5Z,EAAA2Z,WAAAtb,WAIJkb,EAAAvZ,EAAA2Z,WAAAtb,SAAApC,SAWA,QAPAyL,IAAA6R,IAEAA,EAAA5Z,KAAA8Z,EACAL,EAAA/a,SAAAY,KAAAsa,SAIA7R,IAAAwI,EAAAiK,OAAA,CAEArX,EAAAsX,cAAA,EAIAZ,EAAAN,EAAAhJ,EAAAiK,QAAAle,QACA,IAAAod,EAAArZ,EAAA2Z,WAAAN,OAEA,IAAAO,EAAA,EAAAC,EAAAL,EAAAM,MAAgDF,EAAAC,EAAQD,IAExDJ,EAAAO,OACAH,EACAJ,EAAAQ,KAAAJ,GAAAP,EAAAW,KAAAJ,GACAJ,EAAAS,KAAAL,GAAAP,EAAAY,KAAAL,GACAJ,EAAAU,KAAAN,GAAAP,EAAAa,KAAAN,cAKIlS,IAAA1H,EAAA2Z,WAAAN,SAEJG,EAAAxZ,EAAA2Z,WAAAN,OAAApd,cAIAyL,IAAA8R,IAEAA,EAAA7Z,KAAA8Z,EACAL,EAAAC,OAAApa,KAAAua,IAQA,GAFAT,EAAAsB,0BAEA3S,IAAAsR,EAAAb,QAEA,IAAApY,EAAA,EAAAoQ,EAAA6I,EAAAb,QAAAlY,OAAgDF,EAAAoQ,EAAQpQ,IAExDgZ,EAAAuB,sBAAAva,GAAAiZ,EAAAb,QAAApY,GAQA,SAAAwa,EAAAxU,EAAAE,GAEA,GAAAF,EAAAyU,UAAAvU,EAAAuU,QAEA,SAIA,IAAAC,EAAA1U,EAAA4T,eACAe,EAAAzU,EAAA0T,eACAgB,EAAAC,OAAA5I,KAAAyI,GACAI,EAAAD,OAAA5I,KAAA0I,GAEA,GAAAC,EAAA1a,SAAA4a,EAAA5a,OAEA,SAIA,QAAAF,EAAA,EAAAoQ,EAAAwK,EAAA1a,OAAqCF,EAAAoQ,EAAQpQ,IAAA,CAE7C,IAAA+a,EAAAH,EAAA5a,GAEA,GAAA0a,EAAAK,KAAAJ,EAAAI,GAEA,SAMA,SAIA,SAAAC,EAAAC,EAAAC,GAEA,QAAAlb,EAAA,EAAAoQ,EAAA6K,EAAA/a,OAAqCF,EAAAoQ,EAAQpQ,IAAA,CAE7C,IAAAmb,EAAAF,EAAAjb,GAEA,GAAAwa,EAAAW,EAAAC,UAAAF,GAEA,OAAAC,EAAAlb,SAMA,YAMA,SAAAuR,EAAAjH,EAAAzB,EAAAuS,GAEAngB,KAAAqP,WACArP,KAAA4N,iBACA5N,KAAAmgB,cAGAngB,KAAA+f,MAAA,IAjjCA,WAEA,IAAAK,KAEA,OAEAC,IAAA,SAAAR,GAEA,OAAAO,EAAAP,IAIApb,IAAA,SAAAob,EAAAS,GAEAF,EAAAP,GAAAS,GAIAzV,OAAA,SAAAgV,UAEAO,EAAAP,IAIAU,UAAA,WAEAH,QA0hCApgB,KAAAwgB,kBAEAxgB,KAAAygB,cAAA,IAAAnf,EAAAof,cAAA1gB,KAAAmgB,QAAA3T,SACAxM,KAAAygB,cAAAhT,eAAAzN,KAAAmgB,QAAAtT,aAEA7M,KAAA2gB,WAAA,IAAArf,EAAAgM,WAAAtN,KAAAmgB,QAAA3T,SACAxM,KAAA2gB,WAAApT,gBAAA,eAw2CA,OAp2CA+I,EAAA3J,UAAAa,MAAA,SAAAV,EAAAE,GAEA,IAAAqC,EAAArP,KAAAqP,KAIArP,KAAA+f,MAAAQ,YAGAvgB,KAAA4gB,WAGA5gB,KAAA6gB,sBAEA,QACA,YACA,WAEA7U,KAAA,SAAA8U,GAEA,IAAAvK,EAAAuK,EAAAvK,WACAzV,EAAAyV,EAAAlH,EAAAvO,OAAA,GACA2V,EAAAqK,EAAArK,eACAnH,EAAAD,EAAAC,MACAkH,EAAAsK,EAAAtK,YAEA1J,EAAAhM,EAAAyV,EAAAC,EAAAC,EAAAnH,KAEGhD,MAAAU,IAOHsJ,EAAA3J,UAAAiU,SAAA,WAWA,IATA,IAAAG,EAAA/gB,KAAAqP,KAAA2R,UACAC,EAAAjhB,KAAAqP,KAAA6R,UACAC,EAAAnhB,KAAAqP,KAAA+R,WAEAC,KACAC,KAIAC,EAAA,EAAAC,EAAAP,EAAAjc,OAAwDuc,EAAAC,EAAwBD,IAIhF,IAFA,IAAAE,EAAAR,EAAAM,GAAAE,OAEA3c,EAAA,EAAAoQ,EAAAuM,EAAAzc,OAAuCF,EAAAoQ,EAAQpQ,IAE/Cic,EAAAU,EAAA3c,IAAA4c,QAAA,EAWA,QAAAC,EAAA,EAAAC,EAAAb,EAAA/b,OAAwD2c,EAAAC,EAAwBD,IAAA,CAEhF,IAAAE,EAAAd,EAAAY,QAEAlV,IAAAoV,EAAA/D,YAEArR,IAAA4U,EAAAQ,EAAA/D,QAEAuD,EAAAQ,EAAA/D,MAAAwD,EAAAO,EAAA/D,MAAA,GAIAuD,EAAAQ,EAAA/D,aAKArR,IAAAoV,EAAAC,OAEAX,EAAAU,EAAA/D,MAAAiE,eAAA,IAQA/hB,KAAAqP,KAAAgS,iBACArhB,KAAAqP,KAAAiS,YAUAhL,EAAA3J,UAAAqV,cAAA,SAAAlS,EAAApF,GAEA,IAAAuX,EAAAnS,EAAA,IAAApF,EACAwX,EAAAliB,KAAA+f,MAAAM,IAAA4B,GAEAC,IAGAA,EAAAliB,KADA,OAAA8P,EAAAqS,OAAA,GAAAC,cAAAtS,EAAAvB,MAAA,IACA7D,GACA1K,KAAA+f,MAAAtb,IAAAwd,EAAAC,IAIA,OAAAA,GASA5L,EAAA3J,UAAA0V,gBAAA,SAAAvS,GAEA,IAAAgR,EAAA9gB,KAAA+f,MAAAM,IAAAvQ,GAEA,IAAAgR,EAAA,CAEA,IAAA1P,EAAApR,KACAsiB,EAAAtiB,KAAAqP,KAAAS,GAAA,SAAAA,EAAA,eAEAgR,EAAApN,QAAAC,IAAA2O,EAAAnjB,IAAA,SAAAojB,EAAA7X,GAEA,OAAA0G,EAAA4Q,cAAAlS,EAAApF,MAIA1K,KAAA+f,MAAAtb,IAAAqL,EAAAgR,GAIA,OAAAA,GASAxK,EAAA3J,UAAAkU,qBAAA,SAAA2B,GAKA,IAHA,IAAAC,KACAC,KAEA5d,EAAA,EAAAoQ,EAAAsN,EAAAxd,OAAqCF,EAAAoQ,EAAQpQ,IAAA,CAE7C,IAAAgL,EAAA0S,EAAA1d,GACA9F,EAAAgB,KAAAqiB,gBAAAvS,GAEA9Q,IAAAgN,KAAA,SAAA6T,EAAA7gB,GAEAyjB,EAAA5C,GAAA7gB,GAEImJ,KAAAnI,KAAA8P,GAAA,SAAAA,EAAA,YAEJ4S,EAAA1e,KAAAhF,GAIA,OAAA0U,QAAAC,IAAA+O,GAAA1W,KAAA,WAEA,OAAAyW,KAWAnM,EAAA3J,UAAAgW,WAAA,SAAAC,GAEA,IAAAC,EAAA7iB,KAAAqP,KAAAyT,QAAAF,GACAvV,EAAArN,KAAA2gB,WAEA,GAAAkC,EAAA/S,MAAA,gBAAA+S,EAAA/S,KAEA,UAAApB,MAAA,qBAAAmU,EAAA/S,KAAA,kCAKA,QAAArD,IAAAoW,EAAAE,KAAA,IAAAH,EAEA,OAAAlP,QAAAsP,QAAAhjB,KAAA4N,WAAAI,EAAAC,iBAAAzG,MAIA,IAAA2Y,EAAAngB,KAAAmgB,QAEA,WAAAzM,QAAA,SAAAsP,EAAAC,GAEA5V,EAAAzM,KAAA+c,EAAAkF,EAAAE,IAAA5C,EAAAjT,MAAA8V,OAAAvW,EAAA,WAEAwW,EAAA,IAAAvU,MAAA,4CAAAmU,EAAAE,IAAA,YAaAzM,EAAA3J,UAAAuW,eAAA,SAAAC,GAEA,IAAAC,EAAApjB,KAAAqP,KAAAgU,YAAAF,GAEA,OAAAnjB,KAAAgiB,cAAA,SAAAoB,EAAA3hB,QAAAuK,KAAA,SAAAvK,GAEA,IAAAoN,EAAAuU,EAAAvU,YAAA,EACAO,EAAAgU,EAAAhU,YAAA,EACA,OAAA3N,EAAA8M,MAAAa,IAAAP,MAWAyH,EAAA3J,UAAA2W,aAAA,SAAAC,GAEA,IAAAlU,EAAArP,KAAAqP,KAEAmU,EAAAxjB,KAAAqP,KAAA4O,UAAAsF,GAEAE,KAmBA,YAjBAhX,IAAA+W,EAAAE,WAEAD,EAAAzf,KAAAhE,KAAAgiB,cAAA,aAAAwB,EAAAE,aAIAD,EAAAzf,KAAA,WAIAyI,IAAA+W,EAAAG,SAEAF,EAAAzf,KAAAhE,KAAAgiB,cAAA,aAAAwB,EAAAG,OAAApE,QAAAmE,aACAD,EAAAzf,KAAAhE,KAAAgiB,cAAA,aAAAwB,EAAAG,OAAAC,OAAAF,cAIAhQ,QAAAC,IAAA8P,GAAAzX,KAAA,SAAAqX,GAEA,IAUAlQ,EAAA0Q,EAVAH,EAAAL,EAAA,GAEAS,EAAA7I,EAAAuI,EAAA1T,MACAiU,EAAAxM,EAAAiM,EAAAQ,eAGAC,EAAAF,EAAAG,kBACAC,EAAAF,EAAAH,EACAM,EAAA/U,EAAAgU,YAAAG,EAAAE,YAAAU,WACAC,GAAA,IAAAb,EAAAa,WAIA,GAAAD,OAAAD,EAAA,CAGAhR,EAAA,IAAA4Q,EAAAL,GAGA,IAAAY,EAAA,IAAAhjB,EAAAijB,kBAAApR,EAAAiR,EAAAH,GAEAJ,EAAA,IAAAviB,EAAAkjB,2BAAAF,EAAAR,EAAAN,EAAApU,WAAA6U,EAAAI,QAMAlR,EAFA,OAAAuQ,EAEA,IAAAK,EAAAP,EAAA3E,MAAAiF,GAIA,IAAAC,EAAAL,EAAAF,EAAApU,WAAAoU,EAAA3E,MAAAiF,GAIAD,EAAA,IAAAviB,EAAAmjB,gBAAAtR,EAAA2Q,EAAAO,GAKA,QAAA5X,IAAA+W,EAAAG,OAAA,CAEA,IAAAe,EAAAzJ,EAAAwB,OACAkI,EAAApN,EAAAiM,EAAAG,OAAApE,QAAAyE,eAEAY,EAAApB,EAAAG,OAAApE,QAAAnQ,YAAA,EACAyV,EAAArB,EAAAG,OAAAC,OAAAxU,YAAA,EAEA0V,EAAA,IAAAH,EAAAtB,EAAA,GAAAuB,EAAApB,EAAAG,OAAA9E,MAAA6F,GACAK,EAAA,IAAAhB,EAAAV,EAAA,GAAAwB,EAAArB,EAAAG,OAAA9E,MAAAiF,GAEA,OAAAJ,GAGAG,EAAAmB,SAAAnB,EAAA1Q,MAAA5E,SAIA,QAAAzJ,EAAA,EAAAoQ,EAAA4P,EAAA9f,OAA+CF,EAAAoQ,EAAQpQ,IAAA,CAEvD,IAAA4F,EAAAoa,EAAAhgB,GAMA,GAJA+e,EAAAoB,KAAAva,EAAAqa,EAAAjgB,EAAAgf,IACAA,GAAA,GAAAD,EAAAqB,KAAAxa,EAAAqa,EAAAjgB,EAAAgf,EAAA,IACAA,GAAA,GAAAD,EAAAsB,KAAAza,EAAAqa,EAAAjgB,EAAAgf,EAAA,IACAA,GAAA,GAAAD,EAAAuB,KAAA1a,EAAAqa,EAAAjgB,EAAAgf,EAAA,IACAA,GAAA,YAAApV,MAAA,sEAMA,OAAAmV,KAWAvN,EAAA3J,UAAAvI,YAAA,SAAAihB,GAEA,IACAhW,EAAArP,KAAAqP,KACA8Q,EAAAngB,KAAAmgB,QACAM,EAAAzgB,KAAAygB,cAEA6E,EAAAte,OAAAse,KAAAte,OAAAue,UAEAC,EAAAnW,EAAAoW,SAAAJ,GACAla,EAAAkE,EAAAqW,OAAAF,EAAAra,QACAwa,EAAAxa,EAAA4X,IACA6C,GAAA,EAiBA,YAfAnZ,IAAAtB,EAAAuY,aAIAiC,EAhBA3lB,KAgBAgiB,cAAA,aAAA7W,EAAAuY,YAAA1X,KAAA,SAAA0X,GAEAkC,GAAA,EACA,IAAAC,EAAA,IAAAC,MAAApC,IAA0C5T,KAAA3E,EAAA4a,WAE1C,OADAJ,EAAAL,EAAAU,gBAAAH,MAOAnS,QAAAsP,QAAA2C,GAAA3Z,KAAA,SAAA2Z,GAIA,IAAAtY,EAAA/L,EAAA2kB,OAAAC,SAAA7F,IAAAsF,IAAAlF,EAEA,WAAA/M,QAAA,SAAAsP,EAAAC,GAEA5V,EAAAzM,KAAA+c,EAAAgI,EAAAxF,EAAAjT,MAAA8V,OAAAvW,EAAAwW,OAIGjX,KAAA,SAAA4J,IAIH,IAAAgQ,GAEAN,EAAAa,gBAAAR,GAIA/P,EAAAwQ,OAAA,OAEA3Z,IAAA+Y,EAAA9gB,OAAAkR,EAAAlR,KAAA8gB,EAAA9gB,MAEAkR,EAAAyQ,YAAA5Z,IAAA+Y,EAAAa,OAAAvM,EAAA0L,EAAAa,QAAA/kB,EAAA8Y,gBAEA3N,IAAA+Y,EAAAc,gBAAA1Q,EAAAyQ,SAAAvM,EAAA0L,EAAAc,iBAEAjlB,QAAAsP,KAAA,4KAKAiF,EAAA9F,UAAArD,IAAA+Y,EAAA1V,KAAA2K,EAAA+K,EAAA1V,MAAAxO,EAAAoZ,iBAEA,IACA6L,GADAlX,EAAAmX,cACAhB,EAAAe,aAOA,OALA3Q,EAAA6Q,UAAA/N,EAAA6N,EAAAE,YAAAnlB,EAAAwX,aACAlD,EAAA8Q,UAAAhO,EAAA6N,EAAAG,YAAAplB,EAAAgY,yBACA1D,EAAA+Q,MAAApN,EAAAgN,EAAAI,QAAArlB,EAAAuY,eACAjE,EAAAgR,MAAArN,EAAAgN,EAAAK,QAAAtlB,EAAAuY,eAEAjE,KAaAU,EAAA3J,UAAA0G,cAAA,SAAAwD,EAAAgQ,EAAAxB,GAEA,OAAArlB,KAAAgiB,cAAA,UAAAqD,GAAArZ,KAAA,SAAA4J,GAEAiB,EAAAgQ,GAAAjR,KAWAU,EAAA3J,UAAAma,aAAA,SAAAC,GAGA/mB,KAAAqP,KADA,IAKA2X,EAHApZ,EAAA5N,KAAA4N,WACAqZ,EAAAjnB,KAAAqP,KAAA6X,UAAAH,GAGAlQ,KACAsQ,EAAAF,EAAArZ,eAEAmF,KAEA,GAAAoU,EAAAnZ,EAAA4C,sBAAA,CAEA,IAAAwW,EAAAxZ,EAAAI,EAAA4C,sBACAoW,EAAAI,EAAApW,gBAAAiW,GACAlU,EAAA/O,KAAAojB,EAAAlW,aAAA2F,EAAAoQ,EAfAjnB,YAiBG,GAAAmnB,EAAAnZ,EAAA8C,uCAAA,CAEH,IAAAuW,EAAAzZ,EAAAI,EAAA8C,uCACAkW,EAAAK,EAAArW,gBAAAiW,GACAlU,EAAA/O,KAAAqjB,EAAAnW,aAAA2F,EAAAoQ,EArBAjnB,YAuBG,QAAAyM,IAAAwa,EAAAK,qBAAA,CAKHN,EAAA1lB,EAAAimB,qBAEA,IAAAC,EAAAP,EAAAK,qBAKA,GAHAzQ,EAAA3S,MAAA,IAAA5C,EAAAsO,MAAA,OACAiH,EAAA/D,QAAA,EAEAE,MAAAC,QAAAuU,EAAAC,iBAAA,CAEA,IAAAtU,EAAAqU,EAAAC,gBAEA5Q,EAAA3S,MAAA2L,UAAAsD,GACA0D,EAAA/D,QAAAK,EAAA,GAaA,QATA1G,IAAA+a,EAAAE,kBAEA3U,EAAA/O,KA9CAhE,KA8CAqT,cAAAwD,EAAA,MAAA2Q,EAAAE,iBAAAhd,QAIAmM,EAAA1E,eAAA1F,IAAA+a,EAAAG,eAAAH,EAAAG,eAAA,EACA9Q,EAAA3E,eAAAzF,IAAA+a,EAAAI,gBAAAJ,EAAAI,gBAAA,OAEAnb,IAAA+a,EAAAK,yBAAA,CAEA,IAAAxC,EAAAmC,EAAAK,yBAAAnd,MACAqI,EAAA/O,KAxDAhE,KAwDAqT,cAAAwD,EAAA,eAAAwO,IACAtS,EAAA/O,KAzDAhE,KAyDAqT,cAAAwD,EAAA,eAAAwO,UAMA2B,EAAA1lB,EAAAoV,mBAIA,IAAAuQ,EAAAa,cAEAjR,EAAAkR,KAAAzmB,EAAA0mB,YAIA,IAAAC,EAAAhB,EAAAgB,WAAAvK,EAwEA,OAtEAuK,IAAAvK,EAEA7G,EAAAvS,aAAA,GAIAuS,EAAAvS,aAAA,EAEA2jB,IAAAvK,IAEA7G,EAAAqR,eAAAzb,IAAAwa,EAAAkB,YAAAlB,EAAAkB,YAAA,UAMA1b,IAAAwa,EAAAmB,gBAEArV,EAAA/O,KA7FAhE,KA6FAqT,cAAAwD,EAAA,YAAAoQ,EAAAmB,cAAA1d,QAEAmM,EAAAtC,YAAA,IAAAjT,EAAAqW,QAAA,UAEAlL,IAAAwa,EAAAmB,cAAAzoB,OAEAkX,EAAAtC,YAAAtT,IAAAgmB,EAAAmB,cAAAzoB,MAAAsnB,EAAAmB,cAAAzoB,aAMA8M,IAAAwa,EAAAoB,mBAEAtV,EAAA/O,KA3GAhE,KA2GAqT,cAAAwD,EAAA,QAAAoQ,EAAAoB,iBAAA3d,aAEA+B,IAAAwa,EAAAoB,iBAAAC,WAEAzR,EAAA5C,eAAAgT,EAAAoB,iBAAAC,gBAMA7b,IAAAwa,EAAAsB,iBAEAvB,IAAA1lB,EAAAsV,kBAEAC,EAAA3S,OAAA,IAAA5C,EAAAsO,OAAAC,UAAAoX,EAAAsB,gBAIA1R,EAAA/O,UAAA,IAAAxG,EAAAsO,OAAAC,UAAAoX,EAAAsB,sBAMA9b,IAAAwa,EAAAuB,kBAEAxB,IAAA1lB,EAAAsV,kBAEA7D,EAAA/O,KAvIAhE,KAuIAqT,cAAAwD,EAAA,MAAAoQ,EAAAuB,gBAAA9d,QAIAqI,EAAA/O,KA3IAhE,KA2IAqT,cAAAwD,EAAA,cAAAoQ,EAAAuB,gBAAA9d,SAMAgJ,QAAAC,IAAAZ,GAAA/G,KAAA,WAEA,IAAAnE,EA4BA,OAxBAA,EAFAmf,IAAA1lB,EAAA2P,eAEArD,EAAAI,EAAA8C,uCAAA8C,eAAAiD,GAIA,IAAAmQ,EAAAnQ,QAIApK,IAAAwa,EAAAviB,OAAAmD,EAAAnD,KAAAuiB,EAAAviB,MAIAmD,EAAA0M,cAEA1M,EAAA0M,YAAAnV,GAAAyI,EAAA0M,YAAAnV,GAKAyI,EAAA1I,MAAA0I,EAAA1I,IAAAspB,SAAAnnB,EAAAonB,cACA7gB,EAAAsM,cAAAtM,EAAAsM,YAAAsU,SAAAnnB,EAAAonB,cAEAzB,EAAA0B,SAAA9gB,EAAA+gB,SAAA3B,EAAA0B,QAEA9gB,KAWAyO,EAAA3J,UAAAkc,eAAA,SAAAC,GAEA,IAAA/I,EAAA/f,KAAAwgB,eAEA,OAAAxgB,KAAAqiB,gBAAA,YAAArW,KAAA,SAAAiS,GAIA,IAFA,IAAA8K,KAEAjkB,EAAA,EAAAoQ,EAAA4T,EAAA9jB,OAA2CF,EAAAoQ,EAAQpQ,IAAA,CAEnD,IAAAob,EAAA4I,EAAAhkB,GAGAmb,EAAAH,EAAAC,EAAAG,GAEA,GAAAD,EAGA8I,EAAA/kB,KAAAic,OAEK,CAGL,IAAAlb,EAAA,IAAAzD,EAAA0nB,eAEAtK,EAAAwB,EAAAxB,WAEA,QAAAuK,KAAAvK,EAAA,CAEA,IAEAmF,EAAA5F,EAFAS,EAAAuK,IAIA,OAAAA,GAEA,eAEAlkB,EAAAmkB,aAAA,WAAArF,GACA,MAEA,aAEA9e,EAAAmkB,aAAA,SAAArF,GACA,MAEA,iBACA,gBACA,eAEA9e,EAAAmkB,aAAA,KAAArF,GACA,MAEA,iBAEA9e,EAAAmkB,aAAA,MAAArF,GACA,MAEA,cACA,aACA,YAEA9e,EAAAmkB,aAAA,QAAArF,GACA,MAEA,gBACA,aAEA9e,EAAAmkB,aAAA,aAAArF,GACA,MAEA,eACA,YAEA9e,EAAAmkB,aAAA,YAAArF,SAOApX,IAAAyT,EAAAX,SAEAxa,EAAAokB,SAAAlL,EAAAiC,EAAAX,UAKAQ,EAAA/b,MAEAkc,YACAnb,aAIAgkB,EAAA/kB,KAAAe,IAMA,OAAAgkB,KAWAzS,EAAA3J,UAAAyc,SAAA,SAAAC,GAEA,IAAApc,EAAAjN,KAEA4N,GADA5N,KAAAqP,KACArP,KAAA4N,YAEAmQ,EAAA/d,KAAAqP,KAAA+R,OAAAiI,GAEA,OAAArpB,KAAA6gB,sBAEA,WACA,aAEA7U,KAAA,SAAA8U,GAEA,IAAAzL,EAAA,IAAA/T,EAAAgoB,MAEAR,EAAA/K,EAAA+K,WAEA,OAAA7b,EAAA4b,eAAAC,GAAA9c,KAAA,SAAA+c,GAEA,QAAAjkB,EAAA,EAAAoQ,EAAA4T,EAAA9jB,OAA4CF,EAAAoQ,EAAQpQ,IAAA,CAEpD,IAAAob,EAAA4I,EAAAhkB,GACAC,EAAAgkB,EAAAjkB,GAEA+C,OAAA4E,IAAAyT,EAAArY,SA59BA,IAAAvG,EAAAimB,sBACArjB,MAAA,SACA4D,SAAA,EACAqK,UAAA,EACAD,UAAA,EACA5N,aAAA,EACAilB,WAAA,EACAxB,KAAAzmB,EAAA6Z,YAu9BA2F,EAAAoG,UAAAhH,EAAArY,UAEAA,EAAAmM,YACAvH,IAAA1H,EAAA2Z,WAAA8K,UACA/c,IAAA1H,EAAA2Z,WAAA+K,KAEApoB,QAAA+I,IAAA,uDACArF,EAAAmkB,aAAA,UAAA5nB,EAAAmjB,gBAAA1f,EAAA2Z,WAAA+K,GAAAtW,MAAA,KAKA,IAiCA2K,EAjCA4L,OAAAjd,IAAA1H,EAAA2Z,WAAAxa,MACAylB,OAAAld,IAAA1H,EAAA2Z,WAAAN,OACAwL,GAAA,IAAA7L,EAAAgE,cACA8H,OAAApd,IAAAyT,EAAAhC,QAEA,GAAAwL,GAAAC,GAAAC,GAAAC,EAEA,GAAAhiB,EAAAgM,iCAGAhM,EADA+F,EAAAI,EAAA8C,uCACAkE,cAAAnN,QAIAA,IAAA7G,QAqBA,GAfA0oB,IAEA7hB,EAAAiiB,aAAAxoB,EAAAyoB,aACAliB,EAAAmiB,aAAA,GAIAL,IAEA9hB,EAAAoiB,aAAA,GAMA/J,EAAAgK,OAAA5S,GACA4I,EAAAgK,OAAA5S,GACA4I,EAAAgK,OAAA5S,QACA7K,IAAAyT,EAAAgK,KAEAN,GAEA9L,EAAA,IAAAxc,EAAA6oB,YAAAplB,EAAA8C,GACAA,EAAAuiB,UAAA,GAIAtM,EAAA,IAAAxc,EAAA+oB,KAAAtlB,EAAA8C,GAIAqY,EAAAgK,OAAA5S,EAEAwG,EAAAwM,SAAAhpB,EAAAipB,sBAEOrK,EAAAgK,OAAA5S,IAEPwG,EAAAwM,SAAAhpB,EAAAkpB,0BAIM,GAAAtK,EAAAgK,OAAA5S,EAENwG,EAAA,IAAAxc,EAAAmpB,aAAA1lB,EAAA8C,QAEM,GAAAqY,EAAAgK,OAAA5S,EAENwG,EAAA,IAAAxc,EAAAopB,KAAA3lB,EAAA8C,QAEM,GAAAqY,EAAAgK,OAAA5S,EAENwG,EAAA,IAAAxc,EAAAqpB,SAAA5lB,EAAA8C,OAEM,IAAAqY,EAAAgK,OAAA5S,EAMN,UAAA5I,MAAA,iDAAAwR,EAAAgK,MAJApM,EAAA,IAAAxc,EAAAspB,OAAA7lB,EAAA8C,GA0BA,GAlBAiW,EAAApZ,KAAAqZ,EAAArZ,MAAA,QAAA2kB,EAEAQ,GAEAhM,EAAAC,EAAAC,EAAAmC,EAAAY,EAAA7C,gBAIAxR,IAAAsR,EAAA4K,SAAA7K,EAAA8K,SAAA7K,EAAA4K,aACAlc,IAAAyT,EAAAyI,SAAA7K,EAAA/Y,SAAA6jB,SAAA1I,EAAAyI,SAGA,IAAA9gB,EAAAgM,mCAEAiK,EAAA+M,eAAAjd,EAAAI,EAAA8C,uCAAAqE,mBAIA2T,EAAA9jB,OAAA,GAQA,OAAA8Y,EANAA,EAAApZ,MAAA,IAAAI,EAEAuQ,EAAA5Q,IAAAqZ,GAUA,OAAAzI,OAaAiB,EAAA3J,UAAAme,WAAA,SAAAC,GAEA,IAAA/nB,EACAgoB,EAAAhrB,KAAAqP,KAAAmH,QAAAuU,GACA5Z,EAAA6Z,IAAAlb,MAEA,GAAAqB,EAAA,CAOA,mBAAA6Z,EAAAlb,KAAA,CAEA,IAAAmb,EAAA9Z,EAAA8Z,aAAA,EACAC,EAAA/Z,EAAAga,KAAAF,EAEAjoB,EAAA,IAAA1B,EAAA8pB,kBAAA9pB,EAAAxC,KAAAusB,SAAAH,GAAAD,EAAA9Z,EAAAma,OAAA,EAAAna,EAAAoa,MAAA,SAEG,iBAAAP,EAAAlb,OAEH9M,EAAA,IAAA1B,EAAAkqB,mBAAAra,EAAAsa,MAAA,EAAAta,EAAAsa,KAAA,EAAAta,EAAAua,KAAA,EAAAva,EAAAua,MAAA,EAAAva,EAAAma,MAAAna,EAAAoa,OAOA,YAHA9e,IAAAue,EAAAtmB,OAAA1B,EAAA0B,KAAAsmB,EAAAtmB,MACAsmB,EAAArC,SAAA3lB,EAAA4lB,SAAAoC,EAAArC,QAEAjV,QAAAsP,QAAAhgB,GArBA3B,QAAAsP,KAAA,iDA8BA2F,EAAA3J,UAAAgf,SAAA,SAAApK,GAEA,IAAAqK,EAAA5rB,KAAAqP,KAAA6R,MAAAK,GAEAsK,GAAmBpK,OAAAmK,EAAAnK,QAEnB,YAAAhV,IAAAmf,EAAAE,oBAEApY,QAAAsP,QAAA6I,GAIA7rB,KAAAgiB,cAAA,WAAA4J,EAAAE,qBAAA9f,KAAA,SAAA+f,GAIA,OAFAF,EAAAC,oBAAAC,EAEAF,KAWAvV,EAAA3J,UAAAqf,cAAA,SAAAC,GAEAjsB,KAAAqP,KAAA,IAEA6c,EAAAlsB,KAAAqP,KAAAoH,WAAAwV,GAEA,OAAAjsB,KAAA6gB,sBAEA,WACA,SAEA7U,KAAA,SAAA8U,GAIA,IAFA,IAAAqL,KAEArnB,EAAA,EAAAoQ,EAAAgX,EAAAE,SAAApnB,OAAsDF,EAAAoQ,EAAQpQ,IAAA,CAE9D,IAAAunB,EAAAH,EAAAE,SAAAtnB,GACAyhB,EAAA2F,EAAA1F,SAAA6F,EAAA9F,SAEA,GAAAA,EAAA,CAEA,IAAAtR,EAAAoX,EAAApX,OACAvQ,OAAA+H,IAAAwI,EAAAqX,KAAArX,EAAAqX,KAAArX,EAAAsX,GACAC,OAAA/f,IAAAyf,EAAAO,WAAAP,EAAAO,WAAAlG,EAAAiG,OAAAjG,EAAAiG,MACAE,OAAAjgB,IAAAyf,EAAAO,WAAAP,EAAAO,WAAAlG,EAAAmG,QAAAnG,EAAAmG,OAEAC,EAAA7L,EAAA7C,UAAAuO,GACAI,EAAA9L,EAAA7C,UAAAyO,GAEAJ,EAAAxL,EAAAE,MAAAtc,GAEA,GAAA4nB,EAAA,CAKA,IAAAO,EAEA,OALAP,EAAAQ,eACAR,EAAAxW,kBAAA,EAIAkH,EAAA/H,EAAA/H,OAEA,KAAA8P,EAAAE,QAEA2P,EAAAvrB,EAAAyrB,oBACA,MAEA,KAAA/P,EAAApd,SAEAitB,EAAAvrB,EAAA0rB,wBACA,MAEA,KAAAhQ,EAAA5Z,SACA,KAAA4Z,EAAArd,MACA,QAEAktB,EAAAvrB,EAAA2rB,oBAKA,IAAAC,EAAAZ,EAAA5nB,KAAA4nB,EAAA5nB,KAAA4nB,EAAAa,KAEA,mBAAA5G,EAAA6G,cAAA,CAiBA,IAfA,IAAAtJ,EAAA8I,EAAA9I,SAEAuJ,EAAA,IAAAtJ,EADA6I,EAAAzZ,MAAAvG,aACAggB,EAAA/N,MAAAiF,EAAA,GAaAnF,EAAA,EAAAC,EAAAgO,EAAA/N,MAAkDF,EAAAC,EAAQD,GAAA,EAE1D0O,EAAA1O,EAAAmF,EAAA,GAAA8I,EAAA7N,KAAAJ,EAAA,GACAmF,EAAA,IAAAuJ,EAAA1O,EAAAmF,EAAA,KAAA8I,EAAA5N,KAAAL,EAAA,IACAmF,EAAA,IAAAuJ,EAAA1O,EAAAmF,EAAA,KAAA8I,EAAA3N,KAAAN,EAAA,IACAmF,EAAA,IAAAuJ,EAAA1O,EAAAmF,EAAA,KAAA8I,EAAAU,KAAA3O,EAAA,IAIAiO,EAAA,IAAAtrB,EAAAmjB,gBAAA4I,EAAAvJ,EAAA,EAAA8I,EAAAvI,YAIA,IAAA+I,OAAA3gB,IAAA8Z,EAAA6G,cAAAjQ,EAAAoJ,EAAA6G,eAAA9rB,EAAAic,kBAEAgQ,KAEAvQ,EAAA/H,EAAA/H,QAAA8P,EAAAE,QAOAoP,EAAAkB,SAAA,SAAAlN,IAEA,IAAAA,EAAAmN,SAAA,IAAAnN,EAAAzY,SAAAwW,cAEAkP,EAAAvpB,KAAAsc,EAAA5b,KAAA4b,EAAA5b,KAAA4b,EAAA6M,QAQAI,EAAAvpB,KAAAkpB,GAOA,IAAAvO,EAAA,EAAAC,EAAA2O,EAAAvoB,OAA+C2Z,EAAAC,EAAQD,IAEvDwN,EAAAnoB,KAAA,IAAA6oB,EACAU,EAAA5O,GAAA,IAAA3B,EAAA/H,EAAA/H,MACA5L,EAAAosB,eAAAC,WAAAhB,EAAAxZ,MAAA,GACA7R,EAAAosB,eAAAC,WAAAf,EAAAzZ,MAAA,GACAia,MAWA1oB,OAAA+H,IAAAyf,EAAAxnB,KAAAwnB,EAAAxnB,KAAA,aAAAunB,EAEA,WAAA3qB,EAAAssB,cAAAlpB,OAAA+H,EAAA0f,MAWA7V,EAAA3J,UAAAkhB,SAAA,SAAAlM,GAEA3hB,KAAAqP,KAAA,IACAzB,EAAA5N,KAAA4N,WAEAyT,EAAArhB,KAAAqP,KAAAgS,eACAC,EAAAthB,KAAAqP,KAAAiS,SAEAO,EAAA7hB,KAAAqP,KAAA2R,MAAAW,GAEA,OAAA3hB,KAAA6gB,sBAEA,OACA,OACA,WAEA7U,KAAA,SAAA8U,GAEA,IAAAwL,EAEA,QAAAzK,EAAAH,OAEA4K,EAAA,IAAAhrB,EAAAwsB,UAEI,QAAArhB,IAAAoV,EAAA/D,KAAA,CAEJ,IAAAA,EAAAgD,EAAAM,OAAAS,EAAA/D,MAKA,GAHAwO,EAAAxO,EAAA9c,SAGA,IAAA8c,EAAAiQ,QAEA,QAAAjpB,EAAA,EAAAoQ,EAAA4I,EAAA/c,SAAAiE,OAAgDF,EAAAoQ,EAAQpQ,IAAA,CAExD,IAAAkpB,EAAAlQ,EAAA/c,SAAA+D,GAEAkpB,EAAAnmB,WAAA,IAAAmmB,EAAAnmB,SAAAgM,mCAEAyY,EAAAvrB,SAAA+D,GAAA+lB,eAAAmD,EAAAnD,qBAQA/M,EAAAjW,WAAA,IAAAiW,EAAAjW,SAAAgM,mCAEAyY,EAAAzB,eAAA/M,EAAA+M,gBAMAxJ,EAAAQ,EAAA/D,MAAA,IAEAwO,EAAA5nB,MAAA,aAAA4c,EAAAO,EAAA/D,cAII,QAAArR,IAAAoV,EAAA7e,OAEJspB,EAAAxL,EAAAtK,QAAAqL,EAAA7e,aAEI,GAAA6e,EAAAjU,YACJiU,EAAAjU,WAAAI,EAAAwB,kBACA/C,IAAAoV,EAAAjU,WAAAI,EAAAwB,YAAA7H,MAAA,CAGA2kB,EADA1e,EAAAI,EAAAwB,YAAAC,OACAoS,EAAAjU,WAAAI,EAAAwB,YAAA7H,YAIA2kB,EAAA,IAAAhrB,EAAA2sB,SAYA,QARAxhB,IAAAoV,EAAAnd,OAEA4nB,EAAA5nB,KAAApD,EAAA4sB,gBAAAC,iBAAAtM,EAAAnd,OAIAmd,EAAA8G,SAAA2D,EAAA1D,SAAA/G,EAAA8G,aAEAlc,IAAAoV,EAAAhM,OAAA,CAEA,IAAAA,EAAA,IAAAvU,EAAAoW,QACA7B,EAAAhG,UAAAgS,EAAAhM,QACAyW,EAAA8B,YAAAvY,aAIApJ,IAAAoV,EAAA5E,aAEAqP,EAAAlpB,SAAAyM,UAAAgS,EAAA5E,kBAIAxQ,IAAAoV,EAAAjiB,UAEA0sB,EAAA+B,WAAAxe,UAAAgS,EAAAjiB,eAIA6M,IAAAoV,EAAAliB,OAEA2sB,EAAA3sB,MAAAkQ,UAAAgS,EAAAliB,OAMA,OAAA2sB,KAWAhW,EAAA3J,UAAA2hB,UAAA,WAIA,SAAAC,EAAAC,EAAAC,EAAApf,EAAAqf,EAAAxN,GAEA,IAAAoL,EAAAoC,EAAAF,GACA3M,EAAAxS,EAAA2R,MAAAwN,GAIA,QAAA/hB,IAAAoV,EAAAC,KAIA,IAFA,IAAAV,GAAA,IAAAkL,EAAAyB,QAAAzB,EAAAvrB,UAAAurB,GAEAxnB,EAAA,EAAAoQ,EAAAkM,EAAApc,OAAwCF,EAAAoQ,EAAQpQ,IAAA,CAQhD,IANA,IAAAgZ,EAAAsD,EAAAtc,GACA+mB,EAAA3K,EAAAW,EAAAC,MAEA6M,KACAC,KAEAjQ,EAAA,EAAAC,EAAAiN,EAAApK,OAAAzc,OAAmD2Z,EAAAC,EAAQD,IAAA,CAE3D,IAAAkQ,EAAAhD,EAAApK,OAAA9C,GACAmQ,EAAAJ,EAAAG,GAEA,GAAAC,EAAA,CAEAH,EAAA3qB,KAAA8qB,GAEA,IAAAC,EAAA,IAAAztB,EAAAoW,aAEAjL,IAAAof,EAAAC,qBAEAiD,EAAAlf,UAAAgc,EAAAC,oBAAA3Y,MAAA,GAAAwL,GAIAiQ,EAAA5qB,KAAA+qB,QAIA1tB,QAAAsP,KAAA,mDAAAke,GAMA/Q,EAAA3V,KAAA,IAAA7G,EAAA0tB,SAAAL,EAAAC,GAAA9Q,EAAAmR,aAUA,GAFAR,EAAAhqB,IAAA6nB,GAEAzK,EAAA9gB,SAEA,KAAAA,EAAA8gB,EAAA9gB,SAEA,IAAA+D,EAAA,EAAAoQ,EAAAnU,EAAAiE,OAA0CF,EAAAoQ,EAAQpQ,IAAA,CAGlDypB,EADAxtB,EAAA+D,GACAwnB,EAAAjd,EAAAqf,EAAAxN,KAQA,gBAAAgO,GAEA,IAAA7f,EAAArP,KAAAqP,KACAzB,EAAA5N,KAAA4N,WACAuhB,EAAAnvB,KAAAqP,KAAAkH,OAAA2Y,GAEA,OAAAlvB,KAAA6gB,sBAEA,OACA,SAEA7U,KAAA,SAAA8U,GAEA,IAAAhgB,EAAA,IAAAQ,EAAA8tB,WACA3iB,IAAA0iB,EAAAzqB,OAAA5D,EAAA4D,KAAAyqB,EAAAzqB,MAEAyqB,EAAAxG,SAAA7nB,EAAA8nB,SAAAuG,EAAAxG,QAIA,IAFA,IAAA0G,EAAAF,EAAAnO,UAEAlc,EAAA,EAAAoQ,EAAAma,EAAArqB,OAAyCF,EAAAoQ,EAAQpQ,IAEjDypB,EAAAc,EAAAvqB,GAAAhE,EAAAuO,EAAAyR,EAAAE,MAAAF,EAAAI,OAKA,GAAAiO,EAAAvhB,YACAuhB,EAAAvhB,WAAAI,EAAAwB,kBACA/C,IAAA0iB,EAAAvhB,WAAAI,EAAAwB,YAAA7H,MAAA,CAEA,IAAA8H,EAAA7B,EAAAI,EAAAwB,YAAAC,OACA3O,EAAA2D,IAAAgL,EAAA0f,EAAAvhB,WAAAI,EAAAwB,YAAA7H,QAIA,OAAA7G,KA/GA,GAuHAH,EAnkFA,GAukFe2uB,EAAA","file":"static/js/app.dcb6a0c5c91baf0a2606.js","sourcesContent":["Math.clamp = function ( value, min, max ) {\n\treturn Math.max( min, Math.min( max, value ) );\n}\n\nMath.map = function ( x, a1, a2, b1, b2 ) {\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/js/Math.js\n// module id = 0gDO\n// module chunks = 1","import GLTFLoader from '../../../static/js/GLTFLoader'\nconst EventEmitter = require('events')\n\nclass Resource extends EventEmitter {\n  constructor (modelUrl, scale, rotation, audioUrl, audioListener) {\n    super()\n\n    this.modelUrl = modelUrl\n    this.scale = scale\n    this.rotation = rotation\n    this.audioUrl = audioUrl\n    this.audioListener = audioListener\n    this.model = null\n    this.sound = null\n\n    this.loadModel()\n    this.loadAudio()\n  }\n\n  loadModel () {\n    var t = this\n    var loader = new GLTFLoader()\n    loader.load('static/models/' + t.modelUrl, function (gltf) {\n      t.model = gltf.scene.children[0].clone()\n      t.model.scale.set(t.scale, t.scale, t.scale)\n      t.model.lookAt(0, t.rotation, 0)\n    },\n    function (xhr) {\n      // console.log((xhr.loaded / xhr.total * 100) + '% loaded')\n    },\n    function (error) {\n      console.error('GLTF LOADER:', error)\n    })\n  }\n\n  loadAudio () {\n    var t = this\n    // eslint-disable-next-line\n    this.sound = new THREE.Audio(this.audioListener)\n    // eslint-disable-next-line\n    var audioLoader = new THREE.AudioLoader()\n    audioLoader.load(this.audioUrl, function (buffer) {\n      t.sound.setBuffer(buffer)\n      t.sound.setLoop(false)\n      t.sound.setVolume(0.5)\n    })\n  }\n}\n\nexport default Resource\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/resources/Resource.js","import * as THREE from 'three'\nimport GLTFLoader from '../../../static/js/GLTFLoader'\nconst EventEmitter = require('events')\n\nclass Ship extends EventEmitter {\n  constructor (modelUrl, scale, rotation, velocity, audioUrl, audioListener, audioPlay) {\n    super()\n\n    this.modelUrl = modelUrl\n    this.scale = scale\n    this.rotation = rotation\n    this.velocity = velocity\n    this.audioUrl = audioUrl\n    this.audioListener = audioListener\n    this.audioPlay = audioPlay\n    this.model = null\n    this.sound = null\n    this.center = new THREE.Vector3(0, 0, 0)\n\n    this.loadModel()\n    this.loadAudio()\n  }\n\n  loadModel () {\n    var t = this\n    // eslint-disable-next-line\n    var loader = new GLTFLoader()\n    loader.load('static/models/' + this.modelUrl, function (gltf) {\n      t.model = gltf.scene.children[0]\n      t.model.scale.set(t.scale, t.scale, t.scale)\n      t.center = new THREE.Box3().setFromObject(t.model).getCenter()\n      t.emit('onModelLoaded', t.model)\n    },\n    function (xhr) {\n      // console.log((xhr.loaded / xhr.total * 100) + '% loaded')\n    },\n    function (error) {\n      console.error('GLTF LOADER:', error)\n    })\n  }\n\n  loadAudio () {\n    var t = this\n    // eslint-disable-next-line\n    this.sound = new THREE.Audio(this.audioListener)\n    var audioLoader = new THREE.AudioLoader()\n    audioLoader.load(this.audioUrl, function (buffer) {\n      t.sound.setBuffer(buffer)\n      t.sound.setLoop(true)\n      t.sound.setVolume(0.3)\n      if (t.audioPlay) {\n        t.sound.play()\n      }\n    })\n  }\n}\n\nexport default Ship\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/ships/Ship.js","import Ship from './Ship'\n\nclass Parachute extends Ship {\n  constructor (audioListener) {\n    super('parachute.gltf', 2.5, 0, 1, 'static/audios/205966__kangaroovindaloo__medium-wind.ogg', audioListener, true)\n  }\n}\n\nexport default Parachute\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/ships/Parachute.js","import Ship from './Ship'\n\nclass Balloon extends Ship {\n  constructor (audioListener) {\n    super('balloon.gltf', 2.5, 0, 1, 'static/audios/205966__kangaroovindaloo__medium-wind.ogg', audioListener, false)\n  }\n}\n\nexport default Balloon\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/ships/Balloon.js","import Ship from './Ship'\n\nclass Parachute extends Ship {\n  constructor (audioListener) {\n    super('plane.gltf', 6, Math.PI + Math.PI * 0.5, 2, 'static/audios/218352__photomonster__motorcycle-nsumax-1954-engine.ogg', audioListener, false)\n  }\n}\n\nexport default Parachute\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/ships/Plane.js","import Ship from './Ship'\n\nclass Parachute extends Ship {\n  constructor (audioListener) {\n    super('spaceship.gltf', 30, Math.PI, 3, 'static/audios/42233__noisecollector__spaceswamp.ogg', audioListener, false)\n  }\n}\n\nexport default Parachute\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/ships/Spaceship.js","import Ship from './Ship'\n\nclass Ovni extends Ship {\n  constructor (audioListener) {\n    super('ovni.gltf', 30, Math.PI, 2, 'static/audios/42233__noisecollector__spaceswamp.ogg', audioListener, false)\n  }\n}\n\nexport default Ovni\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/ships/Ovni.js","import Ship from './Ship'\n\nclass Parachute2 extends Ship {\n  constructor (audioListener) {\n    super('spaceship2.gltf', 30, Math.PI, 3, 'static/audios/42233__noisecollector__spaceswamp.ogg', audioListener, false)\n  }\n}\n\nexport default Parachute2\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/ships/Spaceship2.js","import Resource from './Resource'\n\nclass Coin extends Resource {\n  constructor (audioListener) {\n    super('coin.gltf', 30, 1, 'static/audios/135936__bradwesson__collectcoin.ogg', audioListener)\n  }\n}\n\nexport default Coin\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/resources/Coin.js","import * as THREE from 'three'\r\nconst EventEmitter = require('events')\r\n\r\nclass ParticleManager extends EventEmitter {\r\n  constructor (scene, camera) {\r\n    super()\r\n\r\n    this._scene = scene\r\n    this._camera = camera\r\n    this.prevCamX = this._camera.position.x\r\n    this.prevCamY = this._camera.position.y\r\n    this.prevCamZ = this._camera.position.z\r\n\r\n    this.maxParticles = 1000\r\n\r\n    this.spread = 300\r\n\r\n    this.particles = new THREE.Geometry()\r\n\r\n    for (let p = 0; p < this.maxParticles; p++) {\r\n      let particle = new THREE.Vector3(\r\n        Math.random() * this.spread - this.spread * 0.3,\r\n        Math.random() * this.spread - this.spread * 0.5,\r\n        Math.random() * 500\r\n      )\r\n\r\n      this.particles.vertices.push(particle)\r\n    }\r\n\r\n    let pMaterial = new THREE.PointsMaterial({\r\n      color: 0xFFFFFF,\r\n      size: 2,\r\n      map: THREE.ImageUtils.loadTexture(\r\n        'static/textures/particle.png'\r\n      ),\r\n      blending: THREE.AdditiveBlending,\r\n      transparent: true\r\n    })\r\n    this.particleSystem = new THREE.Points(this.particles, pMaterial)\r\n    this.particleSystem.sortParticles = true\r\n\r\n    this._scene.add(this.particleSystem)\r\n  }\r\n\r\n  set (name) {\r\n    if (name === 'Star') {\r\n\r\n    }\r\n  }\r\n\r\n  update () {\r\n    let xDiff = this._camera.position.x - this.prevCamX\r\n    let yDiff = this._camera.position.y - this.prevCamY\r\n    let zDiff = this._camera.position.z - this.prevCamZ\r\n\r\n    this.prevCamX = this._camera.position.x\r\n    this.prevCamY = this._camera.position.y\r\n    this.prevCamZ = this._camera.position.z\r\n\r\n    this.particleSystem.position.set(this._camera.position.x, this._camera.position.y, this._camera.position.z)\r\n\r\n    for (let i = 0; i < this.particleSystem.geometry.vertices.length; i++) {\r\n      let particle = this.particleSystem.geometry.vertices[i]\r\n      particle.x -= xDiff\r\n      particle.y -= yDiff\r\n      particle.z -= zDiff\r\n\r\n      if (particle.z < -30) {\r\n        particle.x = Math.random() * this.spread - this.spread * 0.3\r\n        particle.y = Math.random() * this.spread - this.spread * 0.5\r\n        particle.z = 500 + Math.random() * 500\r\n      }\r\n    }\r\n\r\n    this.particleSystem.geometry.verticesNeedUpdate = true\r\n  }\r\n}\r\n\r\nexport default ParticleManager\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/particles/ParticleManager.js","import './css/style.css'\nimport Main from './js/main'\n// import Main from './js/mainWagner'\n// import Main from './js/mainVR'\n\n// eslint-disable-next-line\nnew Main()\n\n\n\n// WEBPACK FOOTER //\n// ./src/app.js","import * as THREE from 'three'\r\nimport * as Stats from 'stats.js'\r\nimport Parachute from './ships/Parachute'\r\nimport Balloon from './ships/Balloon'\r\nimport Plane from './ships/Plane'\r\nimport Spaceship from './ships/Spaceship'\r\nimport Spaceship2 from './ships/Spaceship2'\r\nimport Ovni from './ships/Ovni'\r\nimport Coin from './resources/Coin'\r\nimport '../../static/js/GLTFLoader'\r\nimport '../../static/js/Math'\r\nimport ParticleManager from './particles/ParticleManager'\r\nimport GyroNorm from 'gyronorm/dist/gyronorm.complete.js'\r\n// import shaderVert from 'shaders/custom.vert'\r\n// import shaderFrag from 'shaders/custom.frag'\r\n\r\nclass Main {\r\n  constructor () {\r\n    var t = this\r\n\r\n    this.currentLevel = 0\r\n\r\n    this.mouseX = 0\r\n    this.mouseY = 0\r\n    this.prevMouseX = this.mouseX\r\n    this.prevMouseY = this.mouseY\r\n    this.diffX = 0\r\n    this.diffY = 0\r\n\r\n    this.audioList = [\r\n      {\r\n        url: 'static/audios/Black-Eyed-Peas-I-Got-A-Feeling.ogg',\r\n        sound: null\r\n      },\r\n      {\r\n        url: 'static/audios/Eiffel65-Blue.ogg',\r\n        sound: null\r\n      },\r\n      {\r\n        url: 'static/audios/Enegetic-Game-Theme.ogg',\r\n        sound: null\r\n      },\r\n      {\r\n        url: 'static/audios/Imagine Dragons - Radioactive (Harder).ogg',\r\n        sound: null\r\n      }\r\n    ]\r\n    this.audioListener = new THREE.AudioListener()\r\n\r\n    this.maxX = 80\r\n    this.maxY = 50\r\n    this.velX = 1.5\r\n    this.minAltitude = 200 // meters\r\n    this.altitude = this.minAltitude\r\n    this.curAltitude = this.altitude\r\n    this.destPos = new THREE.Vector2()\r\n    this.raycaster = new THREE.Raycaster()\r\n    this.raycaster.far = 2\r\n    this.direction = new THREE.Vector3(0, 0, 10)\r\n    this.direction.normalize()\r\n    this.coins = []\r\n    this.coin = new Coin(this.audioListener)\r\n    this.paused = false\r\n\r\n    this.levels = [\r\n      {\r\n        ship: new Parachute(this.audioListener),\r\n        altitude: this.minAltitude,\r\n        skyColor: new THREE.Color(0xcaf8f1),\r\n        decay: 0.03,\r\n        coins: 20\r\n      },\r\n      {\r\n        ship: new Balloon(this.audioListener),\r\n        altitude: 400,\r\n        skyColor: new THREE.Color(0xaaffff),\r\n        decay: 0.04,\r\n        coins: 18\r\n      },\r\n      {\r\n        ship: new Plane(this.audioListener),\r\n        altitude: 600,\r\n        skyColor: new THREE.Color(0xf26dd9),\r\n        decay: 0.06,\r\n        coins: 15\r\n      },\r\n      {\r\n        ship: new Spaceship(this.audioListener),\r\n        altitude: 800,\r\n        skyColor: new THREE.Color(0xff933a),\r\n        decay: 0.12,\r\n        coins: 12\r\n      },\r\n      /*{\r\n        ship: new Spaceship2(this.audioListener),\r\n        altitude: 1000,\r\n        skyColor: new THREE.Color(0x000000),\r\n        decay: 0.12,\r\n        coins: 10\r\n      },*/\r\n      {\r\n        ship: new Ovni(this.audioListener),\r\n        altitude: 1000,\r\n        skyColor: new THREE.Color(0x000000),\r\n        decay: 0.12,\r\n        coins: 8\r\n      }\r\n    ]\r\n\r\n    this._camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 1, 1000)\r\n    this._camera.position.set(-100, this.altitude + 50, 0)\r\n    this._camera.lookAt(0, this.altitude, 100)\r\n    this._camera.add(this.audioListener)\r\n\r\n    this._scene = new THREE.Scene()\r\n\r\n    this._renderer = new THREE.WebGLRenderer()\r\n    this._renderer.setPixelRatio(window.devicePixelRatio)\r\n    this._renderer.setSize(window.innerWidth, window.innerHeight)\r\n    document.body.appendChild(this._renderer.domElement)\r\n\r\n    /*\r\n    this.stats = new Stats()\r\n    this.stats.showPanel(0)// fps,\r\n    // this.stats.showPanel(1)// ms\r\n    // this.stats.showPanel(2)// mb\r\n    document.body.appendChild(this.stats.dom)\r\n    */\r\n\r\n    // for inspection debug\r\n    // window.scene = this._scene\r\n    // window.THREE = THREE\r\n\r\n    // 'ovni.gltf' 100\r\n    // 'balloon.gltf' 10\r\n\r\n    var light = new THREE.HemisphereLight(0xbbbbff, 0x444422)\r\n    light.name = 'Hemisphere Light'\r\n    light.position.set(0, 1, 0)\r\n    t._scene.add(light)\r\n\r\n    var dirLight = new THREE.DirectionalLight(0xffffff)\r\n    dirLight.name = 'Point Light'\r\n    dirLight.position.set(-10, 6, -10)\r\n    t._scene.add(dirLight)\r\n\r\n    this.particles = new ParticleManager(this._scene, this._camera)\r\n\r\n    const geometry = new THREE.SphereGeometry(1, 320, 320)\r\n    const material = new THREE.MeshPhongMaterial({color: 0x008800, emissive: 0x00ff00})\r\n    /*\r\n    const material2 = new THREE.ShaderMaterial({\r\n      vertexShader: shaderVert,\r\n      fragmentShader: shaderFrag\r\n    })\r\n    */\r\n    this.ground = new THREE.Mesh(geometry, material)\r\n    this.ground.name = 'Ground'\r\n    this._scene.add(this.ground)\r\n\r\n    const earthRadius = 6000000 // 6000 km\r\n    this.ground.scale.set(earthRadius, earthRadius, earthRadius)\r\n    this.ground.position.y = -earthRadius\r\n    this.ground.rotation.z = Math.PI * 0.5\r\n\r\n    // add ship models to scene\r\n    for (var i = 0; i < this.levels.length; i++) {\r\n      this.levels[i].ship.on('onModelLoaded', function (model) {\r\n        t._scene.add(model)\r\n        model.position.y = t.altitude\r\n      })\r\n    }\r\n\r\n    this._renderer.domElement.addEventListener('mousemove', this.onMouseMove.bind(this), false)\r\n    this._renderer.domElement.addEventListener('mousedown', this.onMouseDown.bind(this), false)\r\n    this._renderer.domElement.addEventListener('mouseup', this.onMouseUp.bind(this), false)\r\n    this._renderer.domElement.addEventListener('touchstart', this.onMouseDown.bind(this), false)\r\n    this._renderer.domElement.addEventListener('touchend', this.onMouseUp.bind(this), false)\r\n\r\n    document.addEventListener('keydown', this.onKeyDown.bind(this), false)\r\n    document.addEventListener('keyup', this.onKeyUp.bind(this), false)\r\n\r\n    window.addEventListener('resize', this.onWindowResize.bind(this), false)\r\n\r\n    this.loadAudio()\r\n    this.initAccelerometer()\r\n    this.animate()\r\n  }\r\n\r\n  onMouseMove (event) {\r\n    this.mouseX = event.pageX\r\n    this.mouseY = event.pageY\r\n  }\r\n\r\n  onMouseDown () {\r\n    // this.nextLevel()\r\n    // this.altitude = this.levels[this.currentLevel].altitude + 100\r\n  }\r\n\r\n  onMouseUp () {\r\n  }\r\n\r\n  onKeyDown (e) {\r\n    if (e.keyCode === 32) this.paused = !this.paused\r\n  }\r\n\r\n  onKeyUp (e) {\r\n  }\r\n\r\n  onWindowResize () {\r\n    this._camera.aspect = window.innerWidth / window.innerHeight\r\n    this._camera.updateProjectionMatrix()\r\n\r\n    this._renderer.setSize(window.innerWidth, window.innerHeight)\r\n  }\r\n\r\n  animate () {\r\n    // this.stats.begin()\r\n\r\n    if (!this.paused) {\r\n      // mouse\r\n      this.diffX += (this.mouseX - this.prevMouseX) / 100\r\n      this.diffY += (this.mouseY - this.prevMouseY) / 100\r\n      this.diffX = Math.clamp(this.diffX, -1, 1)\r\n      this.diffY = Math.clamp(this.diffY, -1, 1)\r\n      this.prevMouseX = this.mouseX\r\n      this.prevMouseY = this.mouseY\r\n\r\n      // altitude\r\n      this.altitude -= this.levels[this.currentLevel].decay\r\n      if (this.altitude < this.minAltitude) this.altitude = this.minAltitude\r\n      this.curAltitude += (this.altitude - this.curAltitude) * 0.05\r\n\r\n      let nextLevel = this.currentLevel + 1\r\n      if (nextLevel >= this.levels.length) {\r\n        nextLevel = this.currentLevel\r\n      }\r\n      let progress = (this.curAltitude - this.levels[this.currentLevel].altitude) / (this.levels[nextLevel].altitude - this.levels[this.currentLevel].altitude)\r\n      progress = THREE.Math.clamp(progress, 0, 1)\r\n\r\n      // instantiate coins\r\n      if (this.coin.model) {\r\n        if (this.coins.length < this.levels[this.currentLevel].coins && Math.random() > 0.97) {\r\n          var coin = this.coin.model.clone()\r\n          coin.rotation.z = Math.random() * Math.PI\r\n          coin.position.set(\r\n            (Math.random() - 0.5) * 2 * this.maxX,\r\n            Math.random() * (this.maxY - 20) + 20 + this.curAltitude,\r\n            this._camera.position.z + 500 + Math.random() * 300)\r\n          this._scene.add(coin)\r\n          this.coins.push(coin)\r\n        }\r\n      }\r\n\r\n      // update or remove coins\r\n      for (var c = this.coins.length - 1; c >= 0; c--) {\r\n        if (this.coins[c].position.z < this._camera.position.z) {\r\n          this.removeCoin(this.coins[c])\r\n        } else {\r\n          this.coins[c].rotation.z += 0.02\r\n        }\r\n      }\r\n\r\n      var model = this.levels[this.currentLevel].ship.model\r\n      if (model) {\r\n        var oldModelPos = model.position.clone()\r\n\r\n        // position\r\n        this.destPos.x = Math.map(-this.diffX, -1, 1, -this.maxX, this.maxX)\r\n        this.destPos.y = Math.map(-this.diffY, -1, 1, 0, this.maxY) + this.curAltitude\r\n        model.position.x += (this.destPos.x - model.position.x) * 0.05\r\n        model.position.y += (this.destPos.y - model.position.y) * 0.05\r\n        model.position.z += this.levels[this.currentLevel].ship.velocity * this.velX\r\n\r\n        // camera\r\n        this._camera.position.z = model.position.z - 50\r\n        this._camera.position.y = this.curAltitude + 50\r\n\r\n        // ground\r\n        this.ground.position.z = model.position.z\r\n        // this.ground.rotation.x += 0.00005\r\n\r\n        // direction\r\n        var dir = new THREE.Vector3()\r\n        dir.subVectors(model.position, oldModelPos)\r\n        dir.add(model.position)\r\n        model.lookAt(dir)\r\n        model.rotation.y += this.levels[this.currentLevel].ship.rotation\r\n\r\n        // collider\r\n        var position = model.position.clone().add(this.levels[this.currentLevel].ship.center)\r\n        for (var i = this.coins.length - 1; i >= 0; i--) {\r\n          if (position.distanceToSquared(this.coins[i].position) < 300) {\r\n            this.onResourceCollide(this.coins[i])\r\n          }\r\n        }\r\n      // if model\r\n      }\r\n\r\n      this.particles.update()\r\n\r\n      // color\r\n      let skyColor = this.levels[this.currentLevel].skyColor.clone()\r\n      skyColor.lerp(this.levels[nextLevel].skyColor, progress)\r\n      this._scene.background = skyColor\r\n      this._scene.fog = new THREE.FogExp2(skyColor, 0.003)\r\n\r\n      // console.log(progress)\r\n      if (progress <= 0) {\r\n        this.prevLevel()\r\n      } else if (progress >= 1) {\r\n        this.nextLevel()\r\n      }\r\n\r\n    // if !this.paused\r\n    }\r\n\r\n    this._renderer.render(this._scene, this._camera)\r\n\r\n    // this.stats.end()\r\n\r\n    requestAnimationFrame(this.animate.bind(this))\r\n  }\r\n\r\n  nextLevel () {\r\n    var nextLevel = this.currentLevel + 1\r\n    if (nextLevel >= this.levels.length) nextLevel = this.currentLevel\r\n\r\n    if (nextLevel === this.currentLevel) return\r\n\r\n    this.startLevel(nextLevel)\r\n  }\r\n\r\n  prevLevel () {\r\n    var prevLevel = this.currentLevel - 1\r\n    if (prevLevel <= 0) prevLevel = 0\r\n\r\n    if (prevLevel === this.currentLevel) return\r\n\r\n    this.startLevel(prevLevel)\r\n  }\r\n\r\n  startLevel (level) {\r\n    console.log('startLevel', level)\r\n    this.levels[level].ship.model.position.copy(this.levels[this.currentLevel].ship.model.position)\r\n    if (this.levels[this.currentLevel].ship.sound.isPlaying) {\r\n      this.levels[this.currentLevel].ship.sound.stop()\r\n    }\r\n    this.currentLevel = level\r\n    this.levels[this.currentLevel].ship.sound.play()\r\n  }\r\n\r\n  onResourceCollide (resource) {\r\n    var increase = 20\r\n\r\n    // bonus = fast coin catch\r\n    if (this.curAltitude < this.altitude) increase *= 2\r\n\r\n    this.altitude += increase * (this.currentLevel + 1)\r\n\r\n    this.coin.sound.play()\r\n\r\n    this.removeCoin(resource)\r\n  }\r\n\r\n  removeCoin (coin) {\r\n    var index = this.coins.indexOf(coin)\r\n    if (index > -1) {\r\n      this.coins.splice(index, 1)\r\n    }\r\n\r\n    this._scene.remove(coin)\r\n  }\r\n\r\n  loadAudio () {\r\n    this.audioList = this.audioList\r\n      .map((a) => ({sort: Math.random(), value: a}))\r\n      .sort((a, b) => a.sort - b.sort)\r\n      .map((a) => a.value)\r\n\r\n    this.currentAudio = 0\r\n    let counter = -1\r\n    let t = this\r\n\r\n    this.audioList.map((a) => {\r\n      a.index = ++counter\r\n      a.sound = new THREE.Audio(this.audioListener)\r\n      var audioLoader = new THREE.AudioLoader()\r\n      audioLoader.load(a.url, function (buffer) {\r\n        a.sound.setBuffer(buffer)\r\n        a.sound.setLoop(false)\r\n        a.sound.setVolume(0.5)\r\n        if (a.index === 0) {\r\n          a.sound.play()\r\n          a.sound.source.onended = () => {\r\n            console.log('audio ended', t.currentAudio, t.audioList.length, a.index)\r\n            t.currentAudio++\r\n            if (t.currentAudio >= t.audioList.length) t.currentAudio = 0\r\n            console.log('audio ended', t.currentAudio, t.audioList.length, a.index)\r\n\r\n            t.audioList[t.currentAudio].sound.play()\r\n          }\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  initAccelerometer () {\r\n    var args = {\r\n      frequency: 50, // ( How often the object sends the values - milliseconds )\r\n      gravityNormalized: true, // ( If the gravity related values to be normalized )\r\n      orientationBase: GyroNorm.GAME, // ( Can be GyroNorm.GAME or GyroNorm.WORLD. gn.GAME returns orientation values with respect to the head direction of the device. gn.WORLD returns the orientation values with respect to the actual north direction of the world. )\r\n      decimalCount: 2, // ( How many digits after the decimal point will there be in the return values )\r\n      logger: null, // ( Function to be called to log messages from gyronorm.js )\r\n      screenAdjusted: false // ( If set to true it will return screen adjusted values. )\r\n    }\r\n\r\n    var gn = new GyroNorm()\r\n\r\n    let t = this\r\n    gn.init(args).then(() => {\r\n      gn.start(function (data) {\r\n        if (data.dm.gx!=0 || data.dm.gz!=0) {\r\n          t.mouseX = -data.dm.gx * 30\r\n          t.mouseY = -data.dm.gz * 30\r\n        }\r\n      })\r\n    }).catch(function (e) {\r\n      alert('Catch if the DeviceOrientation or DeviceMotion is not supported by the browser or device')\r\n    })\r\n  }\r\n}\r\n\r\nexport default Main\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/main.js","/**\r\n * @author Rich Tibbett / https://github.com/richtr\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author Tony Parisi / http://www.tonyparisi.com/\r\n * @author Takahiro / https://github.com/takahirox\r\n * @author Don McCurdy / https://www.donmccurdy.com\r\n */\r\n\r\nconst GLTFLoader = ( function () {\r\n\r\n\tfunction GLTFLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\t}\r\n\r\n\tGLTFLoader.prototype = {\r\n\r\n\t\tconstructor: GLTFLoader,\r\n\r\n\t\tcrossOrigin: 'Anonymous',\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar path = this.path !== undefined ? this.path : THREE.LoaderUtils.extractUrlBase( url );\r\n\r\n\t\t\tvar loader = new THREE.FileLoader( scope.manager );\r\n\r\n\t\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\t\tloader.load( url, function ( data ) {\r\n\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\tscope.parse( data, path, onLoad, onError );\r\n\r\n\t\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\t\tif ( onError !== undefined ) {\r\n\r\n\t\t\t\t\t\tonError( e );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tthrow e;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t},\r\n\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\t\tthis.crossOrigin = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetPath: function ( value ) {\r\n\r\n\t\t\tthis.path = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tparse: function ( data, path, onLoad, onError ) {\r\n\r\n\t\t\tvar content;\r\n\t\t\tvar extensions = {};\r\n\r\n\t\t\tif ( typeof data === 'string' ) {\r\n\r\n\t\t\t\tcontent = data;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar magic = THREE.LoaderUtils.decodeText( new Uint8Array( data, 0, 4 ) );\r\n\r\n\t\t\t\tif ( magic === BINARY_EXTENSION_HEADER_MAGIC ) {\r\n\r\n\t\t\t\t\ttry {\r\n\r\n\t\t\t\t\t\textensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\r\n\r\n\t\t\t\t\t} catch ( error ) {\r\n\r\n\t\t\t\t\t\tif ( onError ) onError( error );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcontent = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tcontent = THREE.LoaderUtils.decodeText( new Uint8Array( data ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar json = JSON.parse( content );\r\n\r\n\t\t\tif ( json.asset === undefined || json.asset.version[ 0 ] < 2 ) {\r\n\r\n\t\t\t\tif ( onError ) onError( new Error( 'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported. Use LegacyGLTFLoader instead.' ) );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.extensionsUsed ) {\r\n\r\n\t\t\t\tif ( json.extensionsUsed.indexOf( EXTENSIONS.KHR_LIGHTS ) >= 0 ) {\r\n\r\n\t\t\t\t\textensions[ EXTENSIONS.KHR_LIGHTS ] = new GLTFLightsExtension( json );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( json.extensionsUsed.indexOf( EXTENSIONS.KHR_MATERIALS_COMMON ) >= 0 ) {\r\n\r\n\t\t\t\t\textensions[ EXTENSIONS.KHR_MATERIALS_COMMON ] = new GLTFMaterialsCommonExtension( json );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( json.extensionsUsed.indexOf( EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ) >= 0 ) {\r\n\r\n\t\t\t\t\textensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ] = new GLTFMaterialsPbrSpecularGlossinessExtension();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// console.time( 'GLTFLoader' );\r\n\r\n\t\t\tvar parser = new GLTFParser( json, extensions, {\r\n\r\n\t\t\t\tpath: path || this.path || '',\r\n\t\t\t\tcrossOrigin: this.crossOrigin,\r\n\t\t\t\tmanager: this.manager\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tparser.parse( function ( scene, scenes, cameras, animations, asset ) {\r\n\r\n\t\t\t\t// console.timeEnd( 'GLTFLoader' );\r\n\r\n\t\t\t\tvar glTF = {\r\n\t\t\t\t\tscene: scene,\r\n\t\t\t\t\tscenes: scenes,\r\n\t\t\t\t\tcameras: cameras,\r\n\t\t\t\t\tanimations: animations,\r\n\t\t\t\t\tasset: asset\r\n\t\t\t\t};\r\n\r\n\t\t\t\tonLoad( glTF );\r\n\r\n\t\t\t}, onError );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t/* GLTFREGISTRY */\r\n\r\n\tfunction GLTFRegistry() {\r\n\r\n\t\tvar objects = {};\r\n\r\n\t\treturn\t{\r\n\r\n\t\t\tget: function ( key ) {\r\n\r\n\t\t\t\treturn objects[ key ];\r\n\r\n\t\t\t},\r\n\r\n\t\t\tadd: function ( key, object ) {\r\n\r\n\t\t\t\tobjects[ key ] = object;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tremove: function ( key ) {\r\n\r\n\t\t\t\tdelete objects[ key ];\r\n\r\n\t\t\t},\r\n\r\n\t\t\tremoveAll: function () {\r\n\r\n\t\t\t\tobjects = {};\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/*********************************/\r\n\t/********** EXTENSIONS ***********/\r\n\t/*********************************/\r\n\r\n\tvar EXTENSIONS = {\r\n\t\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\r\n\t\tKHR_LIGHTS: 'KHR_lights',\r\n\t\tKHR_MATERIALS_COMMON: 'KHR_materials_common',\r\n\t\tKHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness'\r\n\t};\r\n\r\n\t/**\r\n\t * Lights Extension\r\n\t *\r\n\t * Specification: PENDING\r\n\t */\r\n\tfunction GLTFLightsExtension( json ) {\r\n\r\n\t\tthis.name = EXTENSIONS.KHR_LIGHTS;\r\n\r\n\t\tthis.lights = {};\r\n\r\n\t\tvar extension = ( json.extensions && json.extensions[ EXTENSIONS.KHR_LIGHTS ] ) || {};\r\n\t\tvar lights = extension.lights || {};\r\n\r\n\t\tfor ( var lightId in lights ) {\r\n\r\n\t\t\tvar light = lights[ lightId ];\r\n\t\t\tvar lightNode;\r\n\r\n\t\t\tvar color = new THREE.Color().fromArray( light.color );\r\n\r\n\t\t\tswitch ( light.type ) {\r\n\r\n\t\t\t\tcase 'directional':\r\n\t\t\t\t\tlightNode = new THREE.DirectionalLight( color );\r\n\t\t\t\t\tlightNode.position.set( 0, 0, 1 );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'point':\r\n\t\t\t\t\tlightNode = new THREE.PointLight( color );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'spot':\r\n\t\t\t\t\tlightNode = new THREE.SpotLight( color );\r\n\t\t\t\t\tlightNode.position.set( 0, 0, 1 );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'ambient':\r\n\t\t\t\t\tlightNode = new THREE.AmbientLight( color );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( lightNode ) {\r\n\r\n\t\t\t\tif ( light.constantAttenuation !== undefined ) {\r\n\r\n\t\t\t\t\tlightNode.intensity = light.constantAttenuation;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( light.linearAttenuation !== undefined ) {\r\n\r\n\t\t\t\t\tlightNode.distance = 1 / light.linearAttenuation;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( light.quadraticAttenuation !== undefined ) {\r\n\r\n\t\t\t\t\tlightNode.decay = light.quadraticAttenuation;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( light.fallOffAngle !== undefined ) {\r\n\r\n\t\t\t\t\tlightNode.angle = light.fallOffAngle;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( light.fallOffExponent !== undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader:: light.fallOffExponent not currently supported.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlightNode.name = light.name || ( 'light_' + lightId );\r\n\t\t\t\tthis.lights[ lightId ] = lightNode;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Common Materials Extension\r\n\t *\r\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/Khronos/KHR_materials_common\r\n\t */\r\n\tfunction GLTFMaterialsCommonExtension( json ) {\r\n\r\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_COMMON;\r\n\r\n\t}\r\n\r\n\tGLTFMaterialsCommonExtension.prototype.getMaterialType = function ( material ) {\r\n\r\n\t\tvar khrMaterial = material.extensions[ this.name ];\r\n\r\n\t\tswitch ( khrMaterial.type ) {\r\n\r\n\t\t\tcase 'commonBlinn' :\r\n\t\t\tcase 'commonPhong' :\r\n\t\t\t\treturn THREE.MeshPhongMaterial;\r\n\r\n\t\t\tcase 'commonLambert' :\r\n\t\t\t\treturn THREE.MeshLambertMaterial;\r\n\r\n\t\t\tcase 'commonConstant' :\r\n\t\t\tdefault :\r\n\t\t\t\treturn THREE.MeshBasicMaterial;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tGLTFMaterialsCommonExtension.prototype.extendParams = function ( materialParams, material, parser ) {\r\n\r\n\t\tvar khrMaterial = material.extensions[ this.name ];\r\n\r\n\t\tvar pending = [];\r\n\r\n\t\tvar keys = [];\r\n\r\n\t\t// TODO: Currently ignored: 'ambientFactor', 'ambientTexture'\r\n\t\tswitch ( khrMaterial.type ) {\r\n\r\n\t\t\tcase 'commonBlinn' :\r\n\t\t\tcase 'commonPhong' :\r\n\t\t\t\tkeys.push( 'diffuseFactor', 'diffuseTexture', 'specularFactor', 'specularTexture', 'shininessFactor' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'commonLambert' :\r\n\t\t\t\tkeys.push( 'diffuseFactor', 'diffuseTexture' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'commonConstant' :\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tvar materialValues = {};\r\n\r\n\t\tkeys.forEach( function ( v ) {\r\n\r\n\t\t\tif ( khrMaterial[ v ] !== undefined ) materialValues[ v ] = khrMaterial[ v ];\r\n\r\n\t\t} );\r\n\r\n\t\tif ( materialValues.diffuseFactor !== undefined ) {\r\n\r\n\t\t\tmaterialParams.color = new THREE.Color().fromArray( materialValues.diffuseFactor );\r\n\t\t\tmaterialParams.opacity = materialValues.diffuseFactor[ 3 ];\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialValues.diffuseTexture !== undefined ) {\r\n\r\n\t\t\tpending.push( parser.assignTexture( materialParams, 'map', materialValues.diffuseTexture.index ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialValues.specularFactor !== undefined ) {\r\n\r\n\t\t\tmaterialParams.specular = new THREE.Color().fromArray( materialValues.specularFactor );\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialValues.specularTexture !== undefined ) {\r\n\r\n\t\t\tpending.push( parser.assignTexture( materialParams, 'specularMap', materialValues.specularTexture.index ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialValues.shininessFactor !== undefined ) {\r\n\r\n\t\t\tmaterialParams.shininess = materialValues.shininessFactor;\r\n\r\n\t\t}\r\n\r\n\t\treturn Promise.all( pending );\r\n\r\n\t};\r\n\r\n\t/* BINARY EXTENSION */\r\n\r\n\tvar BINARY_EXTENSION_BUFFER_NAME = 'binary_glTF';\r\n\tvar BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\r\n\tvar BINARY_EXTENSION_HEADER_LENGTH = 12;\r\n\tvar BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\r\n\r\n\tfunction GLTFBinaryExtension( data ) {\r\n\r\n\t\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\r\n\t\tthis.content = null;\r\n\t\tthis.body = null;\r\n\r\n\t\tvar headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\r\n\r\n\t\tthis.header = {\r\n\t\t\tmagic: THREE.LoaderUtils.decodeText( new Uint8Array( data.slice( 0, 4 ) ) ),\r\n\t\t\tversion: headerView.getUint32( 4, true ),\r\n\t\t\tlength: headerView.getUint32( 8, true )\r\n\t\t};\r\n\r\n\t\tif ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported glTF-Binary header.' );\r\n\r\n\t\t} else if ( this.header.version < 2.0 ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Legacy binary file detected. Use LegacyGLTFLoader instead.' );\r\n\r\n\t\t}\r\n\r\n\t\tvar chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH );\r\n\t\tvar chunkIndex = 0;\r\n\r\n\t\twhile ( chunkIndex < chunkView.byteLength ) {\r\n\r\n\t\t\tvar chunkLength = chunkView.getUint32( chunkIndex, true );\r\n\t\t\tchunkIndex += 4;\r\n\r\n\t\t\tvar chunkType = chunkView.getUint32( chunkIndex, true );\r\n\t\t\tchunkIndex += 4;\r\n\r\n\t\t\tif ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\r\n\r\n\t\t\t\tvar contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\r\n\t\t\t\tthis.content = THREE.LoaderUtils.decodeText( contentArray );\r\n\r\n\t\t\t} else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\r\n\r\n\t\t\t\tvar byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\r\n\t\t\t\tthis.body = data.slice( byteOffset, byteOffset + chunkLength );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Clients must ignore chunks with unknown types.\r\n\r\n\t\t\tchunkIndex += chunkLength;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.content === null ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.GLTFLoader: JSON content not found.' );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specular-Glossiness Extension\r\n\t *\r\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/Khronos/KHR_materials_pbrSpecularGlossiness\r\n\t */\r\n\tfunction GLTFMaterialsPbrSpecularGlossinessExtension() {\r\n\r\n\t\treturn {\r\n\r\n\t\t\tname: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\r\n\r\n\t\t\tspecularGlossinessParams: [\r\n\t\t\t\t'color',\r\n\t\t\t\t'map',\r\n\t\t\t\t'lightMap',\r\n\t\t\t\t'lightMapIntensity',\r\n\t\t\t\t'aoMap',\r\n\t\t\t\t'aoMapIntensity',\r\n\t\t\t\t'emissive',\r\n\t\t\t\t'emissiveIntensity',\r\n\t\t\t\t'emissiveMap',\r\n\t\t\t\t'bumpMap',\r\n\t\t\t\t'bumpScale',\r\n\t\t\t\t'normalMap',\r\n\t\t\t\t'displacementMap',\r\n\t\t\t\t'displacementScale',\r\n\t\t\t\t'displacementBias',\r\n\t\t\t\t'specularMap',\r\n\t\t\t\t'specular',\r\n\t\t\t\t'glossinessMap',\r\n\t\t\t\t'glossiness',\r\n\t\t\t\t'alphaMap',\r\n\t\t\t\t'envMap',\r\n\t\t\t\t'envMapIntensity',\r\n\t\t\t\t'refractionRatio',\r\n\t\t\t],\r\n\r\n\t\t\tgetMaterialType: function () {\r\n\r\n\t\t\t\treturn THREE.ShaderMaterial;\r\n\r\n\t\t\t},\r\n\r\n\t\t\textendParams: function ( params, material, parser ) {\r\n\r\n\t\t\t\tvar pbrSpecularGlossiness = material.extensions[ this.name ];\r\n\r\n\t\t\t\tvar shader = THREE.ShaderLib[ 'standard' ];\r\n\r\n\t\t\t\tvar uniforms = THREE.UniformsUtils.clone( shader.uniforms );\r\n\r\n\t\t\t\tvar specularMapParsFragmentChunk = [\r\n\t\t\t\t\t'#ifdef USE_SPECULARMAP',\r\n\t\t\t\t\t'\tuniform sampler2D specularMap;',\r\n\t\t\t\t\t'#endif'\r\n\t\t\t\t].join( '\\n' );\r\n\r\n\t\t\t\tvar glossinessMapParsFragmentChunk = [\r\n\t\t\t\t\t'#ifdef USE_GLOSSINESSMAP',\r\n\t\t\t\t\t'\tuniform sampler2D glossinessMap;',\r\n\t\t\t\t\t'#endif'\r\n\t\t\t\t].join( '\\n' );\r\n\r\n\t\t\t\tvar specularMapFragmentChunk = [\r\n\t\t\t\t\t'vec3 specularFactor = specular;',\r\n\t\t\t\t\t'#ifdef USE_SPECULARMAP',\r\n\t\t\t\t\t'\tvec4 texelSpecular = texture2D( specularMap, vUv );',\r\n\t\t\t\t\t'\ttexelSpecular = sRGBToLinear( texelSpecular );',\r\n\t\t\t\t\t'\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\r\n\t\t\t\t\t'\tspecularFactor *= texelSpecular.rgb;',\r\n\t\t\t\t\t'#endif'\r\n\t\t\t\t].join( '\\n' );\r\n\r\n\t\t\t\tvar glossinessMapFragmentChunk = [\r\n\t\t\t\t\t'float glossinessFactor = glossiness;',\r\n\t\t\t\t\t'#ifdef USE_GLOSSINESSMAP',\r\n\t\t\t\t\t'\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\r\n\t\t\t\t\t'\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\r\n\t\t\t\t\t'\tglossinessFactor *= texelGlossiness.a;',\r\n\t\t\t\t\t'#endif'\r\n\t\t\t\t].join( '\\n' );\r\n\r\n\t\t\t\tvar lightPhysicalFragmentChunk = [\r\n\t\t\t\t\t'PhysicalMaterial material;',\r\n\t\t\t\t\t'material.diffuseColor = diffuseColor.rgb;',\r\n\t\t\t\t\t'material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );',\r\n\t\t\t\t\t'material.specularColor = specularFactor.rgb;',\r\n\t\t\t\t].join( '\\n' );\r\n\r\n\t\t\t\tvar fragmentShader = shader.fragmentShader\r\n\t\t\t\t\t.replace( '#include <specularmap_fragment>', '' )\r\n\t\t\t\t\t.replace( 'uniform float roughness;', 'uniform vec3 specular;' )\r\n\t\t\t\t\t.replace( 'uniform float metalness;', 'uniform float glossiness;' )\r\n\t\t\t\t\t.replace( '#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk )\r\n\t\t\t\t\t.replace( '#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk )\r\n\t\t\t\t\t.replace( '#include <roughnessmap_fragment>', specularMapFragmentChunk )\r\n\t\t\t\t\t.replace( '#include <metalnessmap_fragment>', glossinessMapFragmentChunk )\r\n\t\t\t\t\t.replace( '#include <lights_physical_fragment>', lightPhysicalFragmentChunk );\r\n\r\n\t\t\t\tdelete uniforms.roughness;\r\n\t\t\t\tdelete uniforms.metalness;\r\n\t\t\t\tdelete uniforms.roughnessMap;\r\n\t\t\t\tdelete uniforms.metalnessMap;\r\n\r\n\t\t\t\tuniforms.specular = { value: new THREE.Color().setHex( 0x111111 ) };\r\n\t\t\t\tuniforms.glossiness = { value: 0.5 };\r\n\t\t\t\tuniforms.specularMap = { value: null };\r\n\t\t\t\tuniforms.glossinessMap = { value: null };\r\n\r\n\t\t\t\tparams.vertexShader = shader.vertexShader;\r\n\t\t\t\tparams.fragmentShader = fragmentShader;\r\n\t\t\t\tparams.uniforms = uniforms;\r\n\t\t\t\tparams.defines = { 'STANDARD': '' };\r\n\r\n\t\t\t\tparams.color = new THREE.Color( 1.0, 1.0, 1.0 );\r\n\t\t\t\tparams.opacity = 1.0;\r\n\r\n\t\t\t\tvar pending = [];\r\n\r\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.diffuseFactor ) ) {\r\n\r\n\t\t\t\t\tvar array = pbrSpecularGlossiness.diffuseFactor;\r\n\r\n\t\t\t\t\tparams.color.fromArray( array );\r\n\t\t\t\t\tparams.opacity = array[ 3 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( pbrSpecularGlossiness.diffuseTexture !== undefined ) {\r\n\r\n\t\t\t\t\tpending.push( parser.assignTexture( params, 'map', pbrSpecularGlossiness.diffuseTexture.index ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparams.emissive = new THREE.Color( 0.0, 0.0, 0.0 );\r\n\t\t\t\tparams.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\r\n\t\t\t\tparams.specular = new THREE.Color( 1.0, 1.0, 1.0 );\r\n\r\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.specularFactor ) ) {\r\n\r\n\t\t\t\t\tparams.specular.fromArray( pbrSpecularGlossiness.specularFactor );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( pbrSpecularGlossiness.specularGlossinessTexture !== undefined ) {\r\n\r\n\t\t\t\t\tvar specGlossIndex = pbrSpecularGlossiness.specularGlossinessTexture.index;\r\n\t\t\t\t\tpending.push( parser.assignTexture( params, 'glossinessMap', specGlossIndex ) );\r\n\t\t\t\t\tpending.push( parser.assignTexture( params, 'specularMap', specGlossIndex ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn Promise.all( pending );\r\n\r\n\t\t\t},\r\n\r\n\t\t\tcreateMaterial: function ( params ) {\r\n\r\n\t\t\t\t// setup material properties based on MeshStandardMaterial for Specular-Glossiness\r\n\r\n\t\t\t\tvar material = new THREE.ShaderMaterial( {\r\n\t\t\t\t\tdefines: params.defines,\r\n\t\t\t\t\tvertexShader: params.vertexShader,\r\n\t\t\t\t\tfragmentShader: params.fragmentShader,\r\n\t\t\t\t\tuniforms: params.uniforms,\r\n\t\t\t\t\tfog: true,\r\n\t\t\t\t\tlights: true,\r\n\t\t\t\t\topacity: params.opacity,\r\n\t\t\t\t\ttransparent: params.transparent\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tmaterial.isGLTFSpecularGlossinessMaterial = true;\r\n\r\n\t\t\t\tmaterial.color = params.color;\r\n\r\n\t\t\t\tmaterial.map = params.map === undefined ? null : params.map;\r\n\r\n\t\t\t\tmaterial.lightMap = null;\r\n\t\t\t\tmaterial.lightMapIntensity = 1.0;\r\n\r\n\t\t\t\tmaterial.aoMap = params.aoMap === undefined ? null : params.aoMap;\r\n\t\t\t\tmaterial.aoMapIntensity = 1.0;\r\n\r\n\t\t\t\tmaterial.emissive = params.emissive;\r\n\t\t\t\tmaterial.emissiveIntensity = 1.0;\r\n\t\t\t\tmaterial.emissiveMap = params.emissiveMap === undefined ? null : params.emissiveMap;\r\n\r\n\t\t\t\tmaterial.bumpMap = params.bumpMap === undefined ? null : params.bumpMap;\r\n\t\t\t\tmaterial.bumpScale = 1;\r\n\r\n\t\t\t\tmaterial.normalMap = params.normalMap === undefined ? null : params.normalMap;\r\n\t\t\t\tif ( params.normalScale ) material.normalScale = params.normalScale;\r\n\r\n\t\t\t\tmaterial.displacementMap = null;\r\n\t\t\t\tmaterial.displacementScale = 1;\r\n\t\t\t\tmaterial.displacementBias = 0;\r\n\r\n\t\t\t\tmaterial.specularMap = params.specularMap === undefined ? null : params.specularMap;\r\n\t\t\t\tmaterial.specular = params.specular;\r\n\r\n\t\t\t\tmaterial.glossinessMap = params.glossinessMap === undefined ? null : params.glossinessMap;\r\n\t\t\t\tmaterial.glossiness = params.glossiness;\r\n\r\n\t\t\t\tmaterial.alphaMap = null;\r\n\r\n\t\t\t\tmaterial.envMap = params.envMap === undefined ? null : params.envMap;\r\n\t\t\t\tmaterial.envMapIntensity = 1.0;\r\n\r\n\t\t\t\tmaterial.refractionRatio = 0.98;\r\n\r\n\t\t\t\tmaterial.extensions.derivatives = true;\r\n\r\n\t\t\t\treturn material;\r\n\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Clones a GLTFSpecularGlossinessMaterial instance. The ShaderMaterial.copy() method can\r\n\t\t\t * copy only properties it knows about or inherits, and misses many properties that would\r\n\t\t\t * normally be defined by MeshStandardMaterial.\r\n\t\t\t *\r\n\t\t\t * This method allows GLTFSpecularGlossinessMaterials to be cloned in the process of\r\n\t\t\t * loading a glTF model, but cloning later (e.g. by the user) would require these changes\r\n\t\t\t * AND also updating `.onBeforeRender` on the parent mesh.\r\n\t\t\t *\r\n\t\t\t * @param  {THREE.ShaderMaterial} source\r\n\t\t\t * @return {THREE.ShaderMaterial}\r\n\t\t\t */\r\n\t\t\tcloneMaterial: function ( source ) {\r\n\r\n\t\t\t\tvar target = source.clone();\r\n\r\n\t\t\t\ttarget.isGLTFSpecularGlossinessMaterial = true;\r\n\r\n\t\t\t\tvar params = this.specularGlossinessParams;\r\n\r\n\t\t\t\tfor ( var i = 0, il = params.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\ttarget[ params[ i ] ] = source[ params[ i ] ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn target;\r\n\r\n\t\t\t},\r\n\r\n\t\t\t// Here's based on refreshUniformsCommon() and refreshUniformsStandard() in WebGLRenderer.\r\n\t\t\trefreshUniforms: function ( renderer, scene, camera, geometry, material, group ) {\r\n\r\n\t\t\t\tvar uniforms = material.uniforms;\r\n\t\t\t\tvar defines = material.defines;\r\n\r\n\t\t\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t\tuniforms.diffuse.value.copy( material.color );\r\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\r\n\r\n\t\t\t\tuniforms.map.value = material.map;\r\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\r\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\r\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\r\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\r\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\r\n\t\t\t\t// uv repeat and offset setting priorities\r\n\t\t\t\t// 1. color map\r\n\t\t\t\t// 2. specular map\r\n\t\t\t\t// 3. normal map\r\n\t\t\t\t// 4. bump map\r\n\t\t\t\t// 5. alpha map\r\n\t\t\t\t// 6. emissive map\r\n\r\n\t\t\t\tvar uvScaleMap;\r\n\r\n\t\t\t\tif ( material.map ) {\r\n\r\n\t\t\t\t\tuvScaleMap = material.map;\r\n\r\n\t\t\t\t} else if ( material.specularMap ) {\r\n\r\n\t\t\t\t\tuvScaleMap = material.specularMap;\r\n\r\n\t\t\t\t} else if ( material.displacementMap ) {\r\n\r\n\t\t\t\t\tuvScaleMap = material.displacementMap;\r\n\r\n\t\t\t\t} else if ( material.normalMap ) {\r\n\r\n\t\t\t\t\tuvScaleMap = material.normalMap;\r\n\r\n\t\t\t\t} else if ( material.bumpMap ) {\r\n\r\n\t\t\t\t\tuvScaleMap = material.bumpMap;\r\n\r\n\t\t\t\t} else if ( material.glossinessMap ) {\r\n\r\n\t\t\t\t\tuvScaleMap = material.glossinessMap;\r\n\r\n\t\t\t\t} else if ( material.alphaMap ) {\r\n\r\n\t\t\t\t\tuvScaleMap = material.alphaMap;\r\n\r\n\t\t\t\t} else if ( material.emissiveMap ) {\r\n\r\n\t\t\t\t\tuvScaleMap = material.emissiveMap;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( uvScaleMap !== undefined ) {\r\n\r\n\t\t\t\t\t// backwards compatibility\r\n\t\t\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\r\n\r\n\t\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar offset;\r\n\t\t\t\t\tvar repeat;\r\n\r\n\t\t\t\t\tif ( uvScaleMap.matrix !== undefined ) {\r\n\r\n\t\t\t\t\t\t// > r88.\r\n\r\n\t\t\t\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\r\n\r\n\t\t\t\t\t\t\toffset = uvScaleMap.offset;\r\n\t\t\t\t\t\t\trepeat = uvScaleMap.repeat;\r\n\t\t\t\t\t\t\tvar rotation = uvScaleMap.rotation;\r\n\t\t\t\t\t\t\tvar center = uvScaleMap.center;\r\n\r\n\t\t\t\t\t\t\tuvScaleMap.matrix.setUvTransform( offset.x, offset.y, repeat.x, repeat.y, rotation, center.x, center.y );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// <= r87. Remove when reasonable.\r\n\r\n\t\t\t\t\t\toffset = uvScaleMap.offset;\r\n\t\t\t\t\t\trepeat = uvScaleMap.repeat;\r\n\r\n\t\t\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniforms.envMap.value = material.envMap;\r\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\r\n\t\t\t\tuniforms.flipEnvMap.value = ( material.envMap && material.envMap.isCubeTexture ) ? - 1 : 1;\r\n\r\n\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\r\n\t\t\t\tuniforms.specular.value.copy( material.specular );\r\n\t\t\t\tuniforms.glossiness.value = material.glossiness;\r\n\r\n\t\t\t\tuniforms.glossinessMap.value = material.glossinessMap;\r\n\r\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t\t\tif ( uniforms.glossinessMap.value !== null && defines.USE_GLOSSINESSMAP === undefined ) {\r\n\r\n\t\t\t\t\tdefines.USE_GLOSSINESSMAP = '';\r\n\t\t\t\t\t// set USE_ROUGHNESSMAP to enable vUv\r\n\t\t\t\t\tdefines.USE_ROUGHNESSMAP = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( uniforms.glossinessMap.value === null && defines.USE_GLOSSINESSMAP !== undefined ) {\r\n\r\n\t\t\t\t\tdelete defines.USE_GLOSSINESSMAP;\r\n\t\t\t\t\tdelete defines.USE_ROUGHNESSMAP;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/*********************************/\r\n\t/********** INTERNALS ************/\r\n\t/*********************************/\r\n\r\n\t/* CONSTANTS */\r\n\r\n\tvar WEBGL_CONSTANTS = {\r\n\t\tFLOAT: 5126,\r\n\t\t//FLOAT_MAT2: 35674,\r\n\t\tFLOAT_MAT3: 35675,\r\n\t\tFLOAT_MAT4: 35676,\r\n\t\tFLOAT_VEC2: 35664,\r\n\t\tFLOAT_VEC3: 35665,\r\n\t\tFLOAT_VEC4: 35666,\r\n\t\tLINEAR: 9729,\r\n\t\tREPEAT: 10497,\r\n\t\tSAMPLER_2D: 35678,\r\n\t\tPOINTS: 0,\r\n\t\tLINES: 1,\r\n\t\tLINE_LOOP: 2,\r\n\t\tLINE_STRIP: 3,\r\n\t\tTRIANGLES: 4,\r\n\t\tTRIANGLE_STRIP: 5,\r\n\t\tTRIANGLE_FAN: 6,\r\n\t\tUNSIGNED_BYTE: 5121,\r\n\t\tUNSIGNED_SHORT: 5123\r\n\t};\r\n\r\n\tvar WEBGL_TYPE = {\r\n\t\t5126: Number,\r\n\t\t//35674: THREE.Matrix2,\r\n\t\t35675: THREE.Matrix3,\r\n\t\t35676: THREE.Matrix4,\r\n\t\t35664: THREE.Vector2,\r\n\t\t35665: THREE.Vector3,\r\n\t\t35666: THREE.Vector4,\r\n\t\t35678: THREE.Texture\r\n\t};\r\n\r\n\tvar WEBGL_COMPONENT_TYPES = {\r\n\t\t5120: Int8Array,\r\n\t\t5121: Uint8Array,\r\n\t\t5122: Int16Array,\r\n\t\t5123: Uint16Array,\r\n\t\t5125: Uint32Array,\r\n\t\t5126: Float32Array\r\n\t};\r\n\r\n\tvar WEBGL_FILTERS = {\r\n\t\t9728: THREE.NearestFilter,\r\n\t\t9729: THREE.LinearFilter,\r\n\t\t9984: THREE.NearestMipMapNearestFilter,\r\n\t\t9985: THREE.LinearMipMapNearestFilter,\r\n\t\t9986: THREE.NearestMipMapLinearFilter,\r\n\t\t9987: THREE.LinearMipMapLinearFilter\r\n\t};\r\n\r\n\tvar WEBGL_WRAPPINGS = {\r\n\t\t33071: THREE.ClampToEdgeWrapping,\r\n\t\t33648: THREE.MirroredRepeatWrapping,\r\n\t\t10497: THREE.RepeatWrapping\r\n\t};\r\n\r\n\tvar WEBGL_TEXTURE_FORMATS = {\r\n\t\t6406: THREE.AlphaFormat,\r\n\t\t6407: THREE.RGBFormat,\r\n\t\t6408: THREE.RGBAFormat,\r\n\t\t6409: THREE.LuminanceFormat,\r\n\t\t6410: THREE.LuminanceAlphaFormat\r\n\t};\r\n\r\n\tvar WEBGL_TEXTURE_DATATYPES = {\r\n\t\t5121: THREE.UnsignedByteType,\r\n\t\t32819: THREE.UnsignedShort4444Type,\r\n\t\t32820: THREE.UnsignedShort5551Type,\r\n\t\t33635: THREE.UnsignedShort565Type\r\n\t};\r\n\r\n\tvar WEBGL_SIDES = {\r\n\t\t1028: THREE.BackSide, // Culling front\r\n\t\t1029: THREE.FrontSide // Culling back\r\n\t\t//1032: THREE.NoSide   // Culling front and back, what to do?\r\n\t};\r\n\r\n\tvar WEBGL_DEPTH_FUNCS = {\r\n\t\t512: THREE.NeverDepth,\r\n\t\t513: THREE.LessDepth,\r\n\t\t514: THREE.EqualDepth,\r\n\t\t515: THREE.LessEqualDepth,\r\n\t\t516: THREE.GreaterEqualDepth,\r\n\t\t517: THREE.NotEqualDepth,\r\n\t\t518: THREE.GreaterEqualDepth,\r\n\t\t519: THREE.AlwaysDepth\r\n\t};\r\n\r\n\tvar WEBGL_BLEND_EQUATIONS = {\r\n\t\t32774: THREE.AddEquation,\r\n\t\t32778: THREE.SubtractEquation,\r\n\t\t32779: THREE.ReverseSubtractEquation\r\n\t};\r\n\r\n\tvar WEBGL_BLEND_FUNCS = {\r\n\t\t0: THREE.ZeroFactor,\r\n\t\t1: THREE.OneFactor,\r\n\t\t768: THREE.SrcColorFactor,\r\n\t\t769: THREE.OneMinusSrcColorFactor,\r\n\t\t770: THREE.SrcAlphaFactor,\r\n\t\t771: THREE.OneMinusSrcAlphaFactor,\r\n\t\t772: THREE.DstAlphaFactor,\r\n\t\t773: THREE.OneMinusDstAlphaFactor,\r\n\t\t774: THREE.DstColorFactor,\r\n\t\t775: THREE.OneMinusDstColorFactor,\r\n\t\t776: THREE.SrcAlphaSaturateFactor\r\n\t\t// The followings are not supported by Three.js yet\r\n\t\t//32769: CONSTANT_COLOR,\r\n\t\t//32770: ONE_MINUS_CONSTANT_COLOR,\r\n\t\t//32771: CONSTANT_ALPHA,\r\n\t\t//32772: ONE_MINUS_CONSTANT_COLOR\r\n\t};\r\n\r\n\tvar WEBGL_TYPE_SIZES = {\r\n\t\t'SCALAR': 1,\r\n\t\t'VEC2': 2,\r\n\t\t'VEC3': 3,\r\n\t\t'VEC4': 4,\r\n\t\t'MAT2': 4,\r\n\t\t'MAT3': 9,\r\n\t\t'MAT4': 16\r\n\t};\r\n\r\n\tvar PATH_PROPERTIES = {\r\n\t\tscale: 'scale',\r\n\t\ttranslation: 'position',\r\n\t\trotation: 'quaternion',\r\n\t\tweights: 'morphTargetInfluences'\r\n\t};\r\n\r\n\tvar INTERPOLATION = {\r\n\t\tCUBICSPLINE: THREE.InterpolateSmooth,\r\n\t\tLINEAR: THREE.InterpolateLinear,\r\n\t\tSTEP: THREE.InterpolateDiscrete\r\n\t};\r\n\r\n\tvar STATES_ENABLES = {\r\n\t\t2884: 'CULL_FACE',\r\n\t\t2929: 'DEPTH_TEST',\r\n\t\t3042: 'BLEND',\r\n\t\t3089: 'SCISSOR_TEST',\r\n\t\t32823: 'POLYGON_OFFSET_FILL',\r\n\t\t32926: 'SAMPLE_ALPHA_TO_COVERAGE'\r\n\t};\r\n\r\n\tvar ALPHA_MODES = {\r\n\t\tOPAQUE: 'OPAQUE',\r\n\t\tMASK: 'MASK',\r\n\t\tBLEND: 'BLEND'\r\n\t};\r\n\r\n\t/* UTILITY FUNCTIONS */\r\n\r\n\tfunction resolveURL( url, path ) {\r\n\r\n\t\t// Invalid URL\r\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\r\n\r\n\t\t// Absolute URL http://,https://,//\r\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\r\n\r\n\t\t// Data URI\r\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\r\n\r\n\t\t// Blob URL\r\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\r\n\r\n\t\t// Relative URL\r\n\t\treturn path + url;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\r\n\t */\r\n\tfunction createDefaultMaterial() {\r\n\r\n\t\treturn new THREE.MeshStandardMaterial( {\r\n\t\t\tcolor: 0xFFFFFF,\r\n\t\t\temissive: 0x000000,\r\n\t\t\tmetalness: 1,\r\n\t\t\troughness: 1,\r\n\t\t\ttransparent: false,\r\n\t\t\tdepthTest: true,\r\n\t\t\tside: THREE.FrontSide\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\r\n\t *\r\n\t * TODO: Implement support for morph targets on TANGENT attribute.\r\n\t *\r\n\t * @param {THREE.Mesh} mesh\r\n\t * @param {GLTF.Mesh} meshDef\r\n\t * @param {GLTF.Primitive} primitiveDef\r\n\t * @param {Array<THREE.BufferAttribute>} accessors\r\n\t */\r\n\tfunction addMorphTargets( mesh, meshDef, primitiveDef, accessors ) {\r\n\r\n\t\tvar geometry = mesh.geometry;\r\n\t\tvar material = mesh.material;\r\n\r\n\t\tvar targets = primitiveDef.targets;\r\n\t\tvar morphAttributes = geometry.morphAttributes;\r\n\r\n\t\tmorphAttributes.position = [];\r\n\t\tmorphAttributes.normal = [];\r\n\r\n\t\tmaterial.morphTargets = true;\r\n\r\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar target = targets[ i ];\r\n\t\t\tvar attributeName = 'morphTarget' + i;\r\n\r\n\t\t\tvar positionAttribute, normalAttribute;\r\n\r\n\t\t\tif ( target.POSITION !== undefined ) {\r\n\r\n\t\t\t\t// Three.js morph formula is\r\n\t\t\t\t//   position\r\n\t\t\t\t//     + weight0 * ( morphTarget0 - position )\r\n\t\t\t\t//     + weight1 * ( morphTarget1 - position )\r\n\t\t\t\t//     ...\r\n\t\t\t\t// while the glTF one is\r\n\t\t\t\t//   position\r\n\t\t\t\t//     + weight0 * morphTarget0\r\n\t\t\t\t//     + weight1 * morphTarget1\r\n\t\t\t\t//     ...\r\n\t\t\t\t// then adding position to morphTarget.\r\n\t\t\t\t// So morphTarget value will depend on mesh's position, then cloning attribute\r\n\t\t\t\t// for the case if attribute is shared among two or more meshes.\r\n\r\n\t\t\t\tpositionAttribute = accessors[ target.POSITION ].clone();\r\n\t\t\t\tvar position = geometry.attributes.position;\r\n\r\n\t\t\t\tfor ( var j = 0, jl = positionAttribute.count; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tpositionAttribute.setXYZ(\r\n\t\t\t\t\t\tj,\r\n\t\t\t\t\t\tpositionAttribute.getX( j ) + position.getX( j ),\r\n\t\t\t\t\t\tpositionAttribute.getY( j ) + position.getY( j ),\r\n\t\t\t\t\t\tpositionAttribute.getZ( j ) + position.getZ( j )\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( geometry.attributes.position ) {\r\n\r\n\t\t\t\t// Copying the original position not to affect the final position.\r\n\t\t\t\t// See the formula above.\r\n\t\t\t\tpositionAttribute = geometry.attributes.position.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( positionAttribute !== undefined ) {\r\n\r\n\t\t\t\tpositionAttribute.name = attributeName;\r\n\t\t\t\tmorphAttributes.position.push( positionAttribute );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( target.NORMAL !== undefined ) {\r\n\r\n\t\t\t\tmaterial.morphNormals = true;\r\n\r\n\t\t\t\t// see target.POSITION's comment\r\n\r\n\t\t\t\tnormalAttribute = accessors[ target.NORMAL ].clone();\r\n\t\t\t\tvar normal = geometry.attributes.normal;\r\n\r\n\t\t\t\tfor ( var j = 0, jl = normalAttribute.count; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tnormalAttribute.setXYZ(\r\n\t\t\t\t\t\tj,\r\n\t\t\t\t\t\tnormalAttribute.getX( j ) + normal.getX( j ),\r\n\t\t\t\t\t\tnormalAttribute.getY( j ) + normal.getY( j ),\r\n\t\t\t\t\t\tnormalAttribute.getZ( j ) + normal.getZ( j )\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( geometry.attributes.normal !== undefined ) {\r\n\r\n\t\t\t\tnormalAttribute = geometry.attributes.normal.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( normalAttribute !== undefined ) {\r\n\r\n\t\t\t\tnormalAttribute.name = attributeName;\r\n\t\t\t\tmorphAttributes.normal.push( normalAttribute );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tmesh.updateMorphTargets();\r\n\r\n\t\tif ( meshDef.weights !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, il = meshDef.weights.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tmesh.morphTargetInfluences[ i ] = meshDef.weights[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction isPrimitiveEqual( a, b ) {\r\n\r\n\t\tif ( a.indices !== b.indices ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\tvar attribA = a.attributes || {};\r\n\t\tvar attribB = b.attributes || {};\r\n\t\tvar keysA = Object.keys( attribA );\r\n\t\tvar keysB = Object.keys( attribB );\r\n\r\n\t\tif ( keysA.length !== keysB.length ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = keysA.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar key = keysA[ i ];\r\n\r\n\t\t\tif ( attribA[ key ] !== attribB[ key ] ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tfunction getCachedGeometry( cache, newPrimitive ) {\r\n\r\n\t\tfor ( var i = 0, il = cache.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar cached = cache[ i ];\r\n\r\n\t\t\tif ( isPrimitiveEqual( cached.primitive, newPrimitive ) ) {\r\n\r\n\t\t\t\treturn cached.geometry;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\t/* GLTF PARSER */\r\n\r\n\tfunction GLTFParser( json, extensions, options ) {\r\n\r\n\t\tthis.json = json || {};\r\n\t\tthis.extensions = extensions || {};\r\n\t\tthis.options = options || {};\r\n\r\n\t\t// loader object cache\r\n\t\tthis.cache = new GLTFRegistry();\r\n\r\n\t\t// BufferGeometry caching\r\n\t\tthis.primitiveCache = [];\r\n\r\n\t\tthis.textureLoader = new THREE.TextureLoader( this.options.manager );\r\n\t\tthis.textureLoader.setCrossOrigin( this.options.crossOrigin );\r\n\r\n\t\tthis.fileLoader = new THREE.FileLoader( this.options.manager );\r\n\t\tthis.fileLoader.setResponseType( 'arraybuffer' );\r\n\r\n\t}\r\n\r\n\tGLTFParser.prototype.parse = function ( onLoad, onError ) {\r\n\r\n\t\tvar json = this.json;\r\n\t\tvar parser = this;\r\n\r\n\t\t// Clear the loader cache\r\n\t\tthis.cache.removeAll();\r\n\r\n\t\t// Mark the special nodes/meshes in json for efficient parse\r\n\t\tthis.markDefs();\r\n\r\n\t\t// Fire the callback on complete\r\n\t\tthis.getMultiDependencies( [\r\n\r\n\t\t\t'scene',\r\n\t\t\t'animation',\r\n\t\t\t'camera'\r\n\r\n\t\t] ).then( function ( dependencies ) {\r\n\r\n\t\t\tvar scenes = dependencies.scenes || [];\r\n\t\t\tvar scene = scenes[ json.scene || 0 ];\r\n\t\t\tvar animations = dependencies.animations || [];\r\n\t\t\tvar asset = json.asset;\r\n\t\t\tvar cameras = dependencies.cameras || [];\r\n\r\n\t\t\tonLoad( scene, scenes, cameras, animations, asset );\r\n\r\n\t\t} ).catch( onError );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Marks the special nodes/meshes in json for efficient parse.\r\n\t */\r\n\tGLTFParser.prototype.markDefs = function () {\r\n\r\n\t\tvar nodeDefs = this.json.nodes || [];\r\n\t\tvar skinDefs = this.json.skins || [];\r\n\t\tvar meshDefs = this.json.meshes || [];\r\n\r\n\t\tvar meshReferences = {};\r\n\t\tvar meshUses = {};\r\n\r\n\t\t// Nothing in the node definition indicates whether it is a Bone or an\r\n\t\t// Object3D. Use the skins' joint references to mark bones.\r\n\t\tfor ( var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex ++ ) {\r\n\r\n\t\t\tvar joints = skinDefs[ skinIndex ].joints;\r\n\r\n\t\t\tfor ( var i = 0, il = joints.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tnodeDefs[ joints[ i ] ].isBone = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Meshes can (and should) be reused by multiple nodes in a glTF asset. To\r\n\t\t// avoid having more than one THREE.Mesh with the same name, count\r\n\t\t// references and rename instances below.\r\n\t\t//\r\n\t\t// Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\r\n\t\tfor ( var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\r\n\r\n\t\t\tvar nodeDef = nodeDefs[ nodeIndex ];\r\n\r\n\t\t\tif ( nodeDef.mesh !== undefined ) {\r\n\r\n\t\t\t\tif ( meshReferences[ nodeDef.mesh ] === undefined ) {\r\n\r\n\t\t\t\t\tmeshReferences[ nodeDef.mesh ] = meshUses[ nodeDef.mesh ] = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmeshReferences[ nodeDef.mesh ] ++;\r\n\r\n\t\t\t\t// Nothing in the mesh definition indicates whether it is\r\n\t\t\t\t// a SkinnedMesh or Mesh. Use the node's mesh reference\r\n\t\t\t\t// to mark SkinnedMesh if node has skin.\r\n\t\t\t\tif ( nodeDef.skin !== undefined ) {\r\n\r\n\t\t\t\t\tmeshDefs[ nodeDef.mesh ].isSkinnedMesh = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.json.meshReferences = meshReferences;\r\n\t\tthis.json.meshUses = meshUses;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Requests the specified dependency asynchronously, with caching.\r\n\t * @param {string} type\r\n\t * @param {number} index\r\n\t * @return {Promise<Object>}\r\n\t */\r\n\tGLTFParser.prototype.getDependency = function ( type, index ) {\r\n\r\n\t\tvar cacheKey = type + ':' + index;\r\n\t\tvar dependency = this.cache.get( cacheKey );\r\n\r\n\t\tif ( ! dependency ) {\r\n\r\n\t\t\tvar fnName = 'load' + type.charAt( 0 ).toUpperCase() + type.slice( 1 );\r\n\t\t\tdependency = this[ fnName ]( index );\r\n\t\t\tthis.cache.add( cacheKey, dependency );\r\n\r\n\t\t}\r\n\r\n\t\treturn dependency;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Requests all dependencies of the specified type asynchronously, with caching.\r\n\t * @param {string} type\r\n\t * @return {Promise<Array<Object>>}\r\n\t */\r\n\tGLTFParser.prototype.getDependencies = function ( type ) {\r\n\r\n\t\tvar dependencies = this.cache.get( type );\r\n\r\n\t\tif ( ! dependencies ) {\r\n\r\n\t\t\tvar parser = this;\r\n\t\t\tvar defs = this.json[ type + ( type === 'mesh' ? 'es' : 's' ) ] || [];\r\n\r\n\t\t\tdependencies = Promise.all( defs.map( function ( def, index ) {\r\n\r\n\t\t\t\treturn parser.getDependency( type, index );\r\n\r\n\t\t\t} ) );\r\n\r\n\t\t\tthis.cache.add( type, dependencies );\r\n\r\n\t\t}\r\n\r\n\t\treturn dependencies;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Requests all multiple dependencies of the specified types asynchronously, with caching.\r\n\t * @param {Array<string>} types\r\n\t * @return {Promise<Object<Array<Object>>>}\r\n\t */\r\n\tGLTFParser.prototype.getMultiDependencies = function ( types ) {\r\n\r\n\t\tvar results = {};\r\n\t\tvar pendings = [];\r\n\r\n\t\tfor ( var i = 0, il = types.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar type = types[ i ];\r\n\t\t\tvar value = this.getDependencies( type );\r\n\r\n\t\t\tvalue = value.then( function ( key, value ) {\r\n\r\n\t\t\t\tresults[ key ] = value;\r\n\r\n\t\t\t}.bind( this, type + ( type === 'mesh' ? 'es' : 's' ) ) );\r\n\r\n\t\t\tpendings.push( value );\r\n\r\n\t\t}\r\n\r\n\t\treturn Promise.all( pendings ).then( function () {\r\n\r\n\t\t\treturn results;\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\r\n\t * @param {number} bufferIndex\r\n\t * @return {Promise<ArrayBuffer>}\r\n\t */\r\n\tGLTFParser.prototype.loadBuffer = function ( bufferIndex ) {\r\n\r\n\t\tvar bufferDef = this.json.buffers[ bufferIndex ];\r\n\t\tvar loader = this.fileLoader;\r\n\r\n\t\tif ( bufferDef.type && bufferDef.type !== 'arraybuffer' ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\t// If present, GLB container is required to be the first buffer.\r\n\t\tif ( bufferDef.uri === undefined && bufferIndex === 0 ) {\r\n\r\n\t\t\treturn Promise.resolve( this.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body );\r\n\r\n\t\t}\r\n\r\n\t\tvar options = this.options;\r\n\r\n\t\treturn new Promise( function ( resolve, reject ) {\r\n\r\n\t\t\tloader.load( resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () {\r\n\r\n\t\t\t\treject( new Error( 'THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".' ) );\r\n\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\r\n\t * @param {number} bufferViewIndex\r\n\t * @return {Promise<ArrayBuffer>}\r\n\t */\r\n\tGLTFParser.prototype.loadBufferView = function ( bufferViewIndex ) {\r\n\r\n\t\tvar bufferViewDef = this.json.bufferViews[ bufferViewIndex ];\r\n\r\n\t\treturn this.getDependency( 'buffer', bufferViewDef.buffer ).then( function ( buffer ) {\r\n\r\n\t\t\tvar byteLength = bufferViewDef.byteLength || 0;\r\n\t\t\tvar byteOffset = bufferViewDef.byteOffset || 0;\r\n\t\t\treturn buffer.slice( byteOffset, byteOffset + byteLength );\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\r\n\t * @param {number} accessorIndex\r\n\t * @return {Promise<THREE.BufferAttribute|THREE.InterleavedBufferAttribute>}\r\n\t */\r\n\tGLTFParser.prototype.loadAccessor = function ( accessorIndex ) {\r\n\r\n\t\tvar json = this.json;\r\n\r\n\t\tvar accessorDef = this.json.accessors[ accessorIndex ];\r\n\r\n\t\tvar pendingBufferViews = [];\r\n\r\n\t\tif ( accessorDef.bufferView !== undefined ) {\r\n\r\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.bufferView ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tpendingBufferViews.push( null );\r\n\r\n\t\t}\r\n\r\n\t\tif ( accessorDef.sparse !== undefined ) {\r\n\r\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.indices.bufferView ) );\r\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.values.bufferView ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn Promise.all( pendingBufferViews ).then( function ( bufferViews ) {\r\n\r\n\t\t\tvar bufferView = bufferViews[ 0 ];\r\n\r\n\t\t\tvar itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\r\n\t\t\tvar TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\r\n\r\n\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\r\n\t\t\tvar elementBytes = TypedArray.BYTES_PER_ELEMENT;\r\n\t\t\tvar itemBytes = elementBytes * itemSize;\r\n\t\t\tvar byteStride = json.bufferViews[ accessorDef.bufferView ].byteStride;\r\n\t\t\tvar normalized = accessorDef.normalized === true;\r\n\t\t\tvar array, bufferAttribute;\r\n\r\n\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\r\n\t\t\tif ( byteStride && byteStride !== itemBytes ) {\r\n\r\n\t\t\t\t// Use the full buffer if it's interleaved.\r\n\t\t\t\tarray = new TypedArray( bufferView );\r\n\r\n\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\r\n\t\t\t\tvar ib = new THREE.InterleavedBuffer( array, byteStride / elementBytes );\r\n\r\n\t\t\t\tbufferAttribute = new THREE.InterleavedBufferAttribute( ib, itemSize, accessorDef.byteOffset / elementBytes, normalized );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( bufferView === null ) {\r\n\r\n\t\t\t\t\tarray = new TypedArray( accessorDef.count * itemSize );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tarray = new TypedArray( bufferView, accessorDef.byteOffset, accessorDef.count * itemSize );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbufferAttribute = new THREE.BufferAttribute( array, itemSize, normalized );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\r\n\t\t\tif ( accessorDef.sparse !== undefined ) {\r\n\r\n\t\t\t\tvar itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\r\n\t\t\t\tvar TypedArrayIndices = WEBGL_COMPONENT_TYPES[ accessorDef.sparse.indices.componentType ];\r\n\r\n\t\t\t\tvar byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\r\n\t\t\t\tvar byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\r\n\r\n\t\t\t\tvar sparseIndices = new TypedArrayIndices( bufferViews[ 1 ], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices );\r\n\t\t\t\tvar sparseValues = new TypedArray( bufferViews[ 2 ], byteOffsetValues, accessorDef.sparse.count * itemSize );\r\n\r\n\t\t\t\tif ( bufferView !== null ) {\r\n\r\n\t\t\t\t\t// Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\r\n\t\t\t\t\tbufferAttribute.setArray( bufferAttribute.array.slice() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var i = 0, il = sparseIndices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvar index = sparseIndices[ i ];\r\n\r\n\t\t\t\t\tbufferAttribute.setX( index, sparseValues[ i * itemSize ] );\r\n\t\t\t\t\tif ( itemSize >= 2 ) bufferAttribute.setY( index, sparseValues[ i * itemSize + 1 ] );\r\n\t\t\t\t\tif ( itemSize >= 3 ) bufferAttribute.setZ( index, sparseValues[ i * itemSize + 2 ] );\r\n\t\t\t\t\tif ( itemSize >= 4 ) bufferAttribute.setW( index, sparseValues[ i * itemSize + 3 ] );\r\n\t\t\t\t\tif ( itemSize >= 5 ) throw new Error( 'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn bufferAttribute;\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\r\n\t * @param {number} textureIndex\r\n\t * @return {Promise<THREE.Texture>}\r\n\t */\r\n\tGLTFParser.prototype.loadTexture = function ( textureIndex ) {\r\n\r\n\t\tvar parser = this;\r\n\t\tvar json = this.json;\r\n\t\tvar options = this.options;\r\n\t\tvar textureLoader = this.textureLoader;\r\n\r\n\t\tvar URL = window.URL || window.webkitURL;\r\n\r\n\t\tvar textureDef = json.textures[ textureIndex ];\r\n\t\tvar source = json.images[ textureDef.source ];\r\n\t\tvar sourceURI = source.uri;\r\n\t\tvar isObjectURL = false;\r\n\r\n\t\tif ( source.bufferView !== undefined ) {\r\n\r\n\t\t\t// Load binary image data from bufferView, if provided.\r\n\r\n\t\t\tsourceURI = parser.getDependency( 'bufferView', source.bufferView ).then( function ( bufferView ) {\r\n\r\n\t\t\t\tisObjectURL = true;\r\n\t\t\t\tvar blob = new Blob( [ bufferView ], { type: source.mimeType } );\r\n\t\t\t\tsourceURI = URL.createObjectURL( blob );\r\n\t\t\t\treturn sourceURI;\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\treturn Promise.resolve( sourceURI ).then( function ( sourceURI ) {\r\n\r\n\t\t\t// Load Texture resource.\r\n\r\n\t\t\tvar loader = THREE.Loader.Handlers.get( sourceURI ) || textureLoader;\r\n\r\n\t\t\treturn new Promise( function ( resolve, reject ) {\r\n\r\n\t\t\t\tloader.load( resolveURL( sourceURI, options.path ), resolve, undefined, reject );\r\n\r\n\t\t\t} );\r\n\r\n\t\t} ).then( function ( texture ) {\r\n\r\n\t\t\t// Clean up resources and configure Texture.\r\n\r\n\t\t\tif ( isObjectURL === true ) {\r\n\r\n\t\t\t\tURL.revokeObjectURL( sourceURI );\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.flipY = false;\r\n\r\n\t\t\tif ( textureDef.name !== undefined ) texture.name = textureDef.name;\r\n\r\n\t\t\ttexture.format = textureDef.format !== undefined ? WEBGL_TEXTURE_FORMATS[ textureDef.format ] : THREE.RGBAFormat;\r\n\r\n\t\t\tif ( textureDef.internalFormat !== undefined && texture.format !== WEBGL_TEXTURE_FORMATS[ textureDef.internalFormat ] ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Three.js does not support texture internalFormat which is different from texture format. ' +\r\n\t\t\t\t\t\t\t\t\t\t\t'internalFormat will be forced to be the same value as format.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.type = textureDef.type !== undefined ? WEBGL_TEXTURE_DATATYPES[ textureDef.type ] : THREE.UnsignedByteType;\r\n\r\n\t\t\tvar samplers = json.samplers || {};\r\n\t\t\tvar sampler = samplers[ textureDef.sampler ] || {};\r\n\r\n\t\t\ttexture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || THREE.LinearFilter;\r\n\t\t\ttexture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || THREE.LinearMipMapLinearFilter;\r\n\t\t\ttexture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || THREE.RepeatWrapping;\r\n\t\t\ttexture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || THREE.RepeatWrapping;\r\n\r\n\t\t\treturn texture;\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Asynchronously assigns a texture to the given material parameters.\r\n\t * @param {Object} materialParams\r\n\t * @param {string} textureName\r\n\t * @param {number} textureIndex\r\n\t * @return {Promise}\r\n\t */\r\n\tGLTFParser.prototype.assignTexture = function ( materialParams, textureName, textureIndex ) {\r\n\r\n\t\treturn this.getDependency( 'texture', textureIndex ).then( function ( texture ) {\r\n\r\n\t\t\tmaterialParams[ textureName ] = texture;\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\r\n\t * @param {number} materialIndex\r\n\t * @return {Promise<THREE.Material>}\r\n\t */\r\n\tGLTFParser.prototype.loadMaterial = function ( materialIndex ) {\r\n\r\n\t\tvar parser = this;\r\n\t\tvar json = this.json;\r\n\t\tvar extensions = this.extensions;\r\n\t\tvar materialDef = this.json.materials[ materialIndex ];\r\n\r\n\t\tvar materialType;\r\n\t\tvar materialParams = {};\r\n\t\tvar materialExtensions = materialDef.extensions || {};\r\n\r\n\t\tvar pending = [];\r\n\r\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_COMMON ] ) {\r\n\r\n\t\t\tvar khcExtension = extensions[ EXTENSIONS.KHR_MATERIALS_COMMON ];\r\n\t\t\tmaterialType = khcExtension.getMaterialType( materialDef );\r\n\t\t\tpending.push( khcExtension.extendParams( materialParams, materialDef, parser ) );\r\n\r\n\t\t} else if ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ] ) {\r\n\r\n\t\t\tvar sgExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];\r\n\t\t\tmaterialType = sgExtension.getMaterialType( materialDef );\r\n\t\t\tpending.push( sgExtension.extendParams( materialParams, materialDef, parser ) );\r\n\r\n\t\t} else if ( materialDef.pbrMetallicRoughness !== undefined ) {\r\n\r\n\t\t\t// Specification:\r\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\r\n\r\n\t\t\tmaterialType = THREE.MeshStandardMaterial;\r\n\r\n\t\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness;\r\n\r\n\t\t\tmaterialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\r\n\t\t\tmaterialParams.opacity = 1.0;\r\n\r\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\r\n\r\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\r\n\r\n\t\t\t\tmaterialParams.color.fromArray( array );\r\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\r\n\r\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture.index ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\r\n\t\t\tmaterialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\r\n\r\n\t\t\tif ( metallicRoughness.metallicRoughnessTexture !== undefined ) {\r\n\r\n\t\t\t\tvar textureIndex = metallicRoughness.metallicRoughnessTexture.index;\r\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'metalnessMap', textureIndex ) );\r\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'roughnessMap', textureIndex ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmaterialType = THREE.MeshPhongMaterial;\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialDef.doubleSided === true ) {\r\n\r\n\t\t\tmaterialParams.side = THREE.DoubleSide;\r\n\r\n\t\t}\r\n\r\n\t\tvar alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\r\n\r\n\t\tif ( alphaMode === ALPHA_MODES.BLEND ) {\r\n\r\n\t\t\tmaterialParams.transparent = true;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmaterialParams.transparent = false;\r\n\r\n\t\t\tif ( alphaMode === ALPHA_MODES.MASK ) {\r\n\r\n\t\t\t\tmaterialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialDef.normalTexture !== undefined ) {\r\n\r\n\t\t\tpending.push( parser.assignTexture( materialParams, 'normalMap', materialDef.normalTexture.index ) );\r\n\r\n\t\t\tmaterialParams.normalScale = new THREE.Vector2( 1, 1 );\r\n\r\n\t\t\tif ( materialDef.normalTexture.scale !== undefined ) {\r\n\r\n\t\t\t\tmaterialParams.normalScale.set( materialDef.normalTexture.scale, materialDef.normalTexture.scale );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialDef.occlusionTexture !== undefined ) {\r\n\r\n\t\t\tpending.push( parser.assignTexture( materialParams, 'aoMap', materialDef.occlusionTexture.index ) );\r\n\r\n\t\t\tif ( materialDef.occlusionTexture.strength !== undefined ) {\r\n\r\n\t\t\t\tmaterialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialDef.emissiveFactor !== undefined ) {\r\n\r\n\t\t\tif ( materialType === THREE.MeshBasicMaterial ) {\r\n\r\n\t\t\t\tmaterialParams.color = new THREE.Color().fromArray( materialDef.emissiveFactor );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmaterialParams.emissive = new THREE.Color().fromArray( materialDef.emissiveFactor );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialDef.emissiveTexture !== undefined ) {\r\n\r\n\t\t\tif ( materialType === THREE.MeshBasicMaterial ) {\r\n\r\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', materialDef.emissiveTexture.index ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'emissiveMap', materialDef.emissiveTexture.index ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn Promise.all( pending ).then( function () {\r\n\r\n\t\t\tvar material;\r\n\r\n\t\t\tif ( materialType === THREE.ShaderMaterial ) {\r\n\r\n\t\t\t\tmaterial = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].createMaterial( materialParams );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmaterial = new materialType( materialParams );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( materialDef.name !== undefined ) material.name = materialDef.name;\r\n\r\n\t\t\t// Normal map textures use OpenGL conventions:\r\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#materialnormaltexture\r\n\t\t\tif ( material.normalScale ) {\r\n\r\n\t\t\t\tmaterial.normalScale.x = - material.normalScale.x;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// emissiveTexture and baseColorTexture use sRGB encoding.\r\n\t\t\tif ( material.map ) material.map.encoding = THREE.sRGBEncoding;\r\n\t\t\tif ( material.emissiveMap ) material.emissiveMap.encoding = THREE.sRGBEncoding;\r\n\r\n\t\t\tif ( materialDef.extras ) material.userData = materialDef.extras;\r\n\r\n\t\t\treturn material;\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\r\n\t * @param {Array<Object>} primitives\r\n\t * @return {Promise<Array<THREE.BufferGeometry>>}\r\n\t */\r\n\tGLTFParser.prototype.loadGeometries = function ( primitives ) {\r\n\r\n\t\tvar cache = this.primitiveCache;\r\n\r\n\t\treturn this.getDependencies( 'accessor' ).then( function ( accessors ) {\r\n\r\n\t\t\tvar geometries = [];\r\n\r\n\t\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar primitive = primitives[ i ];\r\n\r\n\t\t\t\t// See if we've already created this geometry\r\n\t\t\t\tvar cached = getCachedGeometry( cache, primitive );\r\n\r\n\t\t\t\tif ( cached ) {\r\n\r\n\t\t\t\t\t// Use the cached geometry if it exists\r\n\t\t\t\t\tgeometries.push( cached );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// Otherwise create a new geometry\r\n\t\t\t\t\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\t\t\t\t\tvar attributes = primitive.attributes;\r\n\r\n\t\t\t\t\tfor ( var attributeId in attributes ) {\r\n\r\n\t\t\t\t\t\tvar attributeEntry = attributes[ attributeId ];\r\n\r\n\t\t\t\t\t\tvar bufferAttribute = accessors[ attributeEntry ];\r\n\r\n\t\t\t\t\t\tswitch ( attributeId ) {\r\n\r\n\t\t\t\t\t\t\tcase 'POSITION':\r\n\r\n\t\t\t\t\t\t\t\tgeometry.addAttribute( 'position', bufferAttribute );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'NORMAL':\r\n\r\n\t\t\t\t\t\t\t\tgeometry.addAttribute( 'normal', bufferAttribute );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'TEXCOORD_0':\r\n\t\t\t\t\t\t\tcase 'TEXCOORD0':\r\n\t\t\t\t\t\t\tcase 'TEXCOORD':\r\n\r\n\t\t\t\t\t\t\t\tgeometry.addAttribute( 'uv', bufferAttribute );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'TEXCOORD_1':\r\n\r\n\t\t\t\t\t\t\t\tgeometry.addAttribute( 'uv2', bufferAttribute );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'COLOR_0':\r\n\t\t\t\t\t\t\tcase 'COLOR0':\r\n\t\t\t\t\t\t\tcase 'COLOR':\r\n\r\n\t\t\t\t\t\t\t\tgeometry.addAttribute( 'color', bufferAttribute );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'WEIGHTS_0':\r\n\t\t\t\t\t\t\tcase 'WEIGHT': // WEIGHT semantic deprecated.\r\n\r\n\t\t\t\t\t\t\t\tgeometry.addAttribute( 'skinWeight', bufferAttribute );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'JOINTS_0':\r\n\t\t\t\t\t\t\tcase 'JOINT': // JOINT semantic deprecated.\r\n\r\n\t\t\t\t\t\t\t\tgeometry.addAttribute( 'skinIndex', bufferAttribute );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( primitive.indices !== undefined ) {\r\n\r\n\t\t\t\t\t\tgeometry.setIndex( accessors[ primitive.indices ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Cache this geometry\r\n\t\t\t\t\tcache.push( {\r\n\r\n\t\t\t\t\t\tprimitive: primitive,\r\n\t\t\t\t\t\tgeometry: geometry\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t\tgeometries.push( geometry );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn geometries;\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\r\n\t * @param {number} meshIndex\r\n\t * @return {Promise<THREE.Group|THREE.Mesh|THREE.SkinnedMesh>}\r\n\t */\r\n\tGLTFParser.prototype.loadMesh = function ( meshIndex ) {\r\n\r\n\t\tvar scope = this;\r\n\t\tvar json = this.json;\r\n\t\tvar extensions = this.extensions;\r\n\r\n\t\tvar meshDef = this.json.meshes[ meshIndex ];\r\n\r\n\t\treturn this.getMultiDependencies( [\r\n\r\n\t\t\t'accessor',\r\n\t\t\t'material'\r\n\r\n\t\t] ).then( function ( dependencies ) {\r\n\r\n\t\t\tvar group = new THREE.Group();\r\n\r\n\t\t\tvar primitives = meshDef.primitives;\r\n\r\n\t\t\treturn scope.loadGeometries( primitives ).then( function ( geometries ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvar primitive = primitives[ i ];\r\n\t\t\t\t\tvar geometry = geometries[ i ];\r\n\r\n\t\t\t\t\tvar material = primitive.material === undefined\r\n\t\t\t\t\t\t? createDefaultMaterial()\r\n\t\t\t\t\t\t: dependencies.materials[ primitive.material ];\r\n\r\n\t\t\t\t\tif ( material.aoMap\r\n\t\t\t\t\t\t\t&& geometry.attributes.uv2 === undefined\r\n\t\t\t\t\t\t\t&& geometry.attributes.uv !== undefined ) {\r\n\r\n\t\t\t\t\t\tconsole.log( 'THREE.GLTFLoader: Duplicating UVs to support aoMap.' );\r\n\t\t\t\t\t\tgeometry.addAttribute( 'uv2', new THREE.BufferAttribute( geometry.attributes.uv.array, 2 ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// If the material will be modified later on, clone it now.\r\n\t\t\t\t\tvar useVertexColors = geometry.attributes.color !== undefined;\r\n\t\t\t\t\tvar useFlatShading = geometry.attributes.normal === undefined;\r\n\t\t\t\t\tvar useSkinning = meshDef.isSkinnedMesh === true;\r\n\t\t\t\t\tvar useMorphTargets = primitive.targets !== undefined;\r\n\r\n\t\t\t\t\tif ( useVertexColors || useFlatShading || useSkinning || useMorphTargets ) {\r\n\r\n\t\t\t\t\t\tif ( material.isGLTFSpecularGlossinessMaterial ) {\r\n\r\n\t\t\t\t\t\t\tvar specGlossExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];\r\n\t\t\t\t\t\t\tmaterial = specGlossExtension.cloneMaterial( material );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tmaterial = material.clone();\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( useVertexColors ) {\r\n\r\n\t\t\t\t\t\tmaterial.vertexColors = THREE.VertexColors;\r\n\t\t\t\t\t\tmaterial.needsUpdate = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( useFlatShading ) {\r\n\r\n\t\t\t\t\t\tmaterial.flatShading = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar mesh;\r\n\r\n\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\r\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\r\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\r\n\t\t\t\t\t\tprimitive.mode === undefined ) {\r\n\r\n\t\t\t\t\t\tif ( useSkinning ) {\r\n\r\n\t\t\t\t\t\t\tmesh = new THREE.SkinnedMesh( geometry, material );\r\n\t\t\t\t\t\t\tmaterial.skinning = true;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tmesh = new THREE.Mesh( geometry, material );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ) {\r\n\r\n\t\t\t\t\t\t\tmesh.drawMode = THREE.TriangleStripDrawMode;\r\n\r\n\t\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ) {\r\n\r\n\t\t\t\t\t\t\tmesh.drawMode = THREE.TriangleFanDrawMode;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\r\n\r\n\t\t\t\t\t\tmesh = new THREE.LineSegments( geometry, material );\r\n\r\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_STRIP ) {\r\n\r\n\t\t\t\t\t\tmesh = new THREE.Line( geometry, material );\r\n\r\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) {\r\n\r\n\t\t\t\t\t\tmesh = new THREE.LineLoop( geometry, material );\r\n\r\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.POINTS ) {\r\n\r\n\t\t\t\t\t\tmesh = new THREE.Points( geometry, material );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tmesh.name = meshDef.name || ( 'mesh_' + meshIndex );\r\n\r\n\t\t\t\t\tif ( useMorphTargets ) {\r\n\r\n\t\t\t\t\t\taddMorphTargets( mesh, meshDef, primitive, dependencies.accessors );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( meshDef.extras !== undefined ) mesh.userData = meshDef.extras;\r\n\t\t\t\t\tif ( primitive.extras !== undefined ) mesh.geometry.userData = primitive.extras;\r\n\r\n\t\t\t\t\t// for Specular-Glossiness.\r\n\t\t\t\t\tif ( material.isGLTFSpecularGlossinessMaterial === true ) {\r\n\r\n\t\t\t\t\t\tmesh.onBeforeRender = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].refreshUniforms;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( primitives.length > 1 ) {\r\n\r\n\t\t\t\t\t\tmesh.name += '_' + i;\r\n\r\n\t\t\t\t\t\tgroup.add( mesh );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\treturn mesh;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn group;\r\n\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\r\n\t * @param {number} cameraIndex\r\n\t * @return {Promise<THREE.Camera>}\r\n\t */\r\n\tGLTFParser.prototype.loadCamera = function ( cameraIndex ) {\r\n\r\n\t\tvar camera;\r\n\t\tvar cameraDef = this.json.cameras[ cameraIndex ];\r\n\t\tvar params = cameraDef[ cameraDef.type ];\r\n\r\n\t\tif ( ! params ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing camera parameters.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( cameraDef.type === 'perspective' ) {\r\n\r\n\t\t\tvar aspectRatio = params.aspectRatio || 1;\r\n\t\t\tvar xfov = params.yfov * aspectRatio;\r\n\r\n\t\t\tcamera = new THREE.PerspectiveCamera( THREE.Math.radToDeg( xfov ), aspectRatio, params.znear || 1, params.zfar || 2e6 );\r\n\r\n\t\t} else if ( cameraDef.type === 'orthographic' ) {\r\n\r\n\t\t\tcamera = new THREE.OrthographicCamera( params.xmag / - 2, params.xmag / 2, params.ymag / 2, params.ymag / - 2, params.znear, params.zfar );\r\n\r\n\t\t}\r\n\r\n\t\tif ( cameraDef.name !== undefined ) camera.name = cameraDef.name;\r\n\t\tif ( cameraDef.extras ) camera.userData = cameraDef.extras;\r\n\r\n\t\treturn Promise.resolve( camera );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\r\n\t * @param {number} skinIndex\r\n\t * @return {Promise<Object>}\r\n\t */\r\n\tGLTFParser.prototype.loadSkin = function ( skinIndex ) {\r\n\r\n\t\tvar skinDef = this.json.skins[ skinIndex ];\r\n\r\n\t\tvar skinEntry = { joints: skinDef.joints };\r\n\r\n\t\tif ( skinDef.inverseBindMatrices === undefined ) {\r\n\r\n\t\t\treturn Promise.resolve( skinEntry );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.getDependency( 'accessor', skinDef.inverseBindMatrices ).then( function ( accessor ) {\r\n\r\n\t\t\tskinEntry.inverseBindMatrices = accessor;\r\n\r\n\t\t\treturn skinEntry;\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\r\n\t * @param {number} animationIndex\r\n\t * @return {Promise<THREE.AnimationClip>}\r\n\t */\r\n\tGLTFParser.prototype.loadAnimation = function ( animationIndex ) {\r\n\r\n\t\tvar json = this.json;\r\n\r\n\t\tvar animationDef = this.json.animations[ animationIndex ];\r\n\r\n\t\treturn this.getMultiDependencies( [\r\n\r\n\t\t\t'accessor',\r\n\t\t\t'node'\r\n\r\n\t\t] ).then( function ( dependencies ) {\r\n\r\n\t\t\tvar tracks = [];\r\n\r\n\t\t\tfor ( var i = 0, il = animationDef.channels.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar channel = animationDef.channels[ i ];\r\n\t\t\t\tvar sampler = animationDef.samplers[ channel.sampler ];\r\n\r\n\t\t\t\tif ( sampler ) {\r\n\r\n\t\t\t\t\tvar target = channel.target;\r\n\t\t\t\t\tvar name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\r\n\t\t\t\t\tvar input = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.input ] : sampler.input;\r\n\t\t\t\t\tvar output = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.output ] : sampler.output;\r\n\r\n\t\t\t\t\tvar inputAccessor = dependencies.accessors[ input ];\r\n\t\t\t\t\tvar outputAccessor = dependencies.accessors[ output ];\r\n\r\n\t\t\t\t\tvar node = dependencies.nodes[ name ];\r\n\r\n\t\t\t\t\tif ( node ) {\r\n\r\n\t\t\t\t\t\tnode.updateMatrix();\r\n\t\t\t\t\t\tnode.matrixAutoUpdate = true;\r\n\r\n\t\t\t\t\t\tvar TypedKeyframeTrack;\r\n\r\n\t\t\t\t\t\tswitch ( PATH_PROPERTIES[ target.path ] ) {\r\n\r\n\t\t\t\t\t\t\tcase PATH_PROPERTIES.weights:\r\n\r\n\t\t\t\t\t\t\t\tTypedKeyframeTrack = THREE.NumberKeyframeTrack;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase PATH_PROPERTIES.rotation:\r\n\r\n\t\t\t\t\t\t\t\tTypedKeyframeTrack = THREE.QuaternionKeyframeTrack;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase PATH_PROPERTIES.position:\r\n\t\t\t\t\t\t\tcase PATH_PROPERTIES.scale:\r\n\t\t\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\t\t\tTypedKeyframeTrack = THREE.VectorKeyframeTrack;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar targetName = node.name ? node.name : node.uuid;\r\n\r\n\t\t\t\t\t\tif ( sampler.interpolation === 'CUBICSPLINE' ) {\r\n\r\n\t\t\t\t\t\t\tvar itemSize = outputAccessor.itemSize;\r\n\t\t\t\t\t\t\tvar TypedArray = outputAccessor.array.constructor;\r\n\t\t\t\t\t\t\tvar outputAccessorValues = new TypedArray( outputAccessor.count * itemSize / 3 );\r\n\r\n\t\t\t\t\t\t\t// Layout of keyframe output values for CUBICSPLINE animations:\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\t//   [ inTangent1, splineVertex1, outTangent1, inTangent2, splineVertex2, ... ]\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\t// THREE.KeyframeTrack infers tangents from the spline vertices when interpolating:\r\n\t\t\t\t\t\t\t// those values are extracted below. This still guarantees smooth curves, but does\r\n\t\t\t\t\t\t\t// throw away more precise information in the tangents. In the future, consider\r\n\t\t\t\t\t\t\t// re-sampling at a higher framerate using the tangents provided.\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\t// See: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\r\n\r\n\t\t\t\t\t\t\tfor ( var j = 0, jl = outputAccessor.count; j < jl; j += 3 ) {\r\n\r\n\t\t\t\t\t\t\t\toutputAccessorValues[ j * itemSize / 3 ] = outputAccessor.getX( j + 1 );\r\n\t\t\t\t\t\t\t\tif ( itemSize > 1 ) outputAccessorValues[ j * itemSize / 3 + 1 ] = outputAccessor.getY( j + 1 );\r\n\t\t\t\t\t\t\t\tif ( itemSize > 2 ) outputAccessorValues[ j * itemSize / 3 + 2 ] = outputAccessor.getZ( j + 1 );\r\n\t\t\t\t\t\t\t\tif ( itemSize > 3 ) outputAccessorValues[ j * itemSize / 3 + 3 ] = outputAccessor.getW( j + 1 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\toutputAccessor = new THREE.BufferAttribute( outputAccessorValues, itemSize / 3, outputAccessor.normalized );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : THREE.InterpolateLinear;\r\n\r\n\t\t\t\t\t\tvar targetNames = [];\r\n\r\n\t\t\t\t\t\tif ( PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.weights ) {\r\n\r\n\t\t\t\t\t\t\t// node should be THREE.Group here but\r\n\t\t\t\t\t\t\t// PATH_PROPERTIES.weights(morphTargetInfluences) should be\r\n\t\t\t\t\t\t\t// the property of a mesh object under node.\r\n\t\t\t\t\t\t\t// So finding targets here.\r\n\r\n\t\t\t\t\t\t\tnode.traverse( function ( object ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( object.isMesh === true && object.material.morphTargets === true ) {\r\n\r\n\t\t\t\t\t\t\t\t\ttargetNames.push( object.name ? object.name : object.uuid );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\ttargetNames.push( targetName );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// KeyframeTrack.optimize() will modify given 'times' and 'values'\r\n\t\t\t\t\t\t// buffers before creating a truncated copy to keep. Because buffers may\r\n\t\t\t\t\t\t// be reused by other tracks, make copies here.\r\n\t\t\t\t\t\tfor ( var j = 0, jl = targetNames.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\ttracks.push( new TypedKeyframeTrack(\r\n\t\t\t\t\t\t\t\ttargetNames[ j ] + '.' + PATH_PROPERTIES[ target.path ],\r\n\t\t\t\t\t\t\t\tTHREE.AnimationUtils.arraySlice( inputAccessor.array, 0 ),\r\n\t\t\t\t\t\t\t\tTHREE.AnimationUtils.arraySlice( outputAccessor.array, 0 ),\r\n\t\t\t\t\t\t\t\tinterpolation\r\n\t\t\t\t\t\t\t) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar name = animationDef.name !== undefined ? animationDef.name : 'animation_' + animationIndex;\r\n\r\n\t\t\treturn new THREE.AnimationClip( name, undefined, tracks );\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\r\n\t * @param {number} nodeIndex\r\n\t * @return {Promise<THREE.Object3D>}\r\n\t */\r\n\tGLTFParser.prototype.loadNode = function ( nodeIndex ) {\r\n\r\n\t\tvar json = this.json;\r\n\t\tvar extensions = this.extensions;\r\n\r\n\t\tvar meshReferences = this.json.meshReferences;\r\n\t\tvar meshUses = this.json.meshUses;\r\n\r\n\t\tvar nodeDef = this.json.nodes[ nodeIndex ];\r\n\r\n\t\treturn this.getMultiDependencies( [\r\n\r\n\t\t\t'mesh',\r\n\t\t\t'skin',\r\n\t\t\t'camera'\r\n\r\n\t\t] ).then( function ( dependencies ) {\r\n\r\n\t\t\tvar node;\r\n\r\n\t\t\tif ( nodeDef.isBone === true ) {\r\n\r\n\t\t\t\tnode = new THREE.Bone();\r\n\r\n\t\t\t} else if ( nodeDef.mesh !== undefined ) {\r\n\r\n\t\t\t\tvar mesh = dependencies.meshes[ nodeDef.mesh ];\r\n\r\n\t\t\t\tnode = mesh.clone();\r\n\r\n\t\t\t\t// for Specular-Glossiness\r\n\t\t\t\tif ( mesh.isGroup === true ) {\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = mesh.children.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar child = mesh.children[ i ];\r\n\r\n\t\t\t\t\t\tif ( child.material && child.material.isGLTFSpecularGlossinessMaterial === true ) {\r\n\r\n\t\t\t\t\t\t\tnode.children[ i ].onBeforeRender = child.onBeforeRender;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( mesh.material && mesh.material.isGLTFSpecularGlossinessMaterial === true ) {\r\n\r\n\t\t\t\t\t\tnode.onBeforeRender = mesh.onBeforeRender;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( meshReferences[ nodeDef.mesh ] > 1 ) {\r\n\r\n\t\t\t\t\tnode.name += '_instance_' + meshUses[ nodeDef.mesh ] ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( nodeDef.camera !== undefined ) {\r\n\r\n\t\t\t\tnode = dependencies.cameras[ nodeDef.camera ];\r\n\r\n\t\t\t} else if ( nodeDef.extensions\r\n\t\t\t\t\t && nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS ]\r\n\t\t\t\t\t && nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS ].light !== undefined ) {\r\n\r\n\t\t\t\tvar lights = extensions[ EXTENSIONS.KHR_LIGHTS ].lights;\r\n\t\t\t\tnode = lights[ nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS ].light ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnode = new THREE.Object3D();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( nodeDef.name !== undefined ) {\r\n\r\n\t\t\t\tnode.name = THREE.PropertyBinding.sanitizeNodeName( nodeDef.name );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( nodeDef.extras ) node.userData = nodeDef.extras;\r\n\r\n\t\t\tif ( nodeDef.matrix !== undefined ) {\r\n\r\n\t\t\t\tvar matrix = new THREE.Matrix4();\r\n\t\t\t\tmatrix.fromArray( nodeDef.matrix );\r\n\t\t\t\tnode.applyMatrix( matrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( nodeDef.translation !== undefined ) {\r\n\r\n\t\t\t\t\tnode.position.fromArray( nodeDef.translation );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( nodeDef.rotation !== undefined ) {\r\n\r\n\t\t\t\t\tnode.quaternion.fromArray( nodeDef.rotation );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( nodeDef.scale !== undefined ) {\r\n\r\n\t\t\t\t\tnode.scale.fromArray( nodeDef.scale );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn node;\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\r\n\t * @param {number} sceneIndex\r\n\t * @return {Promise<THREE.Scene>}\r\n\t */\r\n\tGLTFParser.prototype.loadScene = function () {\r\n\r\n\t\t// scene node hierachy builder\r\n\r\n\t\tfunction buildNodeHierachy( nodeId, parentObject, json, allNodes, skins ) {\r\n\r\n\t\t\tvar node = allNodes[ nodeId ];\r\n\t\t\tvar nodeDef = json.nodes[ nodeId ];\r\n\r\n\t\t\t// build skeleton here as well\r\n\r\n\t\t\tif ( nodeDef.skin !== undefined ) {\r\n\r\n\t\t\t\tvar meshes = node.isGroup === true ? node.children : [ node ];\r\n\r\n\t\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvar mesh = meshes[ i ];\r\n\t\t\t\t\tvar skinEntry = skins[ nodeDef.skin ];\r\n\r\n\t\t\t\t\tvar bones = [];\r\n\t\t\t\t\tvar boneInverses = [];\r\n\r\n\t\t\t\t\tfor ( var j = 0, jl = skinEntry.joints.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\tvar jointId = skinEntry.joints[ j ];\r\n\t\t\t\t\t\tvar jointNode = allNodes[ jointId ];\r\n\r\n\t\t\t\t\t\tif ( jointNode ) {\r\n\r\n\t\t\t\t\t\t\tbones.push( jointNode );\r\n\r\n\t\t\t\t\t\t\tvar mat = new THREE.Matrix4();\r\n\r\n\t\t\t\t\t\t\tif ( skinEntry.inverseBindMatrices !== undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tmat.fromArray( skinEntry.inverseBindMatrices.array, j * 16 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tboneInverses.push( mat );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Joint \"%s\" could not be found.', jointId );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tmesh.bind( new THREE.Skeleton( bones, boneInverses ), mesh.matrixWorld );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// build node hierachy\r\n\r\n\t\t\tparentObject.add( node );\r\n\r\n\t\t\tif ( nodeDef.children ) {\r\n\r\n\t\t\t\tvar children = nodeDef.children;\r\n\r\n\t\t\t\tfor ( var i = 0, il = children.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvar child = children[ i ];\r\n\t\t\t\t\tbuildNodeHierachy( child, node, json, allNodes, skins );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn function loadScene( sceneIndex ) {\r\n\r\n\t\t\tvar json = this.json;\r\n\t\t\tvar extensions = this.extensions;\r\n\t\t\tvar sceneDef = this.json.scenes[ sceneIndex ];\r\n\r\n\t\t\treturn this.getMultiDependencies( [\r\n\r\n\t\t\t\t'node',\r\n\t\t\t\t'skin'\r\n\r\n\t\t\t] ).then( function ( dependencies ) {\r\n\r\n\t\t\t\tvar scene = new THREE.Scene();\r\n\t\t\t\tif ( sceneDef.name !== undefined ) scene.name = sceneDef.name;\r\n\r\n\t\t\t\tif ( sceneDef.extras ) scene.userData = sceneDef.extras;\r\n\r\n\t\t\t\tvar nodeIds = sceneDef.nodes || [];\r\n\r\n\t\t\t\tfor ( var i = 0, il = nodeIds.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tbuildNodeHierachy( nodeIds[ i ], scene, json, dependencies.nodes, dependencies.skins );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Ambient lighting, if present, is always attached to the scene root.\r\n\t\t\t\tif ( sceneDef.extensions\r\n\t\t\t\t\t\t && sceneDef.extensions[ EXTENSIONS.KHR_LIGHTS ]\r\n\t\t\t\t\t\t && sceneDef.extensions[ EXTENSIONS.KHR_LIGHTS ].light !== undefined ) {\r\n\r\n\t\t\t\t\tvar lights = extensions[ EXTENSIONS.KHR_LIGHTS ].lights;\r\n\t\t\t\t\tscene.add( lights[ sceneDef.extensions[ EXTENSIONS.KHR_LIGHTS ].light ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn scene;\r\n\r\n\t\t\t} );\r\n\r\n\t\t};\r\n\r\n\t}();\r\n\r\n\treturn GLTFLoader;\r\n\r\n} )();\r\n\r\nexport default GLTFLoader\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/js/GLTFLoader.js\n// module id = xkEE\n// module chunks = 1"],"sourceRoot":""}