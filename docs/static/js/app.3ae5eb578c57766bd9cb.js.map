{"version":3,"sources":["webpack:///./static/js/Math.js","webpack:///./src/js/resources/Resource.js","webpack:///./src/js/ships/Ship.js","webpack:///./src/js/ships/Parachute.js","webpack:///./src/js/ships/Plane.js","webpack:///./src/js/ships/Spaceship.js","webpack:///./src/js/resources/Coin.js","webpack:///./src/js/particles/ParticleManager.js","webpack:///./src/app.js","webpack:///./src/js/main.js","webpack:///./static/js/GLTFLoader.js"],"names":["Math","clamp","value","min","max","map","x","a1","a2","b1","b2","Resource","modelUrl","scale","rotation","audioUrl","audioListener","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default","this","_this","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default","__proto__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default","call","model","sound","loadModel","loadAudio","t","GLTFLoader","load","gltf","scene","children","clone","set","lookAt","xhr","error","console","THREE","Audio","AudioLoader","buffer","setBuffer","setLoop","setVolume","require","Ship","velocity","audioPlay","classCallCheck_default","possibleConstructorReturn_default","get_prototype_of_default","center","setFromObject","getCenter","emit","play","Parachute","PI","Coin","ParticleManager","camera","_scene","_camera","prevCamX","prevCamY","prevCamZ","maxParticles","spread","particles","p","particle","random","vertices","push","pMaterial","color","size","loadTexture","blending","transparent","particleSystem","sortParticles","add","name","xDiff","position","yDiff","y","zDiff","z","i","geometry","length","verticesNeedUpdate","Main","currentLevel","mouseX","mouseY","prevMouseX","prevMouseY","diffX","diffY","audioList","url","maxX","maxY","velX","minAltitude","altitude","curAltitude","destPos","raycaster","far","direction","normalize","coins","coin","paused","levels","ship","skyColor","decay","Plane","Spaceship","window","innerWidth","innerHeight","_renderer","setPixelRatio","devicePixelRatio","setSize","document","body","appendChild","domElement","stats","Stats","showPanel","dom","light","dirLight","material","emissive","ground","on","addEventListener","onMouseMove","bind","onMouseDown","onMouseUp","onKeyDown","onKeyUp","onWindowResize","animate","event","pageX","pageY","nextLevel","e","keyCode","aspect","updateProjectionMatrix","begin","progress","c","removeCoin","oldModelPos","dir","subVectors","distanceToSquared","onResourceCollide","update","lerp","background","fog","prevLevel","render","end","requestAnimationFrame","startLevel","level","log","copy","isPlaying","stop","resource","increase","index","indexOf","splice","remove","a","sort","b","currentAudio","counter","onAudioEnd","source","onended","manager","undefined","DefaultLoadingManager","prototype","constructor","crossOrigin","onLoad","onProgress","onError","scope","path","LoaderUtils","extractUrlBase","loader","FileLoader","setResponseType","data","parse","setCrossOrigin","setPath","content","extensions","decodeText","Uint8Array","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","headerView","DataView","BINARY_EXTENSION_HEADER_LENGTH","header","magic","slice","version","getUint32","Error","chunkView","chunkIndex","byteLength","chunkLength","chunkType","BINARY_EXTENSION_CHUNK_TYPES","JSON","contentArray","BIN","byteOffset","json","asset","extensionsUsed","KHR_LIGHTS","lights","lightId","lightNode","Color","fromArray","type","DirectionalLight","PointLight","SpotLight","AmbientLight","constantAttenuation","intensity","linearAttenuation","distance","quadraticAttenuation","fallOffAngle","angle","fallOffExponent","warn","KHR_MATERIALS_COMMON","GLTFMaterialsCommonExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","specularGlossinessParams","getMaterialType","ShaderMaterial","extendParams","params","parser","pbrSpecularGlossiness","shader","ShaderLib","uniforms","UniformsUtils","specularMapParsFragmentChunk","join","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","fragmentShader","replace","roughness","metalness","roughnessMap","metalnessMap","specular","setHex","glossiness","specularMap","glossinessMap","vertexShader","defines","STANDARD","opacity","pending","Array","isArray","diffuseFactor","array","diffuseTexture","assignTexture","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossIndex","Promise","all","createMaterial","isGLTFSpecularGlossinessMaterial","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","envMap","envMapIntensity","refractionRatio","derivatives","cloneMaterial","target","il","refreshUniforms","renderer","group","uvScaleMap","offset","repeat","diffuse","multiplyScalar","isWebGLRenderTarget","texture","matrix","matrixAutoUpdate","setUvTransform","uvTransform","offsetRepeat","flipEnvMap","isCubeTexture","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","GLTFParser","scenes","cameras","animations","MeshPhongMaterial","MeshLambertMaterial","MeshBasicMaterial","materialParams","khrMaterial","keys","materialValues","forEach","v","specularTexture","shininessFactor","shininess","WEBGL_CONSTANTS","WEBGL_COMPONENT_TYPES","Number","Matrix3","Matrix4","Vector2","Vector3","Vector4","Texture","5120","Int8Array","5121","5122","Int16Array","5123","Uint16Array","5125","Uint32Array","5126","Float32Array","WEBGL_FILTERS","9728","NearestFilter","9729","LinearFilter","9984","NearestMipMapNearestFilter","9985","LinearMipMapNearestFilter","9986","NearestMipMapLinearFilter","9987","LinearMipMapLinearFilter","WEBGL_WRAPPINGS","33071","ClampToEdgeWrapping","33648","MirroredRepeatWrapping","10497","RepeatWrapping","WEBGL_TEXTURE_FORMATS","6406","AlphaFormat","6407","RGBFormat","6408","RGBAFormat","6409","LuminanceFormat","6410","LuminanceAlphaFormat","WEBGL_TEXTURE_DATATYPES","UnsignedByteType","32819","UnsignedShort4444Type","32820","UnsignedShort5551Type","33635","UnsignedShort565Type","WEBGL_TYPE_SIZES","BackSide","FrontSide","NeverDepth","LessDepth","EqualDepth","LessEqualDepth","GreaterEqualDepth","NotEqualDepth","AlwaysDepth","AddEquation","SubtractEquation","ReverseSubtractEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","InterpolateSmooth","LINEAR","InterpolateLinear","STEP","InterpolateDiscrete","ALPHA_MODES","resolveURL","test","addMorphTargets","mesh","meshDef","primitiveDef","accessors","targets","morphAttributes","normal","morphTargets","positionAttribute","normalAttribute","attributeName","POSITION","attributes","j","jl","count","setXYZ","getX","getY","getZ","NORMAL","morphNormals","updateMorphTargets","morphTargetInfluences","isPrimitiveEqual","indices","attribA","attribB","keysA","Object","keysB","key","getCachedGeometry","cache","newPrimitive","cached","primitive","options","objects","get","object","removeAll","primitiveCache","textureLoader","TextureLoader","fileLoader","markDefs","getMultiDependencies","then","dependencies","catch","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinIndex","skinLength","joints","isBone","nodeIndex","nodeLength","nodeDef","skin","isSkinnedMesh","getDependency","cacheKey","dependency","charAt","toUpperCase","getDependencies","defs","def","types","results","pendings","loadBuffer","bufferIndex","bufferDef","buffers","uri","resolve","reject","loadBufferView","bufferViewIndex","bufferViewDef","bufferViews","loadAccessor","accessorIndex","accessorDef","pendingBufferViews","bufferView","sparse","values","bufferAttribute","itemSize","TypedArray","componentType","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","normalized","ib","InterleavedBuffer","InterleavedBufferAttribute","BufferAttribute","itemSizeIndices","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setArray","setX","setY","setZ","setW","textureIndex","URL","webkitURL","textureDef","textures","images","sourceURI","isObjectURL","blob","Blob","mimeType","createObjectURL","Loader","Handlers","revokeObjectURL","flipY","format","internalFormat","sampler","samplers","magFilter","minFilter","wrapS","wrapT","textureName","loadMaterial","materialIndex","materialType","materialDef","materials","materialExtensions","khcExtension","sgExtension","pbrMetallicRoughness","MeshStandardMaterial","metallicRoughness","baseColorFactor","baseColorTexture","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","side","DoubleSide","alphaMode","alphaTest","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","encoding","sRGBEncoding","extras","userData","loadGeometries","primitives","geometries","BufferGeometry","attributeId","addAttribute","setIndex","loadMesh","meshIndex","Group","depthTest","uv2","uv","useVertexColors","useFlatShading","useSkinning","useMorphTargets","vertexColors","VertexColors","needsUpdate","flatShading","mode","SkinnedMesh","skinning","Mesh","drawMode","TriangleStripDrawMode","TriangleFanDrawMode","LineSegments","Line","LineLoop","Points","onBeforeRender","loadCamera","cameraIndex","cameraDef","aspectRatio","xfov","yfov","PerspectiveCamera","radToDeg","znear","zfar","OrthographicCamera","xmag","ymag","loadSkin","skinDef","skinEntry","inverseBindMatrices","accessor","loadAnimation","animationIndex","animationDef","tracks","channels","channel","node","id","input","parameters","output","inputAccessor","outputAccessor","TypedKeyframeTrack","updateMatrix","NumberKeyframeTrack","QuaternionKeyframeTrack","VectorKeyframeTrack","targetName","uuid","interpolation","outputAccessorValues","getW","targetNames","traverse","isMesh","AnimationUtils","arraySlice","AnimationClip","loadNode","Bone","isGroup","child","Object3D","PropertyBinding","sanitizeNodeName","applyMatrix","quaternion","loadScene","buildNodeHierachy","nodeId","parentObject","allNodes","bones","boneInverses","jointId","jointNode","mat","Skeleton","matrixWorld","sceneIndex","sceneDef","Scene","nodeIds","__webpack_exports__"],"mappings":"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","file":"static/js/app.3ae5eb578c57766bd9cb.js","sourcesContent":["Math.clamp = function ( value, min, max ) {\n\treturn Math.max( min, Math.min( max, value ) );\n}\n\nMath.map = function ( x, a1, a2, b1, b2 ) {\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/js/Math.js\n// module id = 0gDO\n// module chunks = 1","import GLTFLoader from '../../../static/js/GLTFLoader'\nconst EventEmitter = require('events')\n\nclass Resource extends EventEmitter {\n  constructor (modelUrl, scale, rotation, audioUrl, audioListener) {\n    super()\n\n    this.modelUrl = modelUrl\n    this.scale = scale\n    this.rotation = rotation\n    this.audioUrl = audioUrl\n    this.audioListener = audioListener\n    this.model = null\n    this.sound = null\n\n    this.loadModel()\n    this.loadAudio()\n  }\n\n  loadModel () {\n    var t = this\n    var loader = new GLTFLoader()\n    loader.load('static/models/' + t.modelUrl, function (gltf) {\n      t.model = gltf.scene.children[0].clone()\n      t.model.scale.set(t.scale, t.scale, t.scale)\n      t.model.lookAt(0, t.rotation, 0)\n    },\n    function (xhr) {\n      // console.log((xhr.loaded / xhr.total * 100) + '% loaded')\n    },\n    function (error) {\n      console.error('GLTF LOADER:', error)\n    })\n  }\n\n  loadAudio () {\n    var t = this\n    // eslint-disable-next-line\n    this.sound = new THREE.Audio(this.audioListener)\n    // eslint-disable-next-line\n    var audioLoader = new THREE.AudioLoader()\n    audioLoader.load(this.audioUrl, function (buffer) {\n      t.sound.setBuffer(buffer)\n      t.sound.setLoop(false)\n      t.sound.setVolume(0.5)\n    })\n  }\n}\n\nexport default Resource\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/resources/Resource.js","import * as THREE from 'three'\nimport GLTFLoader from '../../../static/js/GLTFLoader'\nconst EventEmitter = require('events')\n\nclass Ship extends EventEmitter {\n  constructor (modelUrl, scale, rotation, velocity, audioUrl, audioListener, audioPlay) {\n    super()\n\n    this.modelUrl = modelUrl\n    this.scale = scale\n    this.rotation = rotation\n    this.velocity = velocity\n    this.audioUrl = audioUrl\n    this.audioListener = audioListener\n    this.audioPlay = audioPlay\n    this.model = null\n    this.sound = null\n    this.center = new THREE.Vector3(0, 0, 0)\n\n    this.loadModel()\n    this.loadAudio()\n  }\n\n  loadModel () {\n    var t = this\n    // eslint-disable-next-line\n    var loader = new GLTFLoader()\n    loader.load('static/models/' + this.modelUrl, function (gltf) {\n      t.model = gltf.scene.children[0]\n      t.model.scale.set(t.scale, t.scale, t.scale)\n      t.center = new THREE.Box3().setFromObject(t.model).getCenter()\n      t.emit('onModelLoaded', t.model)\n    },\n    function (xhr) {\n      // console.log((xhr.loaded / xhr.total * 100) + '% loaded')\n    },\n    function (error) {\n      console.error('GLTF LOADER:', error)\n    })\n  }\n\n  loadAudio () {\n    var t = this\n    // eslint-disable-next-line\n    this.sound = new THREE.Audio(this.audioListener)\n    var audioLoader = new THREE.AudioLoader()\n    audioLoader.load(this.audioUrl, function (buffer) {\n      t.sound.setBuffer(buffer)\n      t.sound.setLoop(true)\n      t.sound.setVolume(0.3)\n      if (t.audioPlay) {\n        t.sound.play()\n      }\n    })\n  }\n}\n\nexport default Ship\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/ships/Ship.js","import Ship from './Ship'\n\nclass Parachute extends Ship {\n  constructor (audioListener) {\n    super('parachute.gltf', 2.5, 0, 1, 'static/audios/205966__kangaroovindaloo__medium-wind.ogg', audioListener, true)\n  }\n}\n\nexport default Parachute\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/ships/Parachute.js","import Ship from './Ship'\n\nclass Parachute extends Ship {\n  constructor (audioListener) {\n    super('plane.gltf', 6, Math.PI + Math.PI * 0.5, 2, 'static/audios/218352__photomonster__motorcycle-nsumax-1954-engine.ogg', audioListener, false)\n  }\n}\n\nexport default Parachute\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/ships/Plane.js","import Ship from './Ship'\n\nclass Parachute extends Ship {\n  constructor (audioListener) {\n    super('spaceship.gltf', 30, Math.PI, 3, 'static/audios/42233__noisecollector__spaceswamp.ogg', audioListener, false)\n  }\n}\n\nexport default Parachute\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/ships/Spaceship.js","import Resource from './Resource'\n\nclass Coin extends Resource {\n  constructor (audioListener) {\n    super('coin.gltf', 30, 1, 'static/audios/135936__bradwesson__collectcoin.ogg', audioListener)\n  }\n}\n\nexport default Coin\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/resources/Coin.js","import * as THREE from 'three'\r\nconst EventEmitter = require('events')\r\n\r\nclass ParticleManager extends EventEmitter {\r\n  constructor (scene, camera) {\r\n    super()\r\n\r\n    this._scene = scene\r\n    this._camera = camera\r\n    this.prevCamX = 0\r\n    this.prevCamY = 0\r\n    this.prevCamZ = 0\r\n\r\n    this.maxParticles = 1000\r\n\r\n    this.spread = 300\r\n\r\n    this.particles = new THREE.Geometry()\r\n\r\n    for (let p = 0; p < this.maxParticles; p++) {\r\n      let particle = new THREE.Vector3(\r\n        Math.random() * this.spread - this.spread * 0.5,\r\n        Math.random() * this.spread - this.spread * 0.5,\r\n        Math.random() * this.spread - this.spread * 0.5\r\n      )\r\n\r\n      this.particles.vertices.push(particle)\r\n    }\r\n\r\n    let pMaterial = new THREE.PointsMaterial({\r\n      color: 0xFFFFFF,\r\n      size: 2,\r\n      map: THREE.ImageUtils.loadTexture(\r\n        'static/textures/particle.png'\r\n      ),\r\n      blending: THREE.AdditiveBlending,\r\n      transparent: true\r\n    })\r\n    this.particleSystem = new THREE.Points(this.particles, pMaterial)\r\n    this.particleSystem.sortParticles = true\r\n\r\n    this._scene.add(this.particleSystem)\r\n  }\r\n\r\n  set (name) {\r\n    if (name === 'Star') {\r\n\r\n    }\r\n  }\r\n\r\n  update () {\r\n    let xDiff = this._camera.position.x - this.prevCamX\r\n    let yDiff = this._camera.position.y - this.prevCamY\r\n    let zDiff = this._camera.position.z - this.prevCamZ\r\n\r\n    this.prevCamX = this._camera.position.x\r\n    this.prevCamY = this._camera.position.y\r\n    this.prevCamZ = this._camera.position.z\r\n\r\n    this.particleSystem.position.set(this._camera.position.x, this._camera.position.y, this._camera.position.z)\r\n\r\n    for (let i = 0; i < this.particleSystem.geometry.vertices.length; i++) {\r\n      let particle = this.particleSystem.geometry.vertices[i]\r\n      particle.x -= xDiff\r\n      particle.y -= yDiff\r\n      particle.z -= zDiff\r\n\r\n      if (particle.z < -30) {\r\n        particle.x = Math.random() * this.spread - this.spread * 0.5\r\n        particle.y = Math.random() * this.spread - this.spread * 0.5\r\n        particle.z = 300 + Math.random() * 60\r\n      }\r\n    }\r\n\r\n    this.particleSystem.geometry.verticesNeedUpdate = true\r\n  }\r\n}\r\n\r\nexport default ParticleManager\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/particles/ParticleManager.js","import './css/style.css'\nimport Main from './js/main'\n// import Main from './js/mainWagner'\n// import Main from './js/mainVR'\n\n// eslint-disable-next-line\nnew Main()\n\n\n\n// WEBPACK FOOTER //\n// ./src/app.js","import * as THREE from 'three'\r\nimport * as Stats from 'stats.js'\r\nimport Parachute from './ships/Parachute'\r\nimport Plane from './ships/Plane'\r\nimport Spaceship from './ships/Spaceship'\r\nimport Coin from './resources/Coin'\r\nimport '../../static/js/GLTFLoader'\r\nimport '../../static/js/Math'\r\nimport ParticleManager from './particles/ParticleManager'\r\n// import shaderVert from 'shaders/custom.vert'\r\n// import shaderFrag from 'shaders/custom.frag'\r\n\r\nclass Main {\r\n  constructor () {\r\n    var t = this\r\n\r\n    this.currentLevel = 0\r\n\r\n    this.mouseX = 0\r\n    this.mouseY = 0\r\n    this.prevMouseX = this.mouseX\r\n    this.prevMouseY = this.mouseY\r\n    this.diffX = 0\r\n    this.diffY = 0\r\n\r\n    this.audioList = [\r\n      {\r\n        url: 'static/audios/Black-Eyed-Peas-I-Got-A-Feeling.ogg',\r\n        sound: null\r\n      },\r\n      {\r\n        url: 'static/audios/Eiffel65-Blue.ogg',\r\n        sound: null\r\n      },\r\n      {\r\n        url: 'static/audios/Enegetic-Game-Theme.ogg',\r\n        sound: null\r\n      },\r\n      {\r\n        url: 'static/audios/Imagine Dragons - Radioactive (Harder).ogg',\r\n        sound: null\r\n      }\r\n    ]\r\n    this.audioListener = new THREE.AudioListener()\r\n\r\n    this.maxX = 80\r\n    this.maxY = 50\r\n    this.velX = 1.5\r\n    this.minAltitude = 200 // meters\r\n    this.altitude = this.minAltitude\r\n    this.curAltitude = this.altitude\r\n    this.destPos = new THREE.Vector2()\r\n    this.raycaster = new THREE.Raycaster()\r\n    this.raycaster.far = 2\r\n    this.direction = new THREE.Vector3(0, 0, 10)\r\n    this.direction.normalize()\r\n    this.coins = []\r\n    this.coin = new Coin(this.audioListener)\r\n    this.paused = false\r\n\r\n    this.levels = [\r\n      {\r\n        ship: new Parachute(this.audioListener),\r\n        altitude: this.minAltitude,\r\n        skyColor: new THREE.Color(0xcaf8f1),\r\n        decay: 0.03,\r\n        coins: 10\r\n      },\r\n      {\r\n        ship: new Plane(this.audioListener),\r\n        altitude: 400, // 1000\r\n        skyColor: new THREE.Color(0xaaffff),\r\n        decay: 0.06,\r\n        coins: 7\r\n      },\r\n      {\r\n        ship: new Spaceship(this.audioListener),\r\n        altitude: 600, // 2000,\r\n        skyColor: new THREE.Color(0x000000),\r\n        decay: 0.12,\r\n        coins: 5\r\n      }\r\n    ]\r\n\r\n    this._camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 1, 1000)\r\n    this._camera.position.set(-100, 50, 0)\r\n    this._camera.lookAt(0, 0, 100)\r\n    this._camera.add(this.audioListener)\r\n\r\n    this._scene = new THREE.Scene()\r\n\r\n    this._renderer = new THREE.WebGLRenderer()\r\n    this._renderer.setPixelRatio(window.devicePixelRatio)\r\n    this._renderer.setSize(window.innerWidth, window.innerHeight)\r\n    document.body.appendChild(this._renderer.domElement)\r\n\r\n    this.stats = new Stats()\r\n    this.stats.showPanel(0)// fps,\r\n    // this.stats.showPanel(1)// ms\r\n    // this.stats.showPanel(2)// mb\r\n    document.body.appendChild(this.stats.dom)\r\n\r\n    // for inspection debug\r\n    // window.scene = this._scene\r\n    // window.THREE = THREE\r\n\r\n    // 'ovni.gltf' 100\r\n    // 'balloon.gltf' 10\r\n\r\n    var light = new THREE.HemisphereLight(0xbbbbff, 0x444422)\r\n    light.name = 'Hemisphere Light'\r\n    light.position.set(0, 1, 0)\r\n    t._scene.add(light)\r\n\r\n    var dirLight = new THREE.DirectionalLight(0xffffff)\r\n    dirLight.name = 'Point Light'\r\n    dirLight.position.set(-10, 6, -10)\r\n    t._scene.add(dirLight)\r\n\r\n    this.particles = new ParticleManager(this._scene, this._camera)\r\n\r\n    const geometry = new THREE.SphereGeometry(1, 320, 320)\r\n    const material = new THREE.MeshPhongMaterial({color: 0x008800, emissive: 0x00ff00})\r\n    /*\r\n    const material2 = new THREE.ShaderMaterial({\r\n      vertexShader: shaderVert,\r\n      fragmentShader: shaderFrag\r\n    })\r\n    */\r\n    this.ground = new THREE.Mesh(geometry, material)\r\n    this.ground.name = 'Ground'\r\n    this._scene.add(this.ground)\r\n    /*\r\n    var wireframe = new THREE.WireframeGeometry(geometry)\r\n    var line = new THREE.LineSegments(wireframe)\r\n    line.material.depthTest = false\r\n    line.material.opacity = 0.25\r\n    line.material.transparent = true\r\n    this.ground.add(line)\r\n    */\r\n    const earthRadius = 6000000 // 6000 km\r\n    this.ground.scale.set(earthRadius, earthRadius, earthRadius)\r\n    this.ground.position.y = -earthRadius\r\n    this.ground.rotation.z = Math.PI * 0.5\r\n\r\n    // add ship models to scene\r\n    for (var i = 0; i < this.levels.length; i++) {\r\n      this.levels[i].ship.on('onModelLoaded', function (model) {\r\n        t._scene.add(model)\r\n      })\r\n    }\r\n\r\n    this._renderer.domElement.addEventListener('mousemove', this.onMouseMove.bind(this), false)\r\n    this._renderer.domElement.addEventListener('mousedown', this.onMouseDown.bind(this), false)\r\n    this._renderer.domElement.addEventListener('mouseup', this.onMouseUp.bind(this), false)\r\n    this._renderer.domElement.addEventListener('touchstart', this.onMouseDown.bind(this), false)\r\n    this._renderer.domElement.addEventListener('touchend', this.onMouseUp.bind(this), false)\r\n\r\n    document.addEventListener('keydown', this.onKeyDown.bind(this), false)\r\n    document.addEventListener('keyup', this.onKeyUp.bind(this), false)\r\n\r\n    window.addEventListener('resize', this.onWindowResize.bind(this), false)\r\n\r\n    this.loadAudio()\r\n    this.animate()\r\n  }\r\n\r\n  onMouseMove (event) {\r\n    this.mouseX = event.pageX\r\n    this.mouseY = event.pageY\r\n  }\r\n\r\n  onMouseDown () {\r\n    this.nextLevel()\r\n    this.altitude = this.levels[this.currentLevel].altitude + 100\r\n  }\r\n\r\n  onMouseUp () {\r\n  }\r\n\r\n  onKeyDown (e) {\r\n    if (e.keyCode === 32) this.paused = !this.paused\r\n  }\r\n\r\n  onKeyUp (e) {\r\n  }\r\n\r\n  onWindowResize () {\r\n    this._camera.aspect = window.innerWidth / window.innerHeight\r\n    this._camera.updateProjectionMatrix()\r\n\r\n    this._renderer.setSize(window.innerWidth, window.innerHeight)\r\n  }\r\n\r\n  animate () {\r\n    this.stats.begin()\r\n\r\n    if (!this.paused) {\r\n      // mouse\r\n      this.diffX += (this.mouseX - this.prevMouseX) / 100\r\n      this.diffY += (this.mouseY - this.prevMouseY) / 100\r\n      this.diffX = Math.clamp(this.diffX, -1, 1)\r\n      this.diffY = Math.clamp(this.diffY, -1, 1)\r\n      this.prevMouseX = this.mouseX\r\n      this.prevMouseY = this.mouseY\r\n\r\n      // altitude\r\n      this.altitude -= this.levels[this.currentLevel].decay\r\n      if (this.altitude < this.minAltitude) this.altitude = this.minAltitude\r\n      this.curAltitude += (this.altitude - this.curAltitude) * 0.05\r\n\r\n      let nextLevel = this.currentLevel + 1\r\n      if (nextLevel >= this.levels.length) {\r\n        nextLevel = this.currentLevel\r\n      }\r\n      let progress = (this.altitude - this.levels[this.currentLevel].altitude) / (this.levels[nextLevel].altitude - this.levels[this.currentLevel].altitude)\r\n      progress = THREE.Math.clamp(progress, 0, 1)\r\n\r\n      // instantiate coins\r\n      if (this.coin.model) {\r\n        while (this.coins.length < this.levels[this.currentLevel].coins && Math.random() > 0.97) {\r\n          var coin = this.coin.model.clone()\r\n          coin.rotation.z = Math.random() * Math.PI\r\n          coin.position.set(\r\n            (Math.random() - 0.5) * 2 * this.maxX,\r\n            Math.random() * (this.maxY - 20) + 20 + this.curAltitude,\r\n            this._camera.position.z + 550 + Math.random() * 60)\r\n          this._scene.add(coin)\r\n          this.coins.push(coin)\r\n        }\r\n      }\r\n\r\n      // update or remove coins\r\n      for (var c = this.coins.length - 1; c >= 0; c--) {\r\n        if (this.coins[c].position.z < this._camera.position.z) {\r\n          this.removeCoin(this.coins[c])\r\n        } else {\r\n          this.coins[c].rotation.z += 0.02\r\n        }\r\n      }\r\n\r\n      var model = this.levels[this.currentLevel].ship.model\r\n      if (model) {\r\n        var oldModelPos = model.position.clone()\r\n\r\n        // position\r\n        this.destPos.x = Math.map(-this.diffX, -1, 1, -this.maxX, this.maxX)\r\n        this.destPos.y = Math.map(-this.diffY, -1, 1, 0, this.maxY) + this.curAltitude\r\n        model.position.x += (this.destPos.x - model.position.x) * 0.05\r\n        model.position.y += (this.destPos.y - model.position.y) * 0.05\r\n        model.position.z += this.levels[this.currentLevel].ship.velocity * this.velX\r\n\r\n        // camera\r\n        this._camera.position.z = model.position.z - 50\r\n        this._camera.position.y = this.curAltitude + 50\r\n\r\n        // ground\r\n        this.ground.position.z = model.position.z\r\n        // this.ground.rotation.x += 0.00005\r\n\r\n        // direction\r\n        var dir = new THREE.Vector3()\r\n        dir.subVectors(model.position, oldModelPos)\r\n        dir.add(model.position)\r\n        model.lookAt(dir)\r\n        model.rotation.y += this.levels[this.currentLevel].ship.rotation\r\n\r\n        // collider\r\n        var position = model.position.clone().add(this.levels[this.currentLevel].ship.center)\r\n        for (var i = this.coins.length - 1; i >= 0; i--) {\r\n          if (position.distanceToSquared(this.coins[i].position) < 200) {\r\n            this.onResourceCollide(this.coins[i])\r\n          }\r\n        }\r\n      // if model\r\n      }\r\n\r\n      this.particles.update()\r\n\r\n      // color\r\n      let skyColor = this.levels[this.currentLevel].skyColor.clone()\r\n      skyColor.lerp(this.levels[nextLevel].skyColor, progress)\r\n      this._scene.background = skyColor\r\n      this._scene.fog = new THREE.FogExp2(skyColor, 0.003)\r\n\r\n      // console.log(progress)\r\n      if (progress <= 0) {\r\n        this.prevLevel()\r\n      } else if (progress >= 1) {\r\n        this.nextLevel()\r\n      }\r\n\r\n    // if !this.paused\r\n    }\r\n\r\n    this._renderer.render(this._scene, this._camera)\r\n\r\n    this.stats.end()\r\n\r\n    requestAnimationFrame(this.animate.bind(this))\r\n  }\r\n\r\n  nextLevel () {\r\n    var nextLevel = this.currentLevel + 1\r\n    if (nextLevel >= this.levels.length) nextLevel = this.currentLevel\r\n\r\n    if (nextLevel === this.currentLevel) return\r\n\r\n    this.startLevel(nextLevel)\r\n  }\r\n\r\n  prevLevel () {\r\n    var prevLevel = this.currentLevel - 1\r\n    if (prevLevel <= 0) prevLevel = 0\r\n\r\n    if (prevLevel === this.currentLevel) return\r\n\r\n    this.startLevel(prevLevel)\r\n  }\r\n\r\n  startLevel (level) {\r\n    console.log('startLevel', level)\r\n    this.levels[level].ship.model.position.copy(this.levels[this.currentLevel].ship.model.position)\r\n    if (this.levels[this.currentLevel].ship.sound.isPlaying) {\r\n      this.levels[this.currentLevel].ship.sound.stop()\r\n    }\r\n    this.currentLevel = level\r\n    this.levels[this.currentLevel].ship.sound.play()\r\n  }\r\n\r\n  onResourceCollide (resource) {\r\n    var increase = 20\r\n\r\n    // bonus = fast coin catch\r\n    if (this.curAltitude < this.altitude) increase *= 2\r\n\r\n    this.altitude += increase * (this.currentLevel + 1)\r\n\r\n    this.coin.sound.play()\r\n\r\n    this.removeCoin(resource)\r\n  }\r\n\r\n  removeCoin (coin) {\r\n    var index = this.coins.indexOf(coin)\r\n    if (index > -1) {\r\n      this.coins.splice(index, 1)\r\n    }\r\n\r\n    this._scene.remove(coin)\r\n  }\r\n\r\n  loadAudio () {\r\n    this.audioList = this.audioList\r\n      .map((a) => ({sort: Math.random(), value: a}))\r\n      .sort((a, b) => a.sort - b.sort)\r\n      .map((a) => a.value)\r\n\r\n    this.currentAudio = 0\r\n    let counter = -1\r\n    let t = this\r\n\r\n    function onAudioEnd () {\r\n      console.log('audio ended')\r\n      t.currentAudio++\r\n      if (t.currentAudio >= t.audioList.length) t.currentAudio = 0\r\n\r\n      t.audioList[t.currentAudio].sound.play()\r\n      t.audioList[t.currentAudio].sound.source.onended = onAudioEnd\r\n    }\r\n\r\n    this.audioList.map((a) => {\r\n      a.index = counter++\r\n      a.sound = new THREE.Audio(this.audioListener)\r\n      var audioLoader = new THREE.AudioLoader()\r\n      audioLoader.load(a.url, function (buffer) {\r\n        a.sound.setBuffer(buffer)\r\n        a.sound.setLoop(false)\r\n        a.sound.setVolume(0.5)\r\n        if (a.index === 0) {\r\n          a.sound.play()\r\n          a.sound.source.onended = onAudioEnd\r\n        }\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport default Main\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/main.js","/**\r\n * @author Rich Tibbett / https://github.com/richtr\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author Tony Parisi / http://www.tonyparisi.com/\r\n * @author Takahiro / https://github.com/takahirox\r\n * @author Don McCurdy / https://www.donmccurdy.com\r\n */\r\n\r\nconst GLTFLoader = ( function () {\r\n\r\n\tfunction GLTFLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\t}\r\n\r\n\tGLTFLoader.prototype = {\r\n\r\n\t\tconstructor: GLTFLoader,\r\n\r\n\t\tcrossOrigin: 'Anonymous',\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar path = this.path !== undefined ? this.path : THREE.LoaderUtils.extractUrlBase( url );\r\n\r\n\t\t\tvar loader = new THREE.FileLoader( scope.manager );\r\n\r\n\t\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\t\tloader.load( url, function ( data ) {\r\n\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\tscope.parse( data, path, onLoad, onError );\r\n\r\n\t\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\t\tif ( onError !== undefined ) {\r\n\r\n\t\t\t\t\t\tonError( e );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tthrow e;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t},\r\n\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\t\tthis.crossOrigin = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetPath: function ( value ) {\r\n\r\n\t\t\tthis.path = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tparse: function ( data, path, onLoad, onError ) {\r\n\r\n\t\t\tvar content;\r\n\t\t\tvar extensions = {};\r\n\r\n\t\t\tif ( typeof data === 'string' ) {\r\n\r\n\t\t\t\tcontent = data;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar magic = THREE.LoaderUtils.decodeText( new Uint8Array( data, 0, 4 ) );\r\n\r\n\t\t\t\tif ( magic === BINARY_EXTENSION_HEADER_MAGIC ) {\r\n\r\n\t\t\t\t\ttry {\r\n\r\n\t\t\t\t\t\textensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\r\n\r\n\t\t\t\t\t} catch ( error ) {\r\n\r\n\t\t\t\t\t\tif ( onError ) onError( error );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcontent = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tcontent = THREE.LoaderUtils.decodeText( new Uint8Array( data ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar json = JSON.parse( content );\r\n\r\n\t\t\tif ( json.asset === undefined || json.asset.version[ 0 ] < 2 ) {\r\n\r\n\t\t\t\tif ( onError ) onError( new Error( 'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported. Use LegacyGLTFLoader instead.' ) );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.extensionsUsed ) {\r\n\r\n\t\t\t\tif ( json.extensionsUsed.indexOf( EXTENSIONS.KHR_LIGHTS ) >= 0 ) {\r\n\r\n\t\t\t\t\textensions[ EXTENSIONS.KHR_LIGHTS ] = new GLTFLightsExtension( json );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( json.extensionsUsed.indexOf( EXTENSIONS.KHR_MATERIALS_COMMON ) >= 0 ) {\r\n\r\n\t\t\t\t\textensions[ EXTENSIONS.KHR_MATERIALS_COMMON ] = new GLTFMaterialsCommonExtension( json );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( json.extensionsUsed.indexOf( EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ) >= 0 ) {\r\n\r\n\t\t\t\t\textensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ] = new GLTFMaterialsPbrSpecularGlossinessExtension();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// console.time( 'GLTFLoader' );\r\n\r\n\t\t\tvar parser = new GLTFParser( json, extensions, {\r\n\r\n\t\t\t\tpath: path || this.path || '',\r\n\t\t\t\tcrossOrigin: this.crossOrigin,\r\n\t\t\t\tmanager: this.manager\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tparser.parse( function ( scene, scenes, cameras, animations, asset ) {\r\n\r\n\t\t\t\t// console.timeEnd( 'GLTFLoader' );\r\n\r\n\t\t\t\tvar glTF = {\r\n\t\t\t\t\tscene: scene,\r\n\t\t\t\t\tscenes: scenes,\r\n\t\t\t\t\tcameras: cameras,\r\n\t\t\t\t\tanimations: animations,\r\n\t\t\t\t\tasset: asset\r\n\t\t\t\t};\r\n\r\n\t\t\t\tonLoad( glTF );\r\n\r\n\t\t\t}, onError );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t/* GLTFREGISTRY */\r\n\r\n\tfunction GLTFRegistry() {\r\n\r\n\t\tvar objects = {};\r\n\r\n\t\treturn\t{\r\n\r\n\t\t\tget: function ( key ) {\r\n\r\n\t\t\t\treturn objects[ key ];\r\n\r\n\t\t\t},\r\n\r\n\t\t\tadd: function ( key, object ) {\r\n\r\n\t\t\t\tobjects[ key ] = object;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tremove: function ( key ) {\r\n\r\n\t\t\t\tdelete objects[ key ];\r\n\r\n\t\t\t},\r\n\r\n\t\t\tremoveAll: function () {\r\n\r\n\t\t\t\tobjects = {};\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/*********************************/\r\n\t/********** EXTENSIONS ***********/\r\n\t/*********************************/\r\n\r\n\tvar EXTENSIONS = {\r\n\t\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\r\n\t\tKHR_LIGHTS: 'KHR_lights',\r\n\t\tKHR_MATERIALS_COMMON: 'KHR_materials_common',\r\n\t\tKHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness'\r\n\t};\r\n\r\n\t/**\r\n\t * Lights Extension\r\n\t *\r\n\t * Specification: PENDING\r\n\t */\r\n\tfunction GLTFLightsExtension( json ) {\r\n\r\n\t\tthis.name = EXTENSIONS.KHR_LIGHTS;\r\n\r\n\t\tthis.lights = {};\r\n\r\n\t\tvar extension = ( json.extensions && json.extensions[ EXTENSIONS.KHR_LIGHTS ] ) || {};\r\n\t\tvar lights = extension.lights || {};\r\n\r\n\t\tfor ( var lightId in lights ) {\r\n\r\n\t\t\tvar light = lights[ lightId ];\r\n\t\t\tvar lightNode;\r\n\r\n\t\t\tvar color = new THREE.Color().fromArray( light.color );\r\n\r\n\t\t\tswitch ( light.type ) {\r\n\r\n\t\t\t\tcase 'directional':\r\n\t\t\t\t\tlightNode = new THREE.DirectionalLight( color );\r\n\t\t\t\t\tlightNode.position.set( 0, 0, 1 );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'point':\r\n\t\t\t\t\tlightNode = new THREE.PointLight( color );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'spot':\r\n\t\t\t\t\tlightNode = new THREE.SpotLight( color );\r\n\t\t\t\t\tlightNode.position.set( 0, 0, 1 );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'ambient':\r\n\t\t\t\t\tlightNode = new THREE.AmbientLight( color );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( lightNode ) {\r\n\r\n\t\t\t\tif ( light.constantAttenuation !== undefined ) {\r\n\r\n\t\t\t\t\tlightNode.intensity = light.constantAttenuation;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( light.linearAttenuation !== undefined ) {\r\n\r\n\t\t\t\t\tlightNode.distance = 1 / light.linearAttenuation;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( light.quadraticAttenuation !== undefined ) {\r\n\r\n\t\t\t\t\tlightNode.decay = light.quadraticAttenuation;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( light.fallOffAngle !== undefined ) {\r\n\r\n\t\t\t\t\tlightNode.angle = light.fallOffAngle;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( light.fallOffExponent !== undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader:: light.fallOffExponent not currently supported.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlightNode.name = light.name || ( 'light_' + lightId );\r\n\t\t\t\tthis.lights[ lightId ] = lightNode;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Common Materials Extension\r\n\t *\r\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/Khronos/KHR_materials_common\r\n\t */\r\n\tfunction GLTFMaterialsCommonExtension( json ) {\r\n\r\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_COMMON;\r\n\r\n\t}\r\n\r\n\tGLTFMaterialsCommonExtension.prototype.getMaterialType = function ( material ) {\r\n\r\n\t\tvar khrMaterial = material.extensions[ this.name ];\r\n\r\n\t\tswitch ( khrMaterial.type ) {\r\n\r\n\t\t\tcase 'commonBlinn' :\r\n\t\t\tcase 'commonPhong' :\r\n\t\t\t\treturn THREE.MeshPhongMaterial;\r\n\r\n\t\t\tcase 'commonLambert' :\r\n\t\t\t\treturn THREE.MeshLambertMaterial;\r\n\r\n\t\t\tcase 'commonConstant' :\r\n\t\t\tdefault :\r\n\t\t\t\treturn THREE.MeshBasicMaterial;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tGLTFMaterialsCommonExtension.prototype.extendParams = function ( materialParams, material, parser ) {\r\n\r\n\t\tvar khrMaterial = material.extensions[ this.name ];\r\n\r\n\t\tvar pending = [];\r\n\r\n\t\tvar keys = [];\r\n\r\n\t\t// TODO: Currently ignored: 'ambientFactor', 'ambientTexture'\r\n\t\tswitch ( khrMaterial.type ) {\r\n\r\n\t\t\tcase 'commonBlinn' :\r\n\t\t\tcase 'commonPhong' :\r\n\t\t\t\tkeys.push( 'diffuseFactor', 'diffuseTexture', 'specularFactor', 'specularTexture', 'shininessFactor' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'commonLambert' :\r\n\t\t\t\tkeys.push( 'diffuseFactor', 'diffuseTexture' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'commonConstant' :\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tvar materialValues = {};\r\n\r\n\t\tkeys.forEach( function ( v ) {\r\n\r\n\t\t\tif ( khrMaterial[ v ] !== undefined ) materialValues[ v ] = khrMaterial[ v ];\r\n\r\n\t\t} );\r\n\r\n\t\tif ( materialValues.diffuseFactor !== undefined ) {\r\n\r\n\t\t\tmaterialParams.color = new THREE.Color().fromArray( materialValues.diffuseFactor );\r\n\t\t\tmaterialParams.opacity = materialValues.diffuseFactor[ 3 ];\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialValues.diffuseTexture !== undefined ) {\r\n\r\n\t\t\tpending.push( parser.assignTexture( materialParams, 'map', materialValues.diffuseTexture.index ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialValues.specularFactor !== undefined ) {\r\n\r\n\t\t\tmaterialParams.specular = new THREE.Color().fromArray( materialValues.specularFactor );\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialValues.specularTexture !== undefined ) {\r\n\r\n\t\t\tpending.push( parser.assignTexture( materialParams, 'specularMap', materialValues.specularTexture.index ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialValues.shininessFactor !== undefined ) {\r\n\r\n\t\t\tmaterialParams.shininess = materialValues.shininessFactor;\r\n\r\n\t\t}\r\n\r\n\t\treturn Promise.all( pending );\r\n\r\n\t};\r\n\r\n\t/* BINARY EXTENSION */\r\n\r\n\tvar BINARY_EXTENSION_BUFFER_NAME = 'binary_glTF';\r\n\tvar BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\r\n\tvar BINARY_EXTENSION_HEADER_LENGTH = 12;\r\n\tvar BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\r\n\r\n\tfunction GLTFBinaryExtension( data ) {\r\n\r\n\t\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\r\n\t\tthis.content = null;\r\n\t\tthis.body = null;\r\n\r\n\t\tvar headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\r\n\r\n\t\tthis.header = {\r\n\t\t\tmagic: THREE.LoaderUtils.decodeText( new Uint8Array( data.slice( 0, 4 ) ) ),\r\n\t\t\tversion: headerView.getUint32( 4, true ),\r\n\t\t\tlength: headerView.getUint32( 8, true )\r\n\t\t};\r\n\r\n\t\tif ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported glTF-Binary header.' );\r\n\r\n\t\t} else if ( this.header.version < 2.0 ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Legacy binary file detected. Use LegacyGLTFLoader instead.' );\r\n\r\n\t\t}\r\n\r\n\t\tvar chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH );\r\n\t\tvar chunkIndex = 0;\r\n\r\n\t\twhile ( chunkIndex < chunkView.byteLength ) {\r\n\r\n\t\t\tvar chunkLength = chunkView.getUint32( chunkIndex, true );\r\n\t\t\tchunkIndex += 4;\r\n\r\n\t\t\tvar chunkType = chunkView.getUint32( chunkIndex, true );\r\n\t\t\tchunkIndex += 4;\r\n\r\n\t\t\tif ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\r\n\r\n\t\t\t\tvar contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\r\n\t\t\t\tthis.content = THREE.LoaderUtils.decodeText( contentArray );\r\n\r\n\t\t\t} else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\r\n\r\n\t\t\t\tvar byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\r\n\t\t\t\tthis.body = data.slice( byteOffset, byteOffset + chunkLength );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Clients must ignore chunks with unknown types.\r\n\r\n\t\t\tchunkIndex += chunkLength;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.content === null ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.GLTFLoader: JSON content not found.' );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specular-Glossiness Extension\r\n\t *\r\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/Khronos/KHR_materials_pbrSpecularGlossiness\r\n\t */\r\n\tfunction GLTFMaterialsPbrSpecularGlossinessExtension() {\r\n\r\n\t\treturn {\r\n\r\n\t\t\tname: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\r\n\r\n\t\t\tspecularGlossinessParams: [\r\n\t\t\t\t'color',\r\n\t\t\t\t'map',\r\n\t\t\t\t'lightMap',\r\n\t\t\t\t'lightMapIntensity',\r\n\t\t\t\t'aoMap',\r\n\t\t\t\t'aoMapIntensity',\r\n\t\t\t\t'emissive',\r\n\t\t\t\t'emissiveIntensity',\r\n\t\t\t\t'emissiveMap',\r\n\t\t\t\t'bumpMap',\r\n\t\t\t\t'bumpScale',\r\n\t\t\t\t'normalMap',\r\n\t\t\t\t'displacementMap',\r\n\t\t\t\t'displacementScale',\r\n\t\t\t\t'displacementBias',\r\n\t\t\t\t'specularMap',\r\n\t\t\t\t'specular',\r\n\t\t\t\t'glossinessMap',\r\n\t\t\t\t'glossiness',\r\n\t\t\t\t'alphaMap',\r\n\t\t\t\t'envMap',\r\n\t\t\t\t'envMapIntensity',\r\n\t\t\t\t'refractionRatio',\r\n\t\t\t],\r\n\r\n\t\t\tgetMaterialType: function () {\r\n\r\n\t\t\t\treturn THREE.ShaderMaterial;\r\n\r\n\t\t\t},\r\n\r\n\t\t\textendParams: function ( params, material, parser ) {\r\n\r\n\t\t\t\tvar pbrSpecularGlossiness = material.extensions[ this.name ];\r\n\r\n\t\t\t\tvar shader = THREE.ShaderLib[ 'standard' ];\r\n\r\n\t\t\t\tvar uniforms = THREE.UniformsUtils.clone( shader.uniforms );\r\n\r\n\t\t\t\tvar specularMapParsFragmentChunk = [\r\n\t\t\t\t\t'#ifdef USE_SPECULARMAP',\r\n\t\t\t\t\t'\tuniform sampler2D specularMap;',\r\n\t\t\t\t\t'#endif'\r\n\t\t\t\t].join( '\\n' );\r\n\r\n\t\t\t\tvar glossinessMapParsFragmentChunk = [\r\n\t\t\t\t\t'#ifdef USE_GLOSSINESSMAP',\r\n\t\t\t\t\t'\tuniform sampler2D glossinessMap;',\r\n\t\t\t\t\t'#endif'\r\n\t\t\t\t].join( '\\n' );\r\n\r\n\t\t\t\tvar specularMapFragmentChunk = [\r\n\t\t\t\t\t'vec3 specularFactor = specular;',\r\n\t\t\t\t\t'#ifdef USE_SPECULARMAP',\r\n\t\t\t\t\t'\tvec4 texelSpecular = texture2D( specularMap, vUv );',\r\n\t\t\t\t\t'\ttexelSpecular = sRGBToLinear( texelSpecular );',\r\n\t\t\t\t\t'\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\r\n\t\t\t\t\t'\tspecularFactor *= texelSpecular.rgb;',\r\n\t\t\t\t\t'#endif'\r\n\t\t\t\t].join( '\\n' );\r\n\r\n\t\t\t\tvar glossinessMapFragmentChunk = [\r\n\t\t\t\t\t'float glossinessFactor = glossiness;',\r\n\t\t\t\t\t'#ifdef USE_GLOSSINESSMAP',\r\n\t\t\t\t\t'\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\r\n\t\t\t\t\t'\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\r\n\t\t\t\t\t'\tglossinessFactor *= texelGlossiness.a;',\r\n\t\t\t\t\t'#endif'\r\n\t\t\t\t].join( '\\n' );\r\n\r\n\t\t\t\tvar lightPhysicalFragmentChunk = [\r\n\t\t\t\t\t'PhysicalMaterial material;',\r\n\t\t\t\t\t'material.diffuseColor = diffuseColor.rgb;',\r\n\t\t\t\t\t'material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );',\r\n\t\t\t\t\t'material.specularColor = specularFactor.rgb;',\r\n\t\t\t\t].join( '\\n' );\r\n\r\n\t\t\t\tvar fragmentShader = shader.fragmentShader\r\n\t\t\t\t\t.replace( '#include <specularmap_fragment>', '' )\r\n\t\t\t\t\t.replace( 'uniform float roughness;', 'uniform vec3 specular;' )\r\n\t\t\t\t\t.replace( 'uniform float metalness;', 'uniform float glossiness;' )\r\n\t\t\t\t\t.replace( '#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk )\r\n\t\t\t\t\t.replace( '#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk )\r\n\t\t\t\t\t.replace( '#include <roughnessmap_fragment>', specularMapFragmentChunk )\r\n\t\t\t\t\t.replace( '#include <metalnessmap_fragment>', glossinessMapFragmentChunk )\r\n\t\t\t\t\t.replace( '#include <lights_physical_fragment>', lightPhysicalFragmentChunk );\r\n\r\n\t\t\t\tdelete uniforms.roughness;\r\n\t\t\t\tdelete uniforms.metalness;\r\n\t\t\t\tdelete uniforms.roughnessMap;\r\n\t\t\t\tdelete uniforms.metalnessMap;\r\n\r\n\t\t\t\tuniforms.specular = { value: new THREE.Color().setHex( 0x111111 ) };\r\n\t\t\t\tuniforms.glossiness = { value: 0.5 };\r\n\t\t\t\tuniforms.specularMap = { value: null };\r\n\t\t\t\tuniforms.glossinessMap = { value: null };\r\n\r\n\t\t\t\tparams.vertexShader = shader.vertexShader;\r\n\t\t\t\tparams.fragmentShader = fragmentShader;\r\n\t\t\t\tparams.uniforms = uniforms;\r\n\t\t\t\tparams.defines = { 'STANDARD': '' };\r\n\r\n\t\t\t\tparams.color = new THREE.Color( 1.0, 1.0, 1.0 );\r\n\t\t\t\tparams.opacity = 1.0;\r\n\r\n\t\t\t\tvar pending = [];\r\n\r\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.diffuseFactor ) ) {\r\n\r\n\t\t\t\t\tvar array = pbrSpecularGlossiness.diffuseFactor;\r\n\r\n\t\t\t\t\tparams.color.fromArray( array );\r\n\t\t\t\t\tparams.opacity = array[ 3 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( pbrSpecularGlossiness.diffuseTexture !== undefined ) {\r\n\r\n\t\t\t\t\tpending.push( parser.assignTexture( params, 'map', pbrSpecularGlossiness.diffuseTexture.index ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparams.emissive = new THREE.Color( 0.0, 0.0, 0.0 );\r\n\t\t\t\tparams.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\r\n\t\t\t\tparams.specular = new THREE.Color( 1.0, 1.0, 1.0 );\r\n\r\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.specularFactor ) ) {\r\n\r\n\t\t\t\t\tparams.specular.fromArray( pbrSpecularGlossiness.specularFactor );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( pbrSpecularGlossiness.specularGlossinessTexture !== undefined ) {\r\n\r\n\t\t\t\t\tvar specGlossIndex = pbrSpecularGlossiness.specularGlossinessTexture.index;\r\n\t\t\t\t\tpending.push( parser.assignTexture( params, 'glossinessMap', specGlossIndex ) );\r\n\t\t\t\t\tpending.push( parser.assignTexture( params, 'specularMap', specGlossIndex ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn Promise.all( pending );\r\n\r\n\t\t\t},\r\n\r\n\t\t\tcreateMaterial: function ( params ) {\r\n\r\n\t\t\t\t// setup material properties based on MeshStandardMaterial for Specular-Glossiness\r\n\r\n\t\t\t\tvar material = new THREE.ShaderMaterial( {\r\n\t\t\t\t\tdefines: params.defines,\r\n\t\t\t\t\tvertexShader: params.vertexShader,\r\n\t\t\t\t\tfragmentShader: params.fragmentShader,\r\n\t\t\t\t\tuniforms: params.uniforms,\r\n\t\t\t\t\tfog: true,\r\n\t\t\t\t\tlights: true,\r\n\t\t\t\t\topacity: params.opacity,\r\n\t\t\t\t\ttransparent: params.transparent\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tmaterial.isGLTFSpecularGlossinessMaterial = true;\r\n\r\n\t\t\t\tmaterial.color = params.color;\r\n\r\n\t\t\t\tmaterial.map = params.map === undefined ? null : params.map;\r\n\r\n\t\t\t\tmaterial.lightMap = null;\r\n\t\t\t\tmaterial.lightMapIntensity = 1.0;\r\n\r\n\t\t\t\tmaterial.aoMap = params.aoMap === undefined ? null : params.aoMap;\r\n\t\t\t\tmaterial.aoMapIntensity = 1.0;\r\n\r\n\t\t\t\tmaterial.emissive = params.emissive;\r\n\t\t\t\tmaterial.emissiveIntensity = 1.0;\r\n\t\t\t\tmaterial.emissiveMap = params.emissiveMap === undefined ? null : params.emissiveMap;\r\n\r\n\t\t\t\tmaterial.bumpMap = params.bumpMap === undefined ? null : params.bumpMap;\r\n\t\t\t\tmaterial.bumpScale = 1;\r\n\r\n\t\t\t\tmaterial.normalMap = params.normalMap === undefined ? null : params.normalMap;\r\n\t\t\t\tif ( params.normalScale ) material.normalScale = params.normalScale;\r\n\r\n\t\t\t\tmaterial.displacementMap = null;\r\n\t\t\t\tmaterial.displacementScale = 1;\r\n\t\t\t\tmaterial.displacementBias = 0;\r\n\r\n\t\t\t\tmaterial.specularMap = params.specularMap === undefined ? null : params.specularMap;\r\n\t\t\t\tmaterial.specular = params.specular;\r\n\r\n\t\t\t\tmaterial.glossinessMap = params.glossinessMap === undefined ? null : params.glossinessMap;\r\n\t\t\t\tmaterial.glossiness = params.glossiness;\r\n\r\n\t\t\t\tmaterial.alphaMap = null;\r\n\r\n\t\t\t\tmaterial.envMap = params.envMap === undefined ? null : params.envMap;\r\n\t\t\t\tmaterial.envMapIntensity = 1.0;\r\n\r\n\t\t\t\tmaterial.refractionRatio = 0.98;\r\n\r\n\t\t\t\tmaterial.extensions.derivatives = true;\r\n\r\n\t\t\t\treturn material;\r\n\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Clones a GLTFSpecularGlossinessMaterial instance. The ShaderMaterial.copy() method can\r\n\t\t\t * copy only properties it knows about or inherits, and misses many properties that would\r\n\t\t\t * normally be defined by MeshStandardMaterial.\r\n\t\t\t *\r\n\t\t\t * This method allows GLTFSpecularGlossinessMaterials to be cloned in the process of\r\n\t\t\t * loading a glTF model, but cloning later (e.g. by the user) would require these changes\r\n\t\t\t * AND also updating `.onBeforeRender` on the parent mesh.\r\n\t\t\t *\r\n\t\t\t * @param  {THREE.ShaderMaterial} source\r\n\t\t\t * @return {THREE.ShaderMaterial}\r\n\t\t\t */\r\n\t\t\tcloneMaterial: function ( source ) {\r\n\r\n\t\t\t\tvar target = source.clone();\r\n\r\n\t\t\t\ttarget.isGLTFSpecularGlossinessMaterial = true;\r\n\r\n\t\t\t\tvar params = this.specularGlossinessParams;\r\n\r\n\t\t\t\tfor ( var i = 0, il = params.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\ttarget[ params[ i ] ] = source[ params[ i ] ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn target;\r\n\r\n\t\t\t},\r\n\r\n\t\t\t// Here's based on refreshUniformsCommon() and refreshUniformsStandard() in WebGLRenderer.\r\n\t\t\trefreshUniforms: function ( renderer, scene, camera, geometry, material, group ) {\r\n\r\n\t\t\t\tvar uniforms = material.uniforms;\r\n\t\t\t\tvar defines = material.defines;\r\n\r\n\t\t\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t\tuniforms.diffuse.value.copy( material.color );\r\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\r\n\r\n\t\t\t\tuniforms.map.value = material.map;\r\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\r\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\r\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\r\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\r\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\r\n\t\t\t\t// uv repeat and offset setting priorities\r\n\t\t\t\t// 1. color map\r\n\t\t\t\t// 2. specular map\r\n\t\t\t\t// 3. normal map\r\n\t\t\t\t// 4. bump map\r\n\t\t\t\t// 5. alpha map\r\n\t\t\t\t// 6. emissive map\r\n\r\n\t\t\t\tvar uvScaleMap;\r\n\r\n\t\t\t\tif ( material.map ) {\r\n\r\n\t\t\t\t\tuvScaleMap = material.map;\r\n\r\n\t\t\t\t} else if ( material.specularMap ) {\r\n\r\n\t\t\t\t\tuvScaleMap = material.specularMap;\r\n\r\n\t\t\t\t} else if ( material.displacementMap ) {\r\n\r\n\t\t\t\t\tuvScaleMap = material.displacementMap;\r\n\r\n\t\t\t\t} else if ( material.normalMap ) {\r\n\r\n\t\t\t\t\tuvScaleMap = material.normalMap;\r\n\r\n\t\t\t\t} else if ( material.bumpMap ) {\r\n\r\n\t\t\t\t\tuvScaleMap = material.bumpMap;\r\n\r\n\t\t\t\t} else if ( material.glossinessMap ) {\r\n\r\n\t\t\t\t\tuvScaleMap = material.glossinessMap;\r\n\r\n\t\t\t\t} else if ( material.alphaMap ) {\r\n\r\n\t\t\t\t\tuvScaleMap = material.alphaMap;\r\n\r\n\t\t\t\t} else if ( material.emissiveMap ) {\r\n\r\n\t\t\t\t\tuvScaleMap = material.emissiveMap;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( uvScaleMap !== undefined ) {\r\n\r\n\t\t\t\t\t// backwards compatibility\r\n\t\t\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\r\n\r\n\t\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar offset;\r\n\t\t\t\t\tvar repeat;\r\n\r\n\t\t\t\t\tif ( uvScaleMap.matrix !== undefined ) {\r\n\r\n\t\t\t\t\t\t// > r88.\r\n\r\n\t\t\t\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\r\n\r\n\t\t\t\t\t\t\toffset = uvScaleMap.offset;\r\n\t\t\t\t\t\t\trepeat = uvScaleMap.repeat;\r\n\t\t\t\t\t\t\tvar rotation = uvScaleMap.rotation;\r\n\t\t\t\t\t\t\tvar center = uvScaleMap.center;\r\n\r\n\t\t\t\t\t\t\tuvScaleMap.matrix.setUvTransform( offset.x, offset.y, repeat.x, repeat.y, rotation, center.x, center.y );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// <= r87. Remove when reasonable.\r\n\r\n\t\t\t\t\t\toffset = uvScaleMap.offset;\r\n\t\t\t\t\t\trepeat = uvScaleMap.repeat;\r\n\r\n\t\t\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniforms.envMap.value = material.envMap;\r\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\r\n\t\t\t\tuniforms.flipEnvMap.value = ( material.envMap && material.envMap.isCubeTexture ) ? - 1 : 1;\r\n\r\n\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\r\n\t\t\t\tuniforms.specular.value.copy( material.specular );\r\n\t\t\t\tuniforms.glossiness.value = material.glossiness;\r\n\r\n\t\t\t\tuniforms.glossinessMap.value = material.glossinessMap;\r\n\r\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t\t\tif ( uniforms.glossinessMap.value !== null && defines.USE_GLOSSINESSMAP === undefined ) {\r\n\r\n\t\t\t\t\tdefines.USE_GLOSSINESSMAP = '';\r\n\t\t\t\t\t// set USE_ROUGHNESSMAP to enable vUv\r\n\t\t\t\t\tdefines.USE_ROUGHNESSMAP = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( uniforms.glossinessMap.value === null && defines.USE_GLOSSINESSMAP !== undefined ) {\r\n\r\n\t\t\t\t\tdelete defines.USE_GLOSSINESSMAP;\r\n\t\t\t\t\tdelete defines.USE_ROUGHNESSMAP;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/*********************************/\r\n\t/********** INTERNALS ************/\r\n\t/*********************************/\r\n\r\n\t/* CONSTANTS */\r\n\r\n\tvar WEBGL_CONSTANTS = {\r\n\t\tFLOAT: 5126,\r\n\t\t//FLOAT_MAT2: 35674,\r\n\t\tFLOAT_MAT3: 35675,\r\n\t\tFLOAT_MAT4: 35676,\r\n\t\tFLOAT_VEC2: 35664,\r\n\t\tFLOAT_VEC3: 35665,\r\n\t\tFLOAT_VEC4: 35666,\r\n\t\tLINEAR: 9729,\r\n\t\tREPEAT: 10497,\r\n\t\tSAMPLER_2D: 35678,\r\n\t\tPOINTS: 0,\r\n\t\tLINES: 1,\r\n\t\tLINE_LOOP: 2,\r\n\t\tLINE_STRIP: 3,\r\n\t\tTRIANGLES: 4,\r\n\t\tTRIANGLE_STRIP: 5,\r\n\t\tTRIANGLE_FAN: 6,\r\n\t\tUNSIGNED_BYTE: 5121,\r\n\t\tUNSIGNED_SHORT: 5123\r\n\t};\r\n\r\n\tvar WEBGL_TYPE = {\r\n\t\t5126: Number,\r\n\t\t//35674: THREE.Matrix2,\r\n\t\t35675: THREE.Matrix3,\r\n\t\t35676: THREE.Matrix4,\r\n\t\t35664: THREE.Vector2,\r\n\t\t35665: THREE.Vector3,\r\n\t\t35666: THREE.Vector4,\r\n\t\t35678: THREE.Texture\r\n\t};\r\n\r\n\tvar WEBGL_COMPONENT_TYPES = {\r\n\t\t5120: Int8Array,\r\n\t\t5121: Uint8Array,\r\n\t\t5122: Int16Array,\r\n\t\t5123: Uint16Array,\r\n\t\t5125: Uint32Array,\r\n\t\t5126: Float32Array\r\n\t};\r\n\r\n\tvar WEBGL_FILTERS = {\r\n\t\t9728: THREE.NearestFilter,\r\n\t\t9729: THREE.LinearFilter,\r\n\t\t9984: THREE.NearestMipMapNearestFilter,\r\n\t\t9985: THREE.LinearMipMapNearestFilter,\r\n\t\t9986: THREE.NearestMipMapLinearFilter,\r\n\t\t9987: THREE.LinearMipMapLinearFilter\r\n\t};\r\n\r\n\tvar WEBGL_WRAPPINGS = {\r\n\t\t33071: THREE.ClampToEdgeWrapping,\r\n\t\t33648: THREE.MirroredRepeatWrapping,\r\n\t\t10497: THREE.RepeatWrapping\r\n\t};\r\n\r\n\tvar WEBGL_TEXTURE_FORMATS = {\r\n\t\t6406: THREE.AlphaFormat,\r\n\t\t6407: THREE.RGBFormat,\r\n\t\t6408: THREE.RGBAFormat,\r\n\t\t6409: THREE.LuminanceFormat,\r\n\t\t6410: THREE.LuminanceAlphaFormat\r\n\t};\r\n\r\n\tvar WEBGL_TEXTURE_DATATYPES = {\r\n\t\t5121: THREE.UnsignedByteType,\r\n\t\t32819: THREE.UnsignedShort4444Type,\r\n\t\t32820: THREE.UnsignedShort5551Type,\r\n\t\t33635: THREE.UnsignedShort565Type\r\n\t};\r\n\r\n\tvar WEBGL_SIDES = {\r\n\t\t1028: THREE.BackSide, // Culling front\r\n\t\t1029: THREE.FrontSide // Culling back\r\n\t\t//1032: THREE.NoSide   // Culling front and back, what to do?\r\n\t};\r\n\r\n\tvar WEBGL_DEPTH_FUNCS = {\r\n\t\t512: THREE.NeverDepth,\r\n\t\t513: THREE.LessDepth,\r\n\t\t514: THREE.EqualDepth,\r\n\t\t515: THREE.LessEqualDepth,\r\n\t\t516: THREE.GreaterEqualDepth,\r\n\t\t517: THREE.NotEqualDepth,\r\n\t\t518: THREE.GreaterEqualDepth,\r\n\t\t519: THREE.AlwaysDepth\r\n\t};\r\n\r\n\tvar WEBGL_BLEND_EQUATIONS = {\r\n\t\t32774: THREE.AddEquation,\r\n\t\t32778: THREE.SubtractEquation,\r\n\t\t32779: THREE.ReverseSubtractEquation\r\n\t};\r\n\r\n\tvar WEBGL_BLEND_FUNCS = {\r\n\t\t0: THREE.ZeroFactor,\r\n\t\t1: THREE.OneFactor,\r\n\t\t768: THREE.SrcColorFactor,\r\n\t\t769: THREE.OneMinusSrcColorFactor,\r\n\t\t770: THREE.SrcAlphaFactor,\r\n\t\t771: THREE.OneMinusSrcAlphaFactor,\r\n\t\t772: THREE.DstAlphaFactor,\r\n\t\t773: THREE.OneMinusDstAlphaFactor,\r\n\t\t774: THREE.DstColorFactor,\r\n\t\t775: THREE.OneMinusDstColorFactor,\r\n\t\t776: THREE.SrcAlphaSaturateFactor\r\n\t\t// The followings are not supported by Three.js yet\r\n\t\t//32769: CONSTANT_COLOR,\r\n\t\t//32770: ONE_MINUS_CONSTANT_COLOR,\r\n\t\t//32771: CONSTANT_ALPHA,\r\n\t\t//32772: ONE_MINUS_CONSTANT_COLOR\r\n\t};\r\n\r\n\tvar WEBGL_TYPE_SIZES = {\r\n\t\t'SCALAR': 1,\r\n\t\t'VEC2': 2,\r\n\t\t'VEC3': 3,\r\n\t\t'VEC4': 4,\r\n\t\t'MAT2': 4,\r\n\t\t'MAT3': 9,\r\n\t\t'MAT4': 16\r\n\t};\r\n\r\n\tvar PATH_PROPERTIES = {\r\n\t\tscale: 'scale',\r\n\t\ttranslation: 'position',\r\n\t\trotation: 'quaternion',\r\n\t\tweights: 'morphTargetInfluences'\r\n\t};\r\n\r\n\tvar INTERPOLATION = {\r\n\t\tCUBICSPLINE: THREE.InterpolateSmooth,\r\n\t\tLINEAR: THREE.InterpolateLinear,\r\n\t\tSTEP: THREE.InterpolateDiscrete\r\n\t};\r\n\r\n\tvar STATES_ENABLES = {\r\n\t\t2884: 'CULL_FACE',\r\n\t\t2929: 'DEPTH_TEST',\r\n\t\t3042: 'BLEND',\r\n\t\t3089: 'SCISSOR_TEST',\r\n\t\t32823: 'POLYGON_OFFSET_FILL',\r\n\t\t32926: 'SAMPLE_ALPHA_TO_COVERAGE'\r\n\t};\r\n\r\n\tvar ALPHA_MODES = {\r\n\t\tOPAQUE: 'OPAQUE',\r\n\t\tMASK: 'MASK',\r\n\t\tBLEND: 'BLEND'\r\n\t};\r\n\r\n\t/* UTILITY FUNCTIONS */\r\n\r\n\tfunction resolveURL( url, path ) {\r\n\r\n\t\t// Invalid URL\r\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\r\n\r\n\t\t// Absolute URL http://,https://,//\r\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\r\n\r\n\t\t// Data URI\r\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\r\n\r\n\t\t// Blob URL\r\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\r\n\r\n\t\t// Relative URL\r\n\t\treturn path + url;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\r\n\t */\r\n\tfunction createDefaultMaterial() {\r\n\r\n\t\treturn new THREE.MeshStandardMaterial( {\r\n\t\t\tcolor: 0xFFFFFF,\r\n\t\t\temissive: 0x000000,\r\n\t\t\tmetalness: 1,\r\n\t\t\troughness: 1,\r\n\t\t\ttransparent: false,\r\n\t\t\tdepthTest: true,\r\n\t\t\tside: THREE.FrontSide\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\r\n\t *\r\n\t * TODO: Implement support for morph targets on TANGENT attribute.\r\n\t *\r\n\t * @param {THREE.Mesh} mesh\r\n\t * @param {GLTF.Mesh} meshDef\r\n\t * @param {GLTF.Primitive} primitiveDef\r\n\t * @param {Array<THREE.BufferAttribute>} accessors\r\n\t */\r\n\tfunction addMorphTargets( mesh, meshDef, primitiveDef, accessors ) {\r\n\r\n\t\tvar geometry = mesh.geometry;\r\n\t\tvar material = mesh.material;\r\n\r\n\t\tvar targets = primitiveDef.targets;\r\n\t\tvar morphAttributes = geometry.morphAttributes;\r\n\r\n\t\tmorphAttributes.position = [];\r\n\t\tmorphAttributes.normal = [];\r\n\r\n\t\tmaterial.morphTargets = true;\r\n\r\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar target = targets[ i ];\r\n\t\t\tvar attributeName = 'morphTarget' + i;\r\n\r\n\t\t\tvar positionAttribute, normalAttribute;\r\n\r\n\t\t\tif ( target.POSITION !== undefined ) {\r\n\r\n\t\t\t\t// Three.js morph formula is\r\n\t\t\t\t//   position\r\n\t\t\t\t//     + weight0 * ( morphTarget0 - position )\r\n\t\t\t\t//     + weight1 * ( morphTarget1 - position )\r\n\t\t\t\t//     ...\r\n\t\t\t\t// while the glTF one is\r\n\t\t\t\t//   position\r\n\t\t\t\t//     + weight0 * morphTarget0\r\n\t\t\t\t//     + weight1 * morphTarget1\r\n\t\t\t\t//     ...\r\n\t\t\t\t// then adding position to morphTarget.\r\n\t\t\t\t// So morphTarget value will depend on mesh's position, then cloning attribute\r\n\t\t\t\t// for the case if attribute is shared among two or more meshes.\r\n\r\n\t\t\t\tpositionAttribute = accessors[ target.POSITION ].clone();\r\n\t\t\t\tvar position = geometry.attributes.position;\r\n\r\n\t\t\t\tfor ( var j = 0, jl = positionAttribute.count; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tpositionAttribute.setXYZ(\r\n\t\t\t\t\t\tj,\r\n\t\t\t\t\t\tpositionAttribute.getX( j ) + position.getX( j ),\r\n\t\t\t\t\t\tpositionAttribute.getY( j ) + position.getY( j ),\r\n\t\t\t\t\t\tpositionAttribute.getZ( j ) + position.getZ( j )\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( geometry.attributes.position ) {\r\n\r\n\t\t\t\t// Copying the original position not to affect the final position.\r\n\t\t\t\t// See the formula above.\r\n\t\t\t\tpositionAttribute = geometry.attributes.position.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( positionAttribute !== undefined ) {\r\n\r\n\t\t\t\tpositionAttribute.name = attributeName;\r\n\t\t\t\tmorphAttributes.position.push( positionAttribute );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( target.NORMAL !== undefined ) {\r\n\r\n\t\t\t\tmaterial.morphNormals = true;\r\n\r\n\t\t\t\t// see target.POSITION's comment\r\n\r\n\t\t\t\tnormalAttribute = accessors[ target.NORMAL ].clone();\r\n\t\t\t\tvar normal = geometry.attributes.normal;\r\n\r\n\t\t\t\tfor ( var j = 0, jl = normalAttribute.count; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tnormalAttribute.setXYZ(\r\n\t\t\t\t\t\tj,\r\n\t\t\t\t\t\tnormalAttribute.getX( j ) + normal.getX( j ),\r\n\t\t\t\t\t\tnormalAttribute.getY( j ) + normal.getY( j ),\r\n\t\t\t\t\t\tnormalAttribute.getZ( j ) + normal.getZ( j )\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( geometry.attributes.normal !== undefined ) {\r\n\r\n\t\t\t\tnormalAttribute = geometry.attributes.normal.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( normalAttribute !== undefined ) {\r\n\r\n\t\t\t\tnormalAttribute.name = attributeName;\r\n\t\t\t\tmorphAttributes.normal.push( normalAttribute );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tmesh.updateMorphTargets();\r\n\r\n\t\tif ( meshDef.weights !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, il = meshDef.weights.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tmesh.morphTargetInfluences[ i ] = meshDef.weights[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction isPrimitiveEqual( a, b ) {\r\n\r\n\t\tif ( a.indices !== b.indices ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\tvar attribA = a.attributes || {};\r\n\t\tvar attribB = b.attributes || {};\r\n\t\tvar keysA = Object.keys( attribA );\r\n\t\tvar keysB = Object.keys( attribB );\r\n\r\n\t\tif ( keysA.length !== keysB.length ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = keysA.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar key = keysA[ i ];\r\n\r\n\t\t\tif ( attribA[ key ] !== attribB[ key ] ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tfunction getCachedGeometry( cache, newPrimitive ) {\r\n\r\n\t\tfor ( var i = 0, il = cache.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar cached = cache[ i ];\r\n\r\n\t\t\tif ( isPrimitiveEqual( cached.primitive, newPrimitive ) ) {\r\n\r\n\t\t\t\treturn cached.geometry;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\t/* GLTF PARSER */\r\n\r\n\tfunction GLTFParser( json, extensions, options ) {\r\n\r\n\t\tthis.json = json || {};\r\n\t\tthis.extensions = extensions || {};\r\n\t\tthis.options = options || {};\r\n\r\n\t\t// loader object cache\r\n\t\tthis.cache = new GLTFRegistry();\r\n\r\n\t\t// BufferGeometry caching\r\n\t\tthis.primitiveCache = [];\r\n\r\n\t\tthis.textureLoader = new THREE.TextureLoader( this.options.manager );\r\n\t\tthis.textureLoader.setCrossOrigin( this.options.crossOrigin );\r\n\r\n\t\tthis.fileLoader = new THREE.FileLoader( this.options.manager );\r\n\t\tthis.fileLoader.setResponseType( 'arraybuffer' );\r\n\r\n\t}\r\n\r\n\tGLTFParser.prototype.parse = function ( onLoad, onError ) {\r\n\r\n\t\tvar json = this.json;\r\n\t\tvar parser = this;\r\n\r\n\t\t// Clear the loader cache\r\n\t\tthis.cache.removeAll();\r\n\r\n\t\t// Mark the special nodes/meshes in json for efficient parse\r\n\t\tthis.markDefs();\r\n\r\n\t\t// Fire the callback on complete\r\n\t\tthis.getMultiDependencies( [\r\n\r\n\t\t\t'scene',\r\n\t\t\t'animation',\r\n\t\t\t'camera'\r\n\r\n\t\t] ).then( function ( dependencies ) {\r\n\r\n\t\t\tvar scenes = dependencies.scenes || [];\r\n\t\t\tvar scene = scenes[ json.scene || 0 ];\r\n\t\t\tvar animations = dependencies.animations || [];\r\n\t\t\tvar asset = json.asset;\r\n\t\t\tvar cameras = dependencies.cameras || [];\r\n\r\n\t\t\tonLoad( scene, scenes, cameras, animations, asset );\r\n\r\n\t\t} ).catch( onError );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Marks the special nodes/meshes in json for efficient parse.\r\n\t */\r\n\tGLTFParser.prototype.markDefs = function () {\r\n\r\n\t\tvar nodeDefs = this.json.nodes || [];\r\n\t\tvar skinDefs = this.json.skins || [];\r\n\t\tvar meshDefs = this.json.meshes || [];\r\n\r\n\t\tvar meshReferences = {};\r\n\t\tvar meshUses = {};\r\n\r\n\t\t// Nothing in the node definition indicates whether it is a Bone or an\r\n\t\t// Object3D. Use the skins' joint references to mark bones.\r\n\t\tfor ( var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex ++ ) {\r\n\r\n\t\t\tvar joints = skinDefs[ skinIndex ].joints;\r\n\r\n\t\t\tfor ( var i = 0, il = joints.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tnodeDefs[ joints[ i ] ].isBone = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Meshes can (and should) be reused by multiple nodes in a glTF asset. To\r\n\t\t// avoid having more than one THREE.Mesh with the same name, count\r\n\t\t// references and rename instances below.\r\n\t\t//\r\n\t\t// Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\r\n\t\tfor ( var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\r\n\r\n\t\t\tvar nodeDef = nodeDefs[ nodeIndex ];\r\n\r\n\t\t\tif ( nodeDef.mesh !== undefined ) {\r\n\r\n\t\t\t\tif ( meshReferences[ nodeDef.mesh ] === undefined ) {\r\n\r\n\t\t\t\t\tmeshReferences[ nodeDef.mesh ] = meshUses[ nodeDef.mesh ] = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmeshReferences[ nodeDef.mesh ] ++;\r\n\r\n\t\t\t\t// Nothing in the mesh definition indicates whether it is\r\n\t\t\t\t// a SkinnedMesh or Mesh. Use the node's mesh reference\r\n\t\t\t\t// to mark SkinnedMesh if node has skin.\r\n\t\t\t\tif ( nodeDef.skin !== undefined ) {\r\n\r\n\t\t\t\t\tmeshDefs[ nodeDef.mesh ].isSkinnedMesh = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.json.meshReferences = meshReferences;\r\n\t\tthis.json.meshUses = meshUses;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Requests the specified dependency asynchronously, with caching.\r\n\t * @param {string} type\r\n\t * @param {number} index\r\n\t * @return {Promise<Object>}\r\n\t */\r\n\tGLTFParser.prototype.getDependency = function ( type, index ) {\r\n\r\n\t\tvar cacheKey = type + ':' + index;\r\n\t\tvar dependency = this.cache.get( cacheKey );\r\n\r\n\t\tif ( ! dependency ) {\r\n\r\n\t\t\tvar fnName = 'load' + type.charAt( 0 ).toUpperCase() + type.slice( 1 );\r\n\t\t\tdependency = this[ fnName ]( index );\r\n\t\t\tthis.cache.add( cacheKey, dependency );\r\n\r\n\t\t}\r\n\r\n\t\treturn dependency;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Requests all dependencies of the specified type asynchronously, with caching.\r\n\t * @param {string} type\r\n\t * @return {Promise<Array<Object>>}\r\n\t */\r\n\tGLTFParser.prototype.getDependencies = function ( type ) {\r\n\r\n\t\tvar dependencies = this.cache.get( type );\r\n\r\n\t\tif ( ! dependencies ) {\r\n\r\n\t\t\tvar parser = this;\r\n\t\t\tvar defs = this.json[ type + ( type === 'mesh' ? 'es' : 's' ) ] || [];\r\n\r\n\t\t\tdependencies = Promise.all( defs.map( function ( def, index ) {\r\n\r\n\t\t\t\treturn parser.getDependency( type, index );\r\n\r\n\t\t\t} ) );\r\n\r\n\t\t\tthis.cache.add( type, dependencies );\r\n\r\n\t\t}\r\n\r\n\t\treturn dependencies;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Requests all multiple dependencies of the specified types asynchronously, with caching.\r\n\t * @param {Array<string>} types\r\n\t * @return {Promise<Object<Array<Object>>>}\r\n\t */\r\n\tGLTFParser.prototype.getMultiDependencies = function ( types ) {\r\n\r\n\t\tvar results = {};\r\n\t\tvar pendings = [];\r\n\r\n\t\tfor ( var i = 0, il = types.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar type = types[ i ];\r\n\t\t\tvar value = this.getDependencies( type );\r\n\r\n\t\t\tvalue = value.then( function ( key, value ) {\r\n\r\n\t\t\t\tresults[ key ] = value;\r\n\r\n\t\t\t}.bind( this, type + ( type === 'mesh' ? 'es' : 's' ) ) );\r\n\r\n\t\t\tpendings.push( value );\r\n\r\n\t\t}\r\n\r\n\t\treturn Promise.all( pendings ).then( function () {\r\n\r\n\t\t\treturn results;\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\r\n\t * @param {number} bufferIndex\r\n\t * @return {Promise<ArrayBuffer>}\r\n\t */\r\n\tGLTFParser.prototype.loadBuffer = function ( bufferIndex ) {\r\n\r\n\t\tvar bufferDef = this.json.buffers[ bufferIndex ];\r\n\t\tvar loader = this.fileLoader;\r\n\r\n\t\tif ( bufferDef.type && bufferDef.type !== 'arraybuffer' ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\t// If present, GLB container is required to be the first buffer.\r\n\t\tif ( bufferDef.uri === undefined && bufferIndex === 0 ) {\r\n\r\n\t\t\treturn Promise.resolve( this.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body );\r\n\r\n\t\t}\r\n\r\n\t\tvar options = this.options;\r\n\r\n\t\treturn new Promise( function ( resolve, reject ) {\r\n\r\n\t\t\tloader.load( resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () {\r\n\r\n\t\t\t\treject( new Error( 'THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".' ) );\r\n\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\r\n\t * @param {number} bufferViewIndex\r\n\t * @return {Promise<ArrayBuffer>}\r\n\t */\r\n\tGLTFParser.prototype.loadBufferView = function ( bufferViewIndex ) {\r\n\r\n\t\tvar bufferViewDef = this.json.bufferViews[ bufferViewIndex ];\r\n\r\n\t\treturn this.getDependency( 'buffer', bufferViewDef.buffer ).then( function ( buffer ) {\r\n\r\n\t\t\tvar byteLength = bufferViewDef.byteLength || 0;\r\n\t\t\tvar byteOffset = bufferViewDef.byteOffset || 0;\r\n\t\t\treturn buffer.slice( byteOffset, byteOffset + byteLength );\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\r\n\t * @param {number} accessorIndex\r\n\t * @return {Promise<THREE.BufferAttribute|THREE.InterleavedBufferAttribute>}\r\n\t */\r\n\tGLTFParser.prototype.loadAccessor = function ( accessorIndex ) {\r\n\r\n\t\tvar json = this.json;\r\n\r\n\t\tvar accessorDef = this.json.accessors[ accessorIndex ];\r\n\r\n\t\tvar pendingBufferViews = [];\r\n\r\n\t\tif ( accessorDef.bufferView !== undefined ) {\r\n\r\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.bufferView ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tpendingBufferViews.push( null );\r\n\r\n\t\t}\r\n\r\n\t\tif ( accessorDef.sparse !== undefined ) {\r\n\r\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.indices.bufferView ) );\r\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.values.bufferView ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn Promise.all( pendingBufferViews ).then( function ( bufferViews ) {\r\n\r\n\t\t\tvar bufferView = bufferViews[ 0 ];\r\n\r\n\t\t\tvar itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\r\n\t\t\tvar TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\r\n\r\n\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\r\n\t\t\tvar elementBytes = TypedArray.BYTES_PER_ELEMENT;\r\n\t\t\tvar itemBytes = elementBytes * itemSize;\r\n\t\t\tvar byteStride = json.bufferViews[ accessorDef.bufferView ].byteStride;\r\n\t\t\tvar normalized = accessorDef.normalized === true;\r\n\t\t\tvar array, bufferAttribute;\r\n\r\n\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\r\n\t\t\tif ( byteStride && byteStride !== itemBytes ) {\r\n\r\n\t\t\t\t// Use the full buffer if it's interleaved.\r\n\t\t\t\tarray = new TypedArray( bufferView );\r\n\r\n\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\r\n\t\t\t\tvar ib = new THREE.InterleavedBuffer( array, byteStride / elementBytes );\r\n\r\n\t\t\t\tbufferAttribute = new THREE.InterleavedBufferAttribute( ib, itemSize, accessorDef.byteOffset / elementBytes, normalized );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( bufferView === null ) {\r\n\r\n\t\t\t\t\tarray = new TypedArray( accessorDef.count * itemSize );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tarray = new TypedArray( bufferView, accessorDef.byteOffset, accessorDef.count * itemSize );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbufferAttribute = new THREE.BufferAttribute( array, itemSize, normalized );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\r\n\t\t\tif ( accessorDef.sparse !== undefined ) {\r\n\r\n\t\t\t\tvar itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\r\n\t\t\t\tvar TypedArrayIndices = WEBGL_COMPONENT_TYPES[ accessorDef.sparse.indices.componentType ];\r\n\r\n\t\t\t\tvar byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\r\n\t\t\t\tvar byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\r\n\r\n\t\t\t\tvar sparseIndices = new TypedArrayIndices( bufferViews[ 1 ], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices );\r\n\t\t\t\tvar sparseValues = new TypedArray( bufferViews[ 2 ], byteOffsetValues, accessorDef.sparse.count * itemSize );\r\n\r\n\t\t\t\tif ( bufferView !== null ) {\r\n\r\n\t\t\t\t\t// Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\r\n\t\t\t\t\tbufferAttribute.setArray( bufferAttribute.array.slice() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var i = 0, il = sparseIndices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvar index = sparseIndices[ i ];\r\n\r\n\t\t\t\t\tbufferAttribute.setX( index, sparseValues[ i * itemSize ] );\r\n\t\t\t\t\tif ( itemSize >= 2 ) bufferAttribute.setY( index, sparseValues[ i * itemSize + 1 ] );\r\n\t\t\t\t\tif ( itemSize >= 3 ) bufferAttribute.setZ( index, sparseValues[ i * itemSize + 2 ] );\r\n\t\t\t\t\tif ( itemSize >= 4 ) bufferAttribute.setW( index, sparseValues[ i * itemSize + 3 ] );\r\n\t\t\t\t\tif ( itemSize >= 5 ) throw new Error( 'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn bufferAttribute;\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\r\n\t * @param {number} textureIndex\r\n\t * @return {Promise<THREE.Texture>}\r\n\t */\r\n\tGLTFParser.prototype.loadTexture = function ( textureIndex ) {\r\n\r\n\t\tvar parser = this;\r\n\t\tvar json = this.json;\r\n\t\tvar options = this.options;\r\n\t\tvar textureLoader = this.textureLoader;\r\n\r\n\t\tvar URL = window.URL || window.webkitURL;\r\n\r\n\t\tvar textureDef = json.textures[ textureIndex ];\r\n\t\tvar source = json.images[ textureDef.source ];\r\n\t\tvar sourceURI = source.uri;\r\n\t\tvar isObjectURL = false;\r\n\r\n\t\tif ( source.bufferView !== undefined ) {\r\n\r\n\t\t\t// Load binary image data from bufferView, if provided.\r\n\r\n\t\t\tsourceURI = parser.getDependency( 'bufferView', source.bufferView ).then( function ( bufferView ) {\r\n\r\n\t\t\t\tisObjectURL = true;\r\n\t\t\t\tvar blob = new Blob( [ bufferView ], { type: source.mimeType } );\r\n\t\t\t\tsourceURI = URL.createObjectURL( blob );\r\n\t\t\t\treturn sourceURI;\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\treturn Promise.resolve( sourceURI ).then( function ( sourceURI ) {\r\n\r\n\t\t\t// Load Texture resource.\r\n\r\n\t\t\tvar loader = THREE.Loader.Handlers.get( sourceURI ) || textureLoader;\r\n\r\n\t\t\treturn new Promise( function ( resolve, reject ) {\r\n\r\n\t\t\t\tloader.load( resolveURL( sourceURI, options.path ), resolve, undefined, reject );\r\n\r\n\t\t\t} );\r\n\r\n\t\t} ).then( function ( texture ) {\r\n\r\n\t\t\t// Clean up resources and configure Texture.\r\n\r\n\t\t\tif ( isObjectURL === true ) {\r\n\r\n\t\t\t\tURL.revokeObjectURL( sourceURI );\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.flipY = false;\r\n\r\n\t\t\tif ( textureDef.name !== undefined ) texture.name = textureDef.name;\r\n\r\n\t\t\ttexture.format = textureDef.format !== undefined ? WEBGL_TEXTURE_FORMATS[ textureDef.format ] : THREE.RGBAFormat;\r\n\r\n\t\t\tif ( textureDef.internalFormat !== undefined && texture.format !== WEBGL_TEXTURE_FORMATS[ textureDef.internalFormat ] ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Three.js does not support texture internalFormat which is different from texture format. ' +\r\n\t\t\t\t\t\t\t\t\t\t\t'internalFormat will be forced to be the same value as format.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.type = textureDef.type !== undefined ? WEBGL_TEXTURE_DATATYPES[ textureDef.type ] : THREE.UnsignedByteType;\r\n\r\n\t\t\tvar samplers = json.samplers || {};\r\n\t\t\tvar sampler = samplers[ textureDef.sampler ] || {};\r\n\r\n\t\t\ttexture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || THREE.LinearFilter;\r\n\t\t\ttexture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || THREE.LinearMipMapLinearFilter;\r\n\t\t\ttexture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || THREE.RepeatWrapping;\r\n\t\t\ttexture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || THREE.RepeatWrapping;\r\n\r\n\t\t\treturn texture;\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Asynchronously assigns a texture to the given material parameters.\r\n\t * @param {Object} materialParams\r\n\t * @param {string} textureName\r\n\t * @param {number} textureIndex\r\n\t * @return {Promise}\r\n\t */\r\n\tGLTFParser.prototype.assignTexture = function ( materialParams, textureName, textureIndex ) {\r\n\r\n\t\treturn this.getDependency( 'texture', textureIndex ).then( function ( texture ) {\r\n\r\n\t\t\tmaterialParams[ textureName ] = texture;\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\r\n\t * @param {number} materialIndex\r\n\t * @return {Promise<THREE.Material>}\r\n\t */\r\n\tGLTFParser.prototype.loadMaterial = function ( materialIndex ) {\r\n\r\n\t\tvar parser = this;\r\n\t\tvar json = this.json;\r\n\t\tvar extensions = this.extensions;\r\n\t\tvar materialDef = this.json.materials[ materialIndex ];\r\n\r\n\t\tvar materialType;\r\n\t\tvar materialParams = {};\r\n\t\tvar materialExtensions = materialDef.extensions || {};\r\n\r\n\t\tvar pending = [];\r\n\r\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_COMMON ] ) {\r\n\r\n\t\t\tvar khcExtension = extensions[ EXTENSIONS.KHR_MATERIALS_COMMON ];\r\n\t\t\tmaterialType = khcExtension.getMaterialType( materialDef );\r\n\t\t\tpending.push( khcExtension.extendParams( materialParams, materialDef, parser ) );\r\n\r\n\t\t} else if ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ] ) {\r\n\r\n\t\t\tvar sgExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];\r\n\t\t\tmaterialType = sgExtension.getMaterialType( materialDef );\r\n\t\t\tpending.push( sgExtension.extendParams( materialParams, materialDef, parser ) );\r\n\r\n\t\t} else if ( materialDef.pbrMetallicRoughness !== undefined ) {\r\n\r\n\t\t\t// Specification:\r\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\r\n\r\n\t\t\tmaterialType = THREE.MeshStandardMaterial;\r\n\r\n\t\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness;\r\n\r\n\t\t\tmaterialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\r\n\t\t\tmaterialParams.opacity = 1.0;\r\n\r\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\r\n\r\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\r\n\r\n\t\t\t\tmaterialParams.color.fromArray( array );\r\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\r\n\r\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture.index ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\r\n\t\t\tmaterialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\r\n\r\n\t\t\tif ( metallicRoughness.metallicRoughnessTexture !== undefined ) {\r\n\r\n\t\t\t\tvar textureIndex = metallicRoughness.metallicRoughnessTexture.index;\r\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'metalnessMap', textureIndex ) );\r\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'roughnessMap', textureIndex ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmaterialType = THREE.MeshPhongMaterial;\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialDef.doubleSided === true ) {\r\n\r\n\t\t\tmaterialParams.side = THREE.DoubleSide;\r\n\r\n\t\t}\r\n\r\n\t\tvar alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\r\n\r\n\t\tif ( alphaMode === ALPHA_MODES.BLEND ) {\r\n\r\n\t\t\tmaterialParams.transparent = true;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmaterialParams.transparent = false;\r\n\r\n\t\t\tif ( alphaMode === ALPHA_MODES.MASK ) {\r\n\r\n\t\t\t\tmaterialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialDef.normalTexture !== undefined ) {\r\n\r\n\t\t\tpending.push( parser.assignTexture( materialParams, 'normalMap', materialDef.normalTexture.index ) );\r\n\r\n\t\t\tmaterialParams.normalScale = new THREE.Vector2( 1, 1 );\r\n\r\n\t\t\tif ( materialDef.normalTexture.scale !== undefined ) {\r\n\r\n\t\t\t\tmaterialParams.normalScale.set( materialDef.normalTexture.scale, materialDef.normalTexture.scale );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialDef.occlusionTexture !== undefined ) {\r\n\r\n\t\t\tpending.push( parser.assignTexture( materialParams, 'aoMap', materialDef.occlusionTexture.index ) );\r\n\r\n\t\t\tif ( materialDef.occlusionTexture.strength !== undefined ) {\r\n\r\n\t\t\t\tmaterialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialDef.emissiveFactor !== undefined ) {\r\n\r\n\t\t\tif ( materialType === THREE.MeshBasicMaterial ) {\r\n\r\n\t\t\t\tmaterialParams.color = new THREE.Color().fromArray( materialDef.emissiveFactor );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmaterialParams.emissive = new THREE.Color().fromArray( materialDef.emissiveFactor );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialDef.emissiveTexture !== undefined ) {\r\n\r\n\t\t\tif ( materialType === THREE.MeshBasicMaterial ) {\r\n\r\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', materialDef.emissiveTexture.index ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'emissiveMap', materialDef.emissiveTexture.index ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn Promise.all( pending ).then( function () {\r\n\r\n\t\t\tvar material;\r\n\r\n\t\t\tif ( materialType === THREE.ShaderMaterial ) {\r\n\r\n\t\t\t\tmaterial = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].createMaterial( materialParams );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmaterial = new materialType( materialParams );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( materialDef.name !== undefined ) material.name = materialDef.name;\r\n\r\n\t\t\t// Normal map textures use OpenGL conventions:\r\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#materialnormaltexture\r\n\t\t\tif ( material.normalScale ) {\r\n\r\n\t\t\t\tmaterial.normalScale.x = - material.normalScale.x;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// emissiveTexture and baseColorTexture use sRGB encoding.\r\n\t\t\tif ( material.map ) material.map.encoding = THREE.sRGBEncoding;\r\n\t\t\tif ( material.emissiveMap ) material.emissiveMap.encoding = THREE.sRGBEncoding;\r\n\r\n\t\t\tif ( materialDef.extras ) material.userData = materialDef.extras;\r\n\r\n\t\t\treturn material;\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\r\n\t * @param {Array<Object>} primitives\r\n\t * @return {Promise<Array<THREE.BufferGeometry>>}\r\n\t */\r\n\tGLTFParser.prototype.loadGeometries = function ( primitives ) {\r\n\r\n\t\tvar cache = this.primitiveCache;\r\n\r\n\t\treturn this.getDependencies( 'accessor' ).then( function ( accessors ) {\r\n\r\n\t\t\tvar geometries = [];\r\n\r\n\t\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar primitive = primitives[ i ];\r\n\r\n\t\t\t\t// See if we've already created this geometry\r\n\t\t\t\tvar cached = getCachedGeometry( cache, primitive );\r\n\r\n\t\t\t\tif ( cached ) {\r\n\r\n\t\t\t\t\t// Use the cached geometry if it exists\r\n\t\t\t\t\tgeometries.push( cached );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// Otherwise create a new geometry\r\n\t\t\t\t\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\t\t\t\t\tvar attributes = primitive.attributes;\r\n\r\n\t\t\t\t\tfor ( var attributeId in attributes ) {\r\n\r\n\t\t\t\t\t\tvar attributeEntry = attributes[ attributeId ];\r\n\r\n\t\t\t\t\t\tvar bufferAttribute = accessors[ attributeEntry ];\r\n\r\n\t\t\t\t\t\tswitch ( attributeId ) {\r\n\r\n\t\t\t\t\t\t\tcase 'POSITION':\r\n\r\n\t\t\t\t\t\t\t\tgeometry.addAttribute( 'position', bufferAttribute );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'NORMAL':\r\n\r\n\t\t\t\t\t\t\t\tgeometry.addAttribute( 'normal', bufferAttribute );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'TEXCOORD_0':\r\n\t\t\t\t\t\t\tcase 'TEXCOORD0':\r\n\t\t\t\t\t\t\tcase 'TEXCOORD':\r\n\r\n\t\t\t\t\t\t\t\tgeometry.addAttribute( 'uv', bufferAttribute );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'TEXCOORD_1':\r\n\r\n\t\t\t\t\t\t\t\tgeometry.addAttribute( 'uv2', bufferAttribute );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'COLOR_0':\r\n\t\t\t\t\t\t\tcase 'COLOR0':\r\n\t\t\t\t\t\t\tcase 'COLOR':\r\n\r\n\t\t\t\t\t\t\t\tgeometry.addAttribute( 'color', bufferAttribute );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'WEIGHTS_0':\r\n\t\t\t\t\t\t\tcase 'WEIGHT': // WEIGHT semantic deprecated.\r\n\r\n\t\t\t\t\t\t\t\tgeometry.addAttribute( 'skinWeight', bufferAttribute );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'JOINTS_0':\r\n\t\t\t\t\t\t\tcase 'JOINT': // JOINT semantic deprecated.\r\n\r\n\t\t\t\t\t\t\t\tgeometry.addAttribute( 'skinIndex', bufferAttribute );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( primitive.indices !== undefined ) {\r\n\r\n\t\t\t\t\t\tgeometry.setIndex( accessors[ primitive.indices ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Cache this geometry\r\n\t\t\t\t\tcache.push( {\r\n\r\n\t\t\t\t\t\tprimitive: primitive,\r\n\t\t\t\t\t\tgeometry: geometry\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t\tgeometries.push( geometry );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn geometries;\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\r\n\t * @param {number} meshIndex\r\n\t * @return {Promise<THREE.Group|THREE.Mesh|THREE.SkinnedMesh>}\r\n\t */\r\n\tGLTFParser.prototype.loadMesh = function ( meshIndex ) {\r\n\r\n\t\tvar scope = this;\r\n\t\tvar json = this.json;\r\n\t\tvar extensions = this.extensions;\r\n\r\n\t\tvar meshDef = this.json.meshes[ meshIndex ];\r\n\r\n\t\treturn this.getMultiDependencies( [\r\n\r\n\t\t\t'accessor',\r\n\t\t\t'material'\r\n\r\n\t\t] ).then( function ( dependencies ) {\r\n\r\n\t\t\tvar group = new THREE.Group();\r\n\r\n\t\t\tvar primitives = meshDef.primitives;\r\n\r\n\t\t\treturn scope.loadGeometries( primitives ).then( function ( geometries ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvar primitive = primitives[ i ];\r\n\t\t\t\t\tvar geometry = geometries[ i ];\r\n\r\n\t\t\t\t\tvar material = primitive.material === undefined\r\n\t\t\t\t\t\t? createDefaultMaterial()\r\n\t\t\t\t\t\t: dependencies.materials[ primitive.material ];\r\n\r\n\t\t\t\t\tif ( material.aoMap\r\n\t\t\t\t\t\t\t&& geometry.attributes.uv2 === undefined\r\n\t\t\t\t\t\t\t&& geometry.attributes.uv !== undefined ) {\r\n\r\n\t\t\t\t\t\tconsole.log( 'THREE.GLTFLoader: Duplicating UVs to support aoMap.' );\r\n\t\t\t\t\t\tgeometry.addAttribute( 'uv2', new THREE.BufferAttribute( geometry.attributes.uv.array, 2 ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// If the material will be modified later on, clone it now.\r\n\t\t\t\t\tvar useVertexColors = geometry.attributes.color !== undefined;\r\n\t\t\t\t\tvar useFlatShading = geometry.attributes.normal === undefined;\r\n\t\t\t\t\tvar useSkinning = meshDef.isSkinnedMesh === true;\r\n\t\t\t\t\tvar useMorphTargets = primitive.targets !== undefined;\r\n\r\n\t\t\t\t\tif ( useVertexColors || useFlatShading || useSkinning || useMorphTargets ) {\r\n\r\n\t\t\t\t\t\tif ( material.isGLTFSpecularGlossinessMaterial ) {\r\n\r\n\t\t\t\t\t\t\tvar specGlossExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];\r\n\t\t\t\t\t\t\tmaterial = specGlossExtension.cloneMaterial( material );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tmaterial = material.clone();\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( useVertexColors ) {\r\n\r\n\t\t\t\t\t\tmaterial.vertexColors = THREE.VertexColors;\r\n\t\t\t\t\t\tmaterial.needsUpdate = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( useFlatShading ) {\r\n\r\n\t\t\t\t\t\tmaterial.flatShading = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar mesh;\r\n\r\n\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\r\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\r\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\r\n\t\t\t\t\t\tprimitive.mode === undefined ) {\r\n\r\n\t\t\t\t\t\tif ( useSkinning ) {\r\n\r\n\t\t\t\t\t\t\tmesh = new THREE.SkinnedMesh( geometry, material );\r\n\t\t\t\t\t\t\tmaterial.skinning = true;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tmesh = new THREE.Mesh( geometry, material );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ) {\r\n\r\n\t\t\t\t\t\t\tmesh.drawMode = THREE.TriangleStripDrawMode;\r\n\r\n\t\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ) {\r\n\r\n\t\t\t\t\t\t\tmesh.drawMode = THREE.TriangleFanDrawMode;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\r\n\r\n\t\t\t\t\t\tmesh = new THREE.LineSegments( geometry, material );\r\n\r\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_STRIP ) {\r\n\r\n\t\t\t\t\t\tmesh = new THREE.Line( geometry, material );\r\n\r\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) {\r\n\r\n\t\t\t\t\t\tmesh = new THREE.LineLoop( geometry, material );\r\n\r\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.POINTS ) {\r\n\r\n\t\t\t\t\t\tmesh = new THREE.Points( geometry, material );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tmesh.name = meshDef.name || ( 'mesh_' + meshIndex );\r\n\r\n\t\t\t\t\tif ( useMorphTargets ) {\r\n\r\n\t\t\t\t\t\taddMorphTargets( mesh, meshDef, primitive, dependencies.accessors );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( meshDef.extras !== undefined ) mesh.userData = meshDef.extras;\r\n\t\t\t\t\tif ( primitive.extras !== undefined ) mesh.geometry.userData = primitive.extras;\r\n\r\n\t\t\t\t\t// for Specular-Glossiness.\r\n\t\t\t\t\tif ( material.isGLTFSpecularGlossinessMaterial === true ) {\r\n\r\n\t\t\t\t\t\tmesh.onBeforeRender = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].refreshUniforms;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( primitives.length > 1 ) {\r\n\r\n\t\t\t\t\t\tmesh.name += '_' + i;\r\n\r\n\t\t\t\t\t\tgroup.add( mesh );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\treturn mesh;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn group;\r\n\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\r\n\t * @param {number} cameraIndex\r\n\t * @return {Promise<THREE.Camera>}\r\n\t */\r\n\tGLTFParser.prototype.loadCamera = function ( cameraIndex ) {\r\n\r\n\t\tvar camera;\r\n\t\tvar cameraDef = this.json.cameras[ cameraIndex ];\r\n\t\tvar params = cameraDef[ cameraDef.type ];\r\n\r\n\t\tif ( ! params ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing camera parameters.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( cameraDef.type === 'perspective' ) {\r\n\r\n\t\t\tvar aspectRatio = params.aspectRatio || 1;\r\n\t\t\tvar xfov = params.yfov * aspectRatio;\r\n\r\n\t\t\tcamera = new THREE.PerspectiveCamera( THREE.Math.radToDeg( xfov ), aspectRatio, params.znear || 1, params.zfar || 2e6 );\r\n\r\n\t\t} else if ( cameraDef.type === 'orthographic' ) {\r\n\r\n\t\t\tcamera = new THREE.OrthographicCamera( params.xmag / - 2, params.xmag / 2, params.ymag / 2, params.ymag / - 2, params.znear, params.zfar );\r\n\r\n\t\t}\r\n\r\n\t\tif ( cameraDef.name !== undefined ) camera.name = cameraDef.name;\r\n\t\tif ( cameraDef.extras ) camera.userData = cameraDef.extras;\r\n\r\n\t\treturn Promise.resolve( camera );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\r\n\t * @param {number} skinIndex\r\n\t * @return {Promise<Object>}\r\n\t */\r\n\tGLTFParser.prototype.loadSkin = function ( skinIndex ) {\r\n\r\n\t\tvar skinDef = this.json.skins[ skinIndex ];\r\n\r\n\t\tvar skinEntry = { joints: skinDef.joints };\r\n\r\n\t\tif ( skinDef.inverseBindMatrices === undefined ) {\r\n\r\n\t\t\treturn Promise.resolve( skinEntry );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.getDependency( 'accessor', skinDef.inverseBindMatrices ).then( function ( accessor ) {\r\n\r\n\t\t\tskinEntry.inverseBindMatrices = accessor;\r\n\r\n\t\t\treturn skinEntry;\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\r\n\t * @param {number} animationIndex\r\n\t * @return {Promise<THREE.AnimationClip>}\r\n\t */\r\n\tGLTFParser.prototype.loadAnimation = function ( animationIndex ) {\r\n\r\n\t\tvar json = this.json;\r\n\r\n\t\tvar animationDef = this.json.animations[ animationIndex ];\r\n\r\n\t\treturn this.getMultiDependencies( [\r\n\r\n\t\t\t'accessor',\r\n\t\t\t'node'\r\n\r\n\t\t] ).then( function ( dependencies ) {\r\n\r\n\t\t\tvar tracks = [];\r\n\r\n\t\t\tfor ( var i = 0, il = animationDef.channels.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar channel = animationDef.channels[ i ];\r\n\t\t\t\tvar sampler = animationDef.samplers[ channel.sampler ];\r\n\r\n\t\t\t\tif ( sampler ) {\r\n\r\n\t\t\t\t\tvar target = channel.target;\r\n\t\t\t\t\tvar name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\r\n\t\t\t\t\tvar input = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.input ] : sampler.input;\r\n\t\t\t\t\tvar output = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.output ] : sampler.output;\r\n\r\n\t\t\t\t\tvar inputAccessor = dependencies.accessors[ input ];\r\n\t\t\t\t\tvar outputAccessor = dependencies.accessors[ output ];\r\n\r\n\t\t\t\t\tvar node = dependencies.nodes[ name ];\r\n\r\n\t\t\t\t\tif ( node ) {\r\n\r\n\t\t\t\t\t\tnode.updateMatrix();\r\n\t\t\t\t\t\tnode.matrixAutoUpdate = true;\r\n\r\n\t\t\t\t\t\tvar TypedKeyframeTrack;\r\n\r\n\t\t\t\t\t\tswitch ( PATH_PROPERTIES[ target.path ] ) {\r\n\r\n\t\t\t\t\t\t\tcase PATH_PROPERTIES.weights:\r\n\r\n\t\t\t\t\t\t\t\tTypedKeyframeTrack = THREE.NumberKeyframeTrack;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase PATH_PROPERTIES.rotation:\r\n\r\n\t\t\t\t\t\t\t\tTypedKeyframeTrack = THREE.QuaternionKeyframeTrack;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase PATH_PROPERTIES.position:\r\n\t\t\t\t\t\t\tcase PATH_PROPERTIES.scale:\r\n\t\t\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\t\t\tTypedKeyframeTrack = THREE.VectorKeyframeTrack;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar targetName = node.name ? node.name : node.uuid;\r\n\r\n\t\t\t\t\t\tif ( sampler.interpolation === 'CUBICSPLINE' ) {\r\n\r\n\t\t\t\t\t\t\tvar itemSize = outputAccessor.itemSize;\r\n\t\t\t\t\t\t\tvar TypedArray = outputAccessor.array.constructor;\r\n\t\t\t\t\t\t\tvar outputAccessorValues = new TypedArray( outputAccessor.count * itemSize / 3 );\r\n\r\n\t\t\t\t\t\t\t// Layout of keyframe output values for CUBICSPLINE animations:\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\t//   [ inTangent1, splineVertex1, outTangent1, inTangent2, splineVertex2, ... ]\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\t// THREE.KeyframeTrack infers tangents from the spline vertices when interpolating:\r\n\t\t\t\t\t\t\t// those values are extracted below. This still guarantees smooth curves, but does\r\n\t\t\t\t\t\t\t// throw away more precise information in the tangents. In the future, consider\r\n\t\t\t\t\t\t\t// re-sampling at a higher framerate using the tangents provided.\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\t// See: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\r\n\r\n\t\t\t\t\t\t\tfor ( var j = 0, jl = outputAccessor.count; j < jl; j += 3 ) {\r\n\r\n\t\t\t\t\t\t\t\toutputAccessorValues[ j * itemSize / 3 ] = outputAccessor.getX( j + 1 );\r\n\t\t\t\t\t\t\t\tif ( itemSize > 1 ) outputAccessorValues[ j * itemSize / 3 + 1 ] = outputAccessor.getY( j + 1 );\r\n\t\t\t\t\t\t\t\tif ( itemSize > 2 ) outputAccessorValues[ j * itemSize / 3 + 2 ] = outputAccessor.getZ( j + 1 );\r\n\t\t\t\t\t\t\t\tif ( itemSize > 3 ) outputAccessorValues[ j * itemSize / 3 + 3 ] = outputAccessor.getW( j + 1 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\toutputAccessor = new THREE.BufferAttribute( outputAccessorValues, itemSize / 3, outputAccessor.normalized );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : THREE.InterpolateLinear;\r\n\r\n\t\t\t\t\t\tvar targetNames = [];\r\n\r\n\t\t\t\t\t\tif ( PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.weights ) {\r\n\r\n\t\t\t\t\t\t\t// node should be THREE.Group here but\r\n\t\t\t\t\t\t\t// PATH_PROPERTIES.weights(morphTargetInfluences) should be\r\n\t\t\t\t\t\t\t// the property of a mesh object under node.\r\n\t\t\t\t\t\t\t// So finding targets here.\r\n\r\n\t\t\t\t\t\t\tnode.traverse( function ( object ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( object.isMesh === true && object.material.morphTargets === true ) {\r\n\r\n\t\t\t\t\t\t\t\t\ttargetNames.push( object.name ? object.name : object.uuid );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\ttargetNames.push( targetName );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// KeyframeTrack.optimize() will modify given 'times' and 'values'\r\n\t\t\t\t\t\t// buffers before creating a truncated copy to keep. Because buffers may\r\n\t\t\t\t\t\t// be reused by other tracks, make copies here.\r\n\t\t\t\t\t\tfor ( var j = 0, jl = targetNames.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\ttracks.push( new TypedKeyframeTrack(\r\n\t\t\t\t\t\t\t\ttargetNames[ j ] + '.' + PATH_PROPERTIES[ target.path ],\r\n\t\t\t\t\t\t\t\tTHREE.AnimationUtils.arraySlice( inputAccessor.array, 0 ),\r\n\t\t\t\t\t\t\t\tTHREE.AnimationUtils.arraySlice( outputAccessor.array, 0 ),\r\n\t\t\t\t\t\t\t\tinterpolation\r\n\t\t\t\t\t\t\t) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar name = animationDef.name !== undefined ? animationDef.name : 'animation_' + animationIndex;\r\n\r\n\t\t\treturn new THREE.AnimationClip( name, undefined, tracks );\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\r\n\t * @param {number} nodeIndex\r\n\t * @return {Promise<THREE.Object3D>}\r\n\t */\r\n\tGLTFParser.prototype.loadNode = function ( nodeIndex ) {\r\n\r\n\t\tvar json = this.json;\r\n\t\tvar extensions = this.extensions;\r\n\r\n\t\tvar meshReferences = this.json.meshReferences;\r\n\t\tvar meshUses = this.json.meshUses;\r\n\r\n\t\tvar nodeDef = this.json.nodes[ nodeIndex ];\r\n\r\n\t\treturn this.getMultiDependencies( [\r\n\r\n\t\t\t'mesh',\r\n\t\t\t'skin',\r\n\t\t\t'camera'\r\n\r\n\t\t] ).then( function ( dependencies ) {\r\n\r\n\t\t\tvar node;\r\n\r\n\t\t\tif ( nodeDef.isBone === true ) {\r\n\r\n\t\t\t\tnode = new THREE.Bone();\r\n\r\n\t\t\t} else if ( nodeDef.mesh !== undefined ) {\r\n\r\n\t\t\t\tvar mesh = dependencies.meshes[ nodeDef.mesh ];\r\n\r\n\t\t\t\tnode = mesh.clone();\r\n\r\n\t\t\t\t// for Specular-Glossiness\r\n\t\t\t\tif ( mesh.isGroup === true ) {\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = mesh.children.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar child = mesh.children[ i ];\r\n\r\n\t\t\t\t\t\tif ( child.material && child.material.isGLTFSpecularGlossinessMaterial === true ) {\r\n\r\n\t\t\t\t\t\t\tnode.children[ i ].onBeforeRender = child.onBeforeRender;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( mesh.material && mesh.material.isGLTFSpecularGlossinessMaterial === true ) {\r\n\r\n\t\t\t\t\t\tnode.onBeforeRender = mesh.onBeforeRender;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( meshReferences[ nodeDef.mesh ] > 1 ) {\r\n\r\n\t\t\t\t\tnode.name += '_instance_' + meshUses[ nodeDef.mesh ] ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( nodeDef.camera !== undefined ) {\r\n\r\n\t\t\t\tnode = dependencies.cameras[ nodeDef.camera ];\r\n\r\n\t\t\t} else if ( nodeDef.extensions\r\n\t\t\t\t\t && nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS ]\r\n\t\t\t\t\t && nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS ].light !== undefined ) {\r\n\r\n\t\t\t\tvar lights = extensions[ EXTENSIONS.KHR_LIGHTS ].lights;\r\n\t\t\t\tnode = lights[ nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS ].light ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnode = new THREE.Object3D();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( nodeDef.name !== undefined ) {\r\n\r\n\t\t\t\tnode.name = THREE.PropertyBinding.sanitizeNodeName( nodeDef.name );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( nodeDef.extras ) node.userData = nodeDef.extras;\r\n\r\n\t\t\tif ( nodeDef.matrix !== undefined ) {\r\n\r\n\t\t\t\tvar matrix = new THREE.Matrix4();\r\n\t\t\t\tmatrix.fromArray( nodeDef.matrix );\r\n\t\t\t\tnode.applyMatrix( matrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( nodeDef.translation !== undefined ) {\r\n\r\n\t\t\t\t\tnode.position.fromArray( nodeDef.translation );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( nodeDef.rotation !== undefined ) {\r\n\r\n\t\t\t\t\tnode.quaternion.fromArray( nodeDef.rotation );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( nodeDef.scale !== undefined ) {\r\n\r\n\t\t\t\t\tnode.scale.fromArray( nodeDef.scale );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn node;\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\r\n\t * @param {number} sceneIndex\r\n\t * @return {Promise<THREE.Scene>}\r\n\t */\r\n\tGLTFParser.prototype.loadScene = function () {\r\n\r\n\t\t// scene node hierachy builder\r\n\r\n\t\tfunction buildNodeHierachy( nodeId, parentObject, json, allNodes, skins ) {\r\n\r\n\t\t\tvar node = allNodes[ nodeId ];\r\n\t\t\tvar nodeDef = json.nodes[ nodeId ];\r\n\r\n\t\t\t// build skeleton here as well\r\n\r\n\t\t\tif ( nodeDef.skin !== undefined ) {\r\n\r\n\t\t\t\tvar meshes = node.isGroup === true ? node.children : [ node ];\r\n\r\n\t\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvar mesh = meshes[ i ];\r\n\t\t\t\t\tvar skinEntry = skins[ nodeDef.skin ];\r\n\r\n\t\t\t\t\tvar bones = [];\r\n\t\t\t\t\tvar boneInverses = [];\r\n\r\n\t\t\t\t\tfor ( var j = 0, jl = skinEntry.joints.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\tvar jointId = skinEntry.joints[ j ];\r\n\t\t\t\t\t\tvar jointNode = allNodes[ jointId ];\r\n\r\n\t\t\t\t\t\tif ( jointNode ) {\r\n\r\n\t\t\t\t\t\t\tbones.push( jointNode );\r\n\r\n\t\t\t\t\t\t\tvar mat = new THREE.Matrix4();\r\n\r\n\t\t\t\t\t\t\tif ( skinEntry.inverseBindMatrices !== undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tmat.fromArray( skinEntry.inverseBindMatrices.array, j * 16 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tboneInverses.push( mat );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Joint \"%s\" could not be found.', jointId );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tmesh.bind( new THREE.Skeleton( bones, boneInverses ), mesh.matrixWorld );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// build node hierachy\r\n\r\n\t\t\tparentObject.add( node );\r\n\r\n\t\t\tif ( nodeDef.children ) {\r\n\r\n\t\t\t\tvar children = nodeDef.children;\r\n\r\n\t\t\t\tfor ( var i = 0, il = children.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvar child = children[ i ];\r\n\t\t\t\t\tbuildNodeHierachy( child, node, json, allNodes, skins );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn function loadScene( sceneIndex ) {\r\n\r\n\t\t\tvar json = this.json;\r\n\t\t\tvar extensions = this.extensions;\r\n\t\t\tvar sceneDef = this.json.scenes[ sceneIndex ];\r\n\r\n\t\t\treturn this.getMultiDependencies( [\r\n\r\n\t\t\t\t'node',\r\n\t\t\t\t'skin'\r\n\r\n\t\t\t] ).then( function ( dependencies ) {\r\n\r\n\t\t\t\tvar scene = new THREE.Scene();\r\n\t\t\t\tif ( sceneDef.name !== undefined ) scene.name = sceneDef.name;\r\n\r\n\t\t\t\tif ( sceneDef.extras ) scene.userData = sceneDef.extras;\r\n\r\n\t\t\t\tvar nodeIds = sceneDef.nodes || [];\r\n\r\n\t\t\t\tfor ( var i = 0, il = nodeIds.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tbuildNodeHierachy( nodeIds[ i ], scene, json, dependencies.nodes, dependencies.skins );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Ambient lighting, if present, is always attached to the scene root.\r\n\t\t\t\tif ( sceneDef.extensions\r\n\t\t\t\t\t\t && sceneDef.extensions[ EXTENSIONS.KHR_LIGHTS ]\r\n\t\t\t\t\t\t && sceneDef.extensions[ EXTENSIONS.KHR_LIGHTS ].light !== undefined ) {\r\n\r\n\t\t\t\t\tvar lights = extensions[ EXTENSIONS.KHR_LIGHTS ].lights;\r\n\t\t\t\t\tscene.add( lights[ sceneDef.extensions[ EXTENSIONS.KHR_LIGHTS ].light ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn scene;\r\n\r\n\t\t\t} );\r\n\r\n\t\t};\r\n\r\n\t}();\r\n\r\n\treturn GLTFLoader;\r\n\r\n} )();\r\n\r\nexport default GLTFLoader\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/js/GLTFLoader.js\n// module id = xkEE\n// module chunks = 1"],"sourceRoot":""}